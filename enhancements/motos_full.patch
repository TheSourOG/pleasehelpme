diff --git a/Makefile.split b/Makefile.split
index 0b75652..1a83754 100644
--- a/Makefile.split
+++ b/Makefile.split
@@ -47,7 +47,7 @@ LEVEL_ELF_FILES := $(addprefix $(BUILD_DIR)/levels/,$(addsuffix .elf,$(LEVEL_FIL
 KOOPA_DIRS       := koopa_flag poundable_pole koopa piranha_plant whomp chain_ball chain_chomp
 CAPSWITCH_DIRS   := capswitch springboard
 CHILLYCHIEF_DIRS := chillychief moneybag
-BULLY_DIRS       := bully blargg
+BULLY_DIRS       := bully blargg motos
 SPINDRIFT_DIRS   := spindrift penguin snowman
 KING_BOBOMB_DIRS := king_bobomb water_bubble
 BOO_DIRS         := bookend book chair small_key mad_piano boo haunted_cage
diff --git a/actors/group2.c b/actors/group2.c
index 2d4de87..21c4e99 100644
--- a/actors/group2.c
+++ b/actors/group2.c
@@ -14,3 +14,7 @@ UNUSED static const u64 binid_0 = 0;
 #include "blargg/anims/data.inc.c"
 #include "blargg/anims/table.inc.c"
 UNUSED static const u64 binid_1 = 1;
+
+#include "motos/model.inc.c"
+#include "motos/anims/anim.inc.c"
+UNUSED static const u64 binid_2 = 2;
diff --git a/actors/group2.h b/actors/group2.h
index 45d1aad..a7eedc6 100644
--- a/actors/group2.h
+++ b/actors/group2.h
@@ -29,4 +29,6 @@ extern const Gfx bully_seg5_dl_05003F80[];
 extern const Gfx bully_seg5_dl_05003FC8[];
 extern const struct Animation *const bully_seg5_anims_0500470C[];
 
+#include "motos/header.h"
+
 #endif
diff --git a/actors/group2_geo.c b/actors/group2_geo.c
index 88a66f4..8cb2fc0 100644
--- a/actors/group2_geo.c
+++ b/actors/group2_geo.c
@@ -9,3 +9,5 @@
 
 #include "bully/geo.inc.c"
 #include "blargg/geo.inc.c"
+
+#include "motos/geo.inc.c"
diff --git a/actors/motos/anims/anim.inc.c b/actors/motos/anims/anim.inc.c
new file mode 100644
index 0000000..0ed9aba
--- /dev/null
+++ b/actors/motos/anims/anim.inc.c
@@ -0,0 +1,2076 @@
+/**************************************************************/
+/*	shape data motos_basedata_A (skeleton & animation) 		  */
+/**************************************************************/
+
+#define	softspriteON	1
+
+#define AnimeRecord const struct Animation
+#define AnimePtr struct Animation *const
+
+#define MAP_ANIM_NORMAL 0x00
+
+/*-------------------------------------------------------------*/
+/*	animation data                                      	   */
+/*-------------------------------------------------------------*/
+
+static short motos_basedata_A_prm[]={
+	    0,  279,-30870,30938,30938,-30870,-13783,-13783,
+	16383,-16383,-32767,-7332,16383,-32767,-7332,16383,
+	-16383,-32767,-7332,16383,-32767,-7332,-16383,-16383,
+	-9050,-32767,-32767,23715,16383,16383,16383,-32767,
+	-16383,};
+
+static unsigned short motos_basedata_A_tbl[]= {
+	     1,     0,	/* body_sprite(35) */
+	     1,     1,
+	     1,     0,
+	     1,     0,	/* body_sprite(35) */
+	     1,     0,
+	     1,     0,
+	     1,    32,	/* chn29(34) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* jnt29_1(29) */
+	     1,     0,
+	     1,    24,
+	     1,    16,	/* chn33(25) */
+	     1,    17,
+	     1,    18,
+	     1,     0,	/* jnt33_1(13) */
+	     1,     0,
+	     1,     2,
+	     1,     0,	/* cube5(1) */
+	     1,     0,
+	     1,     0,
+	     1,     9,	/* chn32(20) */
+	     1,    10,
+	     1,    11,
+	     1,     0,	/* jnt32_1(14) */
+	     1,     0,
+	     1,     3,
+	     1,     0,	/* cube6(2) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* eff29(11) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* L_arm_sprite(0) */
+	     1,     0,
+	     1,     0,
+	     1,    30,	/* chn31(33) */
+	     1,    31,
+	     1,     0,
+	     1,    25,	/* jnt31_1(30) */
+	     1,    26,
+	     1,    27,
+	     1,    19,	/* chn35(26) */
+	     1,    20,
+	     1,    21,
+	     1,     0,	/* jnt35_1(15) */
+	     1,     0,
+	     1,     4,
+	     1,     0,	/* cube3(4) */
+	     1,     0,
+	     1,     0,
+	     1,    12,	/* chn37(21) */
+	     1,    13,
+	     1,    14,
+	     1,     0,	/* jnt37_1(16) */
+	     1,     0,
+	     1,     5,
+	     1,     0,	/* cube4(5) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* eff31(12) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* R_arm_sprite(3) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn38(32) */
+	     1,    29,
+	     1,     0,
+	     1,     0,	/* jnt38_1(27) */
+	     1,     0,
+	     1,    22,
+	     1,     0,	/* jnt38_2(22) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* jnt38_3(17) */
+	     1,     0,
+	     1,     6,
+	     1,     0,	/* cube2(6) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* L_foot_sprite(7) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn40(31) */
+	     1,    28,
+	     1,     0,
+	     1,     0,	/* jnt40_1(28) */
+	     1,     0,
+	     1,    23,
+	     1,     0,	/* jnt40_2(23) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* jnt40_3(18) */
+	     1,     0,
+	     1,     7,
+	     1,     0,	/* cube7(8) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* R_foot_sprite(9) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn41(24) */
+	     1,    15,
+	     1,     0,
+	     1,     0,	/* jnt41_1(19) */
+	     1,     0,
+	     1,     8,
+	     1,     0,	/* sphere3(10) */
+	     1,     0,
+	     1,     0,
+};
+
+AnimeRecord motos_basedata_A_anm={
+	MAP_ANIM_NORMAL,	/* attr 	*/
+	0,					/* code 	*/
+	0,					/* start 	*/
+	0,					/* loop 	*/
+	100,
+	36,
+	motos_basedata_A_prm,
+	motos_basedata_A_tbl,
+    0
+};
+
+
+/*=============================================================*/
+/*  END END */
+/*=============================================================*/
+
+/*-------------------------------------------------------------*/
+
+static short motos_carry_prm[]={
+	    0,    0,    0,    0,    0,    0,    0,    0,
+	    0,    0,    0,    0,    0,    0,    0,   13,
+	   30,   45,   57,   57,   50,   42,   30,   20,
+	   17,   13,   10,    7,    4,    2,    1,    0,
+	    0,  272,  273,  275,  276,  278,  280,  279,
+	  278,  278,  278,  278,  278,  278,  278,  282,
+	  287,  292,  294,  291,  287,  290,  287,  285,
+	  284,  283,  282,  281,  281,  280,  280,  279,
+	  279,   48,   45,   39,   29,   17,    5,   -5,
+	  -15,  -22,  -24,  -21,  -16,   -9,    7,   22,
+	   37,   52,   69,   92,  114,  117,   53,    3,
+	   -5,  -10,  -11,  -11,   -9,   -6,   -3,    0,
+	    0, 2816, 2721, 2458, 2058, 1552,  973,  350,
+	 -283, -897,-1460,-2352,-3527,-4311,-4030,-2198,
+	  694, 3863, 6521, 7880, 7014, 4467, 1656,    0,
+	 -478, -733, -808, -748, -598, -404, -209,  -59,
+	    0,    0,   59,  207,  400,  593,  741,  800,
+	  726,  474,    0,-1447,-3910,-6369,-7807,-8058,
+	-7757,-7076,-6193,-5281,-4044,-2410, -891,    0,
+	  321,  491,  541,  501,  401,  270,  140,   40,
+	    0,    0,  -11,  -40,  -77, -115, -144, -155,
+	 -141,  -92,    0,  436, 1172, 1702, 1517,  279,
+	-1658,-3770,-5528,-6406,-5774,-3997,-2031, -834,
+	 -416, -132,   38,  121,  138,  112,   65,   20,
+	    0,-1102,-1093,-1069,-1034, -991, -943, -894,
+	 -847, -807, -776, -761, -758, -762, -764, -756,
+	 -732, -692, -646, -594, -538, -478, -417, -356,
+	 -295, -236, -181, -131,  -87,  -51,  -23,   -6,
+	    0, 1731, 1723, 1699, 1662, 1611, 1550, 1478,
+	 1399, 1312, 1220, 1094,  925,  737,  555,  405,
+	  313,  260,  214,  174,  139,  109,   84,   62,
+	   45,   31,   21,   13,    7,    3,    1,    0,
+	    0,-24154,-24067,-23835,-23502,-23114,-22716,-22353,
+	-22068,-21908,-21916,-22311,-23120,-24108,-25037,-25671,
+	-25773,-25457,-25007,-24444,-23791,-23068,-22296,-21497,
+	-20692,-19902,-19148,-18452,-17835,-17318,-16922,-16669,
+	-16580,    0,   -7,  -26,  -51,  -76,  -95, -103,
+	  -94,  -61,    0,  140,  371,  641,  898, 1090,
+	 1166, 1152, 1115, 1058,  983,  895,  797,  691,
+	  583,  474,  368,  270,  182,  107,   50,   13,
+	    0,-3441,-3425,-3377,-3302,-3201,-3078,-2936,
+	-2778,-2606,-2424,-2179,-1848,-1481,-1126, -833,
+	 -651, -547, -454, -372, -301, -239, -186, -142,
+	 -105,  -75,  -51,  -32,  -19,   -9,   -3,    0,
+	    0,22385,22618,23250,24176,25295,26501,27694,
+	28768,29622,30151,30061,29356,28385,27500,27049,
+	27382,28361,29586,31014,32602,-31224,-29443,-27628,
+	-25824,-24072,-22416,-20897,-19559,-18444,-17595,-17054,
+	-16864,-2323,-2311,-2276,-2221,-2149,-2063,-1966,
+	-1861,-1750,-1636,-1492,-1304,-1097, -896, -727,
+	 -616, -544, -476, -412, -352, -297, -247, -200,
+	 -159, -122,  -90,  -63,  -40,  -22,  -10,   -2,
+	    0, 1628, 1628, 1626, 1616, 1594, 1556, 1497,
+	 1412, 1297, 1147,  884,  486,   29, -406, -746,
+	 -911, -947, -952, -930, -886, -823, -745, -656,
+	 -560, -460, -361, -267, -181, -107,  -50,  -13,
+	    0,21497,21772,22512,23584,24855,26194,27469,
+	28548,29298,29587,28894,27174,25012,22993,21704,
+	21728,22804,24238,25970,27943,30097,32374,-30820,
+	-28476,-26188,-24013,-22010,-20240,-18760,-17630,-16909,
+	-16655, 2294, 2284, 2256, 2210, 2146, 2068, 1974,
+	 1867, 1747, 1616, 1430, 1171,  882,  603,  376,
+	  242,  175,  119,   74,   39,   12,   -6,  -18,
+	  -25,  -27,  -26,  -22,  -17,  -11,   -5,   -1,
+	    0,  930,  920,  895,  859,  815,  770,  726,
+	  690,  664,  655,  679,  739,  814,  884,  929,
+	  929,  892,  843,  784,  716,  643,  565,  485,
+	  404,  326,  252,  183,  122,   72,   33,    8,
+	    0,-24532,-24418,-24117,-23693,-23208,-22726,-22311,
+	-22024,-21929,-22090,-22867,-24321,-26065,-27713,-28879,
+	-29178,-28800,-28218,-27462,-26565,-25558,-24472,-23340,
+	-22193,-21063,-19980,-18977,-18086,-17338,-16764,-16397,
+	-16267,    0,    7,   26,   50,   73,   87,  100,
+	  111,  109,   78,   14,  -73, -174, -277, -371,
+	 -446, -489, -491, -116,  306,  310,  189,   97,
+	   74,   54,   38,   25,   15,    8,    3,    0,
+	    0,    0,   -2,   -7,  -13,  -19,  -23,  -24,
+	  -23,  -22,  -20,  -17,  -12,   -5,    1,    5,
+	    6,    1,  -11,  -94, -182, -187, -164, -141,
+	 -124, -105,  -84,  -63,  -44,  -26,  -12,   -3,
+	    0,-13783,-13767,-13726,-13675,-13627,-13596,-13602,
+	-13634,-13652,-13615,-13507,-13352,-13171,-12988,-12824,
+	-12702,-12645,-12675,-13503,-14423,-14443,-14193,-14001,
+	-13951,-13909,-13873,-13844,-13821,-13804,-13792,-13785,
+	-13783,    0,  -10,  -36,  -69, -100, -121, -101,
+	  -54,  -38, -108, -349, -709,-1034,-1173,-1159,
+	-1125,-1076,-1013, -939, -856, -766, -672, -575,
+	 -479, -386, -297, -216, -144,  -84,  -39,  -10,
+	    0,    0,    2,    9,   18,   26,   31,   26,
+	   13,    9,   28,   94,  192,  280,  318,  314,
+	  305,  292,  275,  255,  232,  208,  182,  156,
+	  130,  105,   80,   58,   39,   23,   10,    2,
+	    0,-13783,-13769,-13732,-13687,-13644,-13616,-13597,
+	-13584,-13592,-13634,-13746,-13911,-14061,-14130,-14133,
+	-14129,-14119,-14103,-14083,-14058,-14031,-14002,-13972,
+	-13941,-13911,-13882,-13856,-13832,-13812,-13797,-13787,
+	-13783,    0,  -65, -230, -443, -657, -822, -887,
+	 -805, -526,    0, 1727, 4661, 7429, 8656, 8579,
+	 8360, 8015, 7564, 7024, 6412, 5747, 5046, 4328,
+	 3610, 2909, 2244, 1632, 1092,  641,  296,   77,
+	    0,16383,-16383,-32767,-7332,16383,-32767,-7332,
+	-4693,-4693,-4693,-4693,-4693,-4693,-4693,-4693,
+	-4693,-4693,-4283,-3587,-2883,-2454,-2371,-2462,
+	-2640,-2817,-2909,-2573,-3088,-3749,-4172,-4329,
+	-4451,-4542,-4607,-4650,-4676,-4688,-4693,-4693,
+	    0,    0,    0,    0,    0,    0,    0,    0,
+	    0,    0, -631,-1707,-2861,-3728,-4259,-4667,
+	-4977,-5215,-5405,-4775,-3025,-1114,    0,  314,
+	  481,  530,  491,  393,  265,  137,   39,    0,
+	-2711,-2263,-1815,-1366, -918, -470,  -22,  426,
+	  874, 1322,  -41,-2677,-5372,-6912,-7007,-6401,
+	-5425,-4413,-3699,-4184,-2766,-1034,    0,  275,
+	  421,  465,  430,  344,  232,  120,   34,    0,
+	 6675, 6675, 6677, 6679, 6681, 6682, 6683, 6682,
+	 6679, 6675, 6654, 6622, 6604, 6664, 6887, 7155,
+	 7415, 7612, 7690, 7673, 7626, 7554, 7462, 7356,
+	 7242, 7125, 7010, 6904, 6812, 6740, 6692, 6675,
+	    0,   -3,  -11,  -22,  -33,  -42,  -45,  -41,
+	  -26,    0,  128,  325,  409, -127,  642, 1660,
+	 2686, 3481, 3804, 3746, 3572, 3302, 2959, 2562,
+	 2133, 1693, 1263,  864,  518,  244,   64,    0,
+	-2816,-2715,-2437,-2017,-1492, -897, -269,  356,
+	  943, 1456, 1930, 2382, 2746, 2649, 3591, 4790,
+	 5958, 6811, 7060, 6816, 6399, 5844, 5184, 4451,
+	 3680, 2904, 2155, 1468,  876,  411,  108,    0,
+	16383,-16383,-32767,-7332,16383,-32767,-7332,-16383,
+	-16383,  705,  421, -346,-1472,-2831,-4298,-5747,
+	-7053,-8090,-8734,-8312,-6856,-5294,-4555,-5002,
+	-6077,-7331,-8313,-8571,-8211,-7663,-6963,-6151,
+	-5263,-4339,-3414,-2529,-1719,-1023, -480, -126,
+	    0, -440, -673,-1309,-2255,-3419,-4706,-6024,
+	-7279,-8379,-9230,-9776,-10013,-9919,-9474,-8543,
+	-7198,-5729,-4425,-3575,-3066,-2594,-2157,-1759,
+	-1399,-1078, -797, -557, -358, -203,  -90,  -22,
+	    0,-12083,-11874,-11310,-10488,-9501,-8446,-7417,
+	-6510,-5820,-5442,-6129,-7811,-9351,-9614,-7995,
+	-5224,-2165,  315, 1355, 1206,  737,    4, -933,
+	-2019,-3194,-4400,-5579,-6674,-7627,-8379,-8873,
+	-9050,32010,32261,-32584,-31560,-30300,-28905,-27475,
+	-26110,-24910,-23976,-23287,-22871,-22899,-23545,-25103,
+	-27387,-29845,-31928,32446,32015,31733,31580,31536,
+	31582,31697,31861,32055,32258,32450,32613,32725,
+	-32767,32304,32049,31360,30349,29132,27822,26532,
+	25377,24470,23925,24387,25827,27352,28068,27615,
+	26534,25276,24295,24041,24410,24971,25684,26511,
+	27415,28355,29295,30196,31019,31726,32278,32638,
+	-32767,20480,20649,21114,21816,22694,23687,24734,
+	25776,26750,27598,28682,29961,30759,30403,28347,
+	25095,21549,18611,17184,16977,17068,17407,17946,
+	18636,19427,20272,21120,21924,22635,23203,23579,
+	23715,16383,16383,16383,-32767,-16383,};
+
+static unsigned short motos_carry_tbl[]= {
+	    32,     1,	/* body_sprite(35) */
+	    32,    33,
+	    32,    65,
+	    32,    97,	/* body_sprite(35) */
+	    32,   129,
+	    32,   161,
+	     1,  1205,	/* chn29(34) */
+	     1,     0,
+	     1,     0,
+	    32,  1009,	/* jnt29_1(29) */
+	    32,  1041,
+	    32,  1073,
+	     1,  1001,	/* chn33(25) */
+	     1,  1002,
+	     1,  1003,
+	    32,   193,	/* jnt33_1(13) */
+	    32,   225,
+	    32,   257,
+	     1,     0,	/* cube5(1) */
+	     1,     0,
+	     1,     0,
+	     1,   802,	/* chn32(20) */
+	     1,   803,
+	     1,   804,
+	    32,   289,	/* jnt32_1(14) */
+	    32,   321,
+	    32,   353,
+	     1,     0,	/* cube6(2) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* eff29(11) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* L_arm_sprite(0) */
+	     1,     0,
+	     1,     0,
+	     1,  1203,	/* chn31(33) */
+	     1,  1204,
+	     1,     0,
+	    32,  1105,	/* jnt31_1(30) */
+	    32,  1137,
+	    32,  1169,
+	     1,  1004,	/* chn35(26) */
+	     1,  1005,
+	     1,  1006,
+	    32,   385,	/* jnt35_1(15) */
+	    32,   417,
+	    32,   449,
+	     1,     0,	/* cube3(4) */
+	     1,     0,
+	     1,     0,
+	     1,   805,	/* chn37(21) */
+	     1,   806,
+	     1,   807,
+	    32,   481,	/* jnt37_1(16) */
+	    32,   513,
+	    32,   545,
+	     1,     0,	/* cube4(5) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* eff31(12) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* R_arm_sprite(3) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn38(32) */
+	     1,  1202,
+	     1,     0,
+	     1,     0,	/* jnt38_1(27) */
+	     1,     0,
+	     1,  1007,
+	    32,   808,	/* jnt38_2(22) */
+	    32,   840,
+	    32,   872,
+	    32,   577,	/* jnt38_3(17) */
+	    32,   609,
+	    32,   641,
+	     1,     0,	/* cube2(6) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* L_foot_sprite(7) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn40(31) */
+	     1,  1201,
+	     1,     0,
+	     1,     0,	/* jnt40_1(28) */
+	     1,     0,
+	     1,  1008,
+	    32,   904,	/* jnt40_2(23) */
+	    32,   936,
+	    32,   968,
+	    32,   673,	/* jnt40_3(18) */
+	    32,   705,
+	    32,   737,
+	     1,     0,	/* cube7(8) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* R_foot_sprite(9) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn41(24) */
+	     1,  1000,
+	     1,     0,
+	    32,   769,	/* jnt41_1(19) */
+	     1,     0,
+	     1,   801,
+	     1,     0,	/* sphere3(10) */
+	     1,     0,
+	     1,     0,
+};
+
+AnimeRecord motos_carry_anm={
+	MAP_ANIM_NORMAL,	/* attr 	*/
+	0,					/* code 	*/
+	0,					/* start 	*/
+	0,					/* loop 	*/
+	32,
+	36,
+	motos_carry_prm,
+	motos_carry_tbl,
+    0
+};
+
+/*-------------------------------------------------------------*/
+/*-------------------------------------------------------------*/
+
+static short motos_carry_run_prm[]={
+	    0,  314,  305,  287,  278,  284,  296,  308,
+	  314,  308,  296,  284,  278,  284,  296,  308,
+	  314,  -24,-1460, -776, 1220,-21916,-2424,30151,
+	-1636, 1147,29587, 1616,  655,-22090,   78,   79,
+	   80,   81,   81,   81,   81,   80,   80,   79,
+	   79,   79,   79,   79,   78,   78,  -20,  -15,
+	   -6,   -1,   -1,   -3,   -5,   -8,  -10,  -13,
+	  -16,  -18,  -19,  -20,  -20,  -20,-13615,-14258,
+	-15457,-16118,-16069,-15886,-15605,-15260,-14885,-14516,
+	-14185,-13928,-13762,-13667,-13625,-13615, -108, -107,
+	 -106, -105, -105, -106, -106, -107, -108, -109,
+	 -109, -110, -109, -109, -108, -108,   28,   31,
+	   35,   38,   36,   34,   32,   29,   26,   24,
+	   22,   20,   21,   24,   27,   28,-13634,-13375,
+	-12909,-12695,-12809,-13001,-13246,-13517,-13791,-14040,
+	-14239,-14364,-14294,-14038,-13762,-13634,16383,-16383,
+	-32767,-7332,16383,-32767,-7332,-1659,-1673,-1709,
+	-1758,-1811,-1860,-1896,-1910,-1899,-1870,-1830,
+	-1784,-1738,-1698,-1670,-1659, 2602, 2323, 1605,
+	  623, -447,-1429,-2147,-2426,-2210,-1640, -835,
+	   88, 1011, 1816, 2386, 2602,11354,10263, 7449,
+	 3601, -590,-4438,-7252,-8343,-7496,-5265,-2110,
+	 1505, 5121, 8276,10507,11354, 2276, 2244, 2160,
+	 2045, 1921, 1806, 1722, 1690, 1715, 1781, 1875,
+	 1983, 2091, 2185, 2251, 2276,  736,  627,  345,
+	  -38, -457, -842,-1123,-1232,-1148, -925, -609,
+	 -248,  113,  428,  651,  736,-7236,-6206,-3551,
+	   79, 4035, 7666,10321,11351,10552, 8446, 5469,
+	 2057,-1355,-4332,-6437,-7236,16383,-16383,-32767,
+	-7332,16383,-32767,-7332,-16383,-16383,-8734,-9230,
+	-5442,-23976,23925,27598,16383,16383,16383,-32767,
+	-16383,};
+
+static unsigned short motos_carry_run_tbl[]= {
+	     1,     0,	/* body_sprite(35) */
+	    16,     1,
+	     1,    17,
+	     1,    18,	/* body_sprite(35) */
+	     1,     0,
+	     1,     0,
+	     1,   248,	/* chn29(34) */
+	     1,     0,
+	     1,     0,
+	     1,   238,	/* jnt29_1(29) */
+	     1,   239,
+	     1,   240,
+	     1,   230,	/* chn33(25) */
+	     1,   231,
+	     1,   232,
+	     1,    19,	/* jnt33_1(13) */
+	     1,    20,
+	     1,    21,
+	     1,     0,	/* cube5(1) */
+	     1,     0,
+	     1,     0,
+	     1,   127,	/* chn32(20) */
+	     1,   128,
+	     1,   129,
+	     1,     0,	/* jnt32_1(14) */
+	     1,    22,
+	     1,    23,
+	     1,     0,	/* cube6(2) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* eff29(11) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* L_arm_sprite(0) */
+	     1,     0,
+	     1,     0,
+	     1,   246,	/* chn31(33) */
+	     1,   247,
+	     1,     0,
+	     1,   241,	/* jnt31_1(30) */
+	     1,   242,
+	     1,   243,
+	     1,   233,	/* chn35(26) */
+	     1,   234,
+	     1,   235,
+	     1,    24,	/* jnt35_1(15) */
+	     1,    25,
+	     1,    26,
+	     1,     0,	/* cube3(4) */
+	     1,     0,
+	     1,     0,
+	     1,   130,	/* chn37(21) */
+	     1,   131,
+	     1,   132,
+	     1,    27,	/* jnt37_1(16) */
+	     1,    28,
+	     1,    29,
+	     1,     0,	/* cube4(5) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* eff31(12) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* R_arm_sprite(3) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn38(32) */
+	     1,   245,
+	     1,     0,
+	     1,     0,	/* jnt38_1(27) */
+	     1,     0,
+	     1,   236,
+	    16,   133,	/* jnt38_2(22) */
+	    16,   149,
+	    16,   165,
+	    16,    30,	/* jnt38_3(17) */
+	    16,    46,
+	    16,    62,
+	     1,     0,	/* cube2(6) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* L_foot_sprite(7) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn40(31) */
+	     1,   244,
+	     1,     0,
+	     1,     0,	/* jnt40_1(28) */
+	     1,     0,
+	     1,   237,
+	    16,   181,	/* jnt40_2(23) */
+	    16,   197,
+	    16,   213,
+	    16,    78,	/* jnt40_3(18) */
+	    16,    94,
+	    16,   110,
+	     1,     0,	/* cube7(8) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* R_foot_sprite(9) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn41(24) */
+	     1,   229,
+	     1,     0,
+	     1,     0,	/* jnt41_1(19) */
+	     1,     0,
+	     1,   126,
+	     1,     0,	/* sphere3(10) */
+	     1,     0,
+	     1,     0,
+};
+
+AnimeRecord motos_carry_run_anm={
+	MAP_ANIM_NORMAL,	/* attr 	*/
+	0,					/* code 	*/
+	0,					/* start 	*/
+	0,					/* loop 	*/
+	16,
+	36,
+	motos_carry_run_prm,
+	motos_carry_run_tbl,
+    0
+};
+
+/*-------------------------------------------------------------*/
+/*-------------------------------------------------------------*/
+
+static short motos_carry_start_prm[]={
+	    0,  272,  273,  275,  276,  278,  280,  279,
+	  278,  278,  278,   48,   45,   39,   29,   17,
+	    5,   -5,  -15,  -20,  -24, 2816, 2716, 2440,
+	 2024, 1502,  909,  281, -345, -938,-1460,-1102,
+	-1094,-1073,-1042,-1002, -957, -909, -861, -816,
+	 -776, 1731, 1719, 1686, 1636, 1574, 1503, 1428,
+	 1353, 1282, 1220,-24154,-24102,-23958,-23740,-23467,
+	-23157,-22828,-22500,-22190,-21916,-3441,-3418,-3352,
+	-3253,-3129,-2988,-2839,-2689,-2549,-2424,22385,
+	22566,23067,23823,24771,25847,26987,28127,29203,
+	30151,-2323,-2307,-2263,-2196,-2112,-2017,-1916,
+	-1815,-1720,-1636, 1628, 1617, 1586, 1539, 1480,
+	 1413, 1343, 1272, 1205, 1147,21497,21685,22207,
+	22995,23983,25104,26291,27479,28600,29587, 2294,
+	 2278, 2235, 2169, 2086, 1992, 1892, 1793, 1699,
+	 1616,  930,  923,  906,  879,  845,  807,  767,
+	  727,  689,  655,-24532,-24476,-24318,-24080,-23782,
+	-23444,-23085,-22727,-22388,-22090,    0,    7,   26,
+	   50,   73,   87,   91,   88,   83,   78,    0,
+	   -2,   -7,  -13,  -19,  -23,  -24,  -23,  -21,
+	  -20,-13783,-13767,-13726,-13675,-13627,-13596,-13587,
+	-13594,-13606,-13615,    0,  -10,  -36,  -69, -100,
+	 -121, -126, -122, -114, -108,    0,    2,    9,
+	   18,   26,   31,   33,   32,   29,   28,-13783,
+	-13769,-13732,-13687,-13644,-13616,-13609,-13614,-13625,
+	-13634,16383,-16383,-32767,-7332,16383,-32767,-7332,
+	-4693,-2711,-2263,-1815,-1366, -918, -470,  -22,
+	  426,  874, 1322, 6675,-2816,-2716,-2441,-2024,
+	-1503, -911, -284,  343,  934, 1456,16383,-16383,
+	-32767,-7332,16383,-32767,-7332,-16383,-16383,  705,
+	  485, -123,-1042,-2195,-3502,-4888,-6273,-7581,
+	-8734, -440, -645,-1211,-2068,-3141,-4358,-5649,
+	-6939,-8156,-9230,-12083,-11928,-11500,-10853,-10042,
+	-9122,-8147,-7173,-6253,-5442,32010,32232,-32685,
+	-31755,-30590,-29267,-27866,-26464,-25142,-23976,32304,
+	32109,31569,30753,29730,28569,27339,26109,24948,
+	23925,20480,20646,21105,21798,22667,23653,24698,
+	25742,26729,27598,16383,16383,16383,-32767,-16383,
+	};
+
+static unsigned short motos_carry_start_tbl[]= {
+	     1,     0,	/* body_sprite(35) */
+	    10,     1,
+	    10,    11,
+	    10,    21,	/* body_sprite(35) */
+	     1,     0,
+	     1,     0,
+	     1,   303,	/* chn29(34) */
+	     1,     0,
+	     1,     0,
+	    10,   239,	/* jnt29_1(29) */
+	    10,   249,
+	    10,   259,
+	     1,   231,	/* chn33(25) */
+	     1,   232,
+	     1,   233,
+	    10,    31,	/* jnt33_1(13) */
+	    10,    41,
+	    10,    51,
+	     1,     0,	/* cube5(1) */
+	     1,     0,
+	     1,     0,
+	     1,   202,	/* chn32(20) */
+	     1,   203,
+	     1,   204,
+	     1,     0,	/* jnt32_1(14) */
+	    10,    61,
+	    10,    71,
+	     1,     0,	/* cube6(2) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* eff29(11) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* L_arm_sprite(0) */
+	     1,     0,
+	     1,     0,
+	     1,   301,	/* chn31(33) */
+	     1,   302,
+	     1,     0,
+	    10,   269,	/* jnt31_1(30) */
+	    10,   279,
+	    10,   289,
+	     1,   234,	/* chn35(26) */
+	     1,   235,
+	     1,   236,
+	    10,    81,	/* jnt35_1(15) */
+	    10,    91,
+	    10,   101,
+	     1,     0,	/* cube3(4) */
+	     1,     0,
+	     1,     0,
+	     1,   205,	/* chn37(21) */
+	     1,   206,
+	     1,   207,
+	    10,   111,	/* jnt37_1(16) */
+	    10,   121,
+	    10,   131,
+	     1,     0,	/* cube4(5) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* eff31(12) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* R_arm_sprite(3) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn38(32) */
+	     1,   300,
+	     1,     0,
+	     1,     0,	/* jnt38_1(27) */
+	     1,     0,
+	     1,   237,
+	     1,   208,	/* jnt38_2(22) */
+	     1,     0,
+	    10,   209,
+	    10,   141,	/* jnt38_3(17) */
+	    10,   151,
+	    10,   161,
+	     1,     0,	/* cube2(6) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* L_foot_sprite(7) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn40(31) */
+	     1,   299,
+	     1,     0,
+	     1,     0,	/* jnt40_1(28) */
+	     1,     0,
+	     1,   238,
+	     1,   219,	/* jnt40_2(23) */
+	     1,     0,
+	    10,   220,
+	    10,   171,	/* jnt40_3(18) */
+	    10,   181,
+	    10,   191,
+	     1,     0,	/* cube7(8) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* R_foot_sprite(9) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn41(24) */
+	     1,   230,
+	     1,     0,
+	     1,     0,	/* jnt41_1(19) */
+	     1,     0,
+	     1,   201,
+	     1,     0,	/* sphere3(10) */
+	     1,     0,
+	     1,     0,
+};
+
+AnimeRecord motos_carry_start_anm={
+	MAP_ANIM_NORMAL,	/* attr 	*/
+	0,					/* code 	*/
+	0,					/* start 	*/
+	0,					/* loop 	*/
+	10,
+	36,
+	motos_carry_start_prm,
+	motos_carry_start_tbl,
+    0
+};
+
+/*-------------------------------------------------------------*/
+/*-------------------------------------------------------------*/
+
+static short motos_down_recover_prm[]={
+	    0,  215,  213,  212,  214,  264,  270,  274,
+	  276,  277,  277,  277,  278,  279,  279,  279,
+	  279,  279,  279,  148,  161,  176,  156,   74,
+	   59,   48,   39,   32,   26,   21,   16,   10,
+	    6,    3,    1,    0,    0,14706,13323,10568,
+	 7637, 5793, 4944, 4162, 3445, 2796, 2213, 1697,
+	 1249,  868,  557,  313,  139,   35,    0,26535,
+	26563,27265,28717,30346,32111,-31561,-29647,-27720,
+	-25820,-23991,-22272,-20704,-19329,-18188,-17322,-16773,
+	-16580,22340,22317,23087,24793,26710,28790,30983,
+	-32293,-30019,-27777,-25617,-23587,-21736,-20112,-18764,
+	-17741,-17091,-16864,22718,22698,23466,25161,27066,
+	29131,31310,-31980,-29722,-27495,-25350,-23333,-21494,
+	-19881,-18543,-17526,-16881,-16655,26717,26751,27463,
+	28923,30561,32336,-31326,-29402,-27464,-25555,-23716,
+	-21988,-20412,-19030,-17883,-17013,-16461,-16267, -807,
+	 -835, -869, -832, -718, -578, -425, -269, -124,
+	    0,   96,  167,  211,  226,  190,  113,   35,
+	    0,    6,    6,    6,    6,    6,    7,    8,
+	    8,    6,    0,  -15,  -40,  -62,  -72,  -60,
+	  -36,  -11,    0,-14479,-14752,-15228,-15385,-15122,
+	-14724,-14252,-13772,-13344,-13033,-12901,-12922,-13024,
+	-13134,-13286,-13504,-13699,-13783, 1922, 1989, 2069,
+	 1981, 1705, 1364,  989,  615,  274,    0, -167,
+	 -237, -249, -245, -206, -122,  -38,    0, -151,
+	 -157, -163, -156, -135, -110,  -82,  -54,  -25,
+	    0,   25,   51,   71,   78,   66,   39,   12,
+	    0,-14506,-14765,-15212,-15357,-15099,-14709,-14250,
+	-13785,-13374,-13081,-12976,-13032,-13163,-13282,-13408,
+	-13575,-13721,-13783,16383,-16383,-32767,-7332,16383,
+	-32767,-7332,-1919,-1878,-1921,-2102,-2307,-2530,
+	-2767,-3011,-3258,-3501,-3737,-3958,-4160,-4337,
+	-4485,-4597,-4668,-4693, -630, -640, -630, -589,
+	 -542, -491, -438, -382, -326, -270, -217, -167,
+	 -121,  -80,  -47,  -21,   -5,    0,-6795,-7039,
+	-7080,-6633,-6121,-5558,-4958,-4335,-3704,-3079,
+	-2474,-1903,-1381, -922, -540, -249,  -64,    0,
+	 4923, 4897, 4925, 5039, 5168, 5309, 5458, 5613,
+	 5768, 5922, 6071, 6211, 6338, 6450, 6543, 6614,
+	 6659, 6675, 1028, 1043, 1027,  960,  884,  801,
+	  714,  623,  532,  441,  354,  272,  197,  131,
+	   77,   35,    9,    0,-6555,-6787,-6822,-6392,
+	-5898,-5355,-4777,-4177,-3568,-2966,-2383,-1833,
+	-1330, -888, -520, -240,  -62,    0,16383,-16383,
+	-32767,-7332,16383,-32767,-7332,-16383,-16383,-2425,
+	-2612,-2273, -880,  926, 2750, 4195, 4865, 4850,
+	 4550, 4033, 3367, 2619, 1855, 1144,  553,  149,
+	    0,-2761,-2965,-2605,-1116,  815, 2767, 4317,
+	 5041, 5039, 4736, 4204, 3513, 2734, 1938, 1196,
+	  579,  156,    0,-8809,-8824,-8764,-8561,-8296,
+	-8033,-7835,-7768,-7819,-7925,-8072,-8246,-8433,
+	-8617,-8785,-8923,-9016,-9050,-30275,-30088,-30422,
+	-31798,31948,30144,28713,28046,28054,28340,28839,
+	29486,30214,30957,31650,32226,32620,-32767,29932,
+	29727,30083,31563,-32052,-30113,-28572,-27847,-27842,
+	-28134,-28651,-29325,-30087,-30866,-31593,-32199,-32613,
+	-32767,23977,23964,24020,24207,24451,24694,24875,
+	24935,24885,24782,24642,24477,24300,24126,23966,
+	23836,23748,23715,16383,16383,16383,-32767,-16383,
+	};
+
+static unsigned short motos_down_recover_tbl[]= {
+	     1,     0,	/* body_sprite(35) */
+	    18,     1,
+	    18,    19,
+	    18,    37,	/* body_sprite(35) */
+	     1,     0,
+	     1,     0,
+	     1,   471,	/* chn29(34) */
+	     1,     0,
+	     1,     0,
+	    18,   359,	/* jnt29_1(29) */
+	    18,   377,
+	    18,   395,
+	     1,   351,	/* chn33(25) */
+	     1,   352,
+	     1,   353,
+	     1,     0,	/* jnt33_1(13) */
+	     1,     0,
+	    18,    55,
+	     1,     0,	/* cube5(1) */
+	     1,     0,
+	     1,     0,
+	     1,   236,	/* chn32(20) */
+	     1,   237,
+	     1,   238,
+	     1,     0,	/* jnt32_1(14) */
+	     1,     0,
+	    18,    73,
+	     1,     0,	/* cube6(2) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* eff29(11) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* L_arm_sprite(0) */
+	     1,     0,
+	     1,     0,
+	     1,   469,	/* chn31(33) */
+	     1,   470,
+	     1,     0,
+	    18,   413,	/* jnt31_1(30) */
+	    18,   431,
+	    18,   449,
+	     1,   354,	/* chn35(26) */
+	     1,   355,
+	     1,   356,
+	     1,     0,	/* jnt35_1(15) */
+	     1,     0,
+	    18,    91,
+	     1,     0,	/* cube3(4) */
+	     1,     0,
+	     1,     0,
+	     1,   239,	/* chn37(21) */
+	     1,   240,
+	     1,   241,
+	     1,     0,	/* jnt37_1(16) */
+	     1,     0,
+	    18,   109,
+	     1,     0,	/* cube4(5) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* eff31(12) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* R_arm_sprite(3) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn38(32) */
+	     1,   468,
+	     1,     0,
+	     1,     0,	/* jnt38_1(27) */
+	     1,     0,
+	     1,   357,
+	    18,   242,	/* jnt38_2(22) */
+	    18,   260,
+	    18,   278,
+	    18,   127,	/* jnt38_3(17) */
+	    18,   145,
+	    18,   163,
+	     1,     0,	/* cube2(6) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* L_foot_sprite(7) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn40(31) */
+	     1,   467,
+	     1,     0,
+	     1,     0,	/* jnt40_1(28) */
+	     1,     0,
+	     1,   358,
+	    18,   296,	/* jnt40_2(23) */
+	    18,   314,
+	    18,   332,
+	    18,   181,	/* jnt40_3(18) */
+	    18,   199,
+	    18,   217,
+	     1,     0,	/* cube7(8) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* R_foot_sprite(9) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn41(24) */
+	     1,   350,
+	     1,     0,
+	     1,     0,	/* jnt41_1(19) */
+	     1,     0,
+	     1,   235,
+	     1,     0,	/* sphere3(10) */
+	     1,     0,
+	     1,     0,
+};
+
+AnimeRecord motos_down_recover_anm={
+	MAP_ANIM_NORMAL,	/* attr 	*/
+	0,					/* code 	*/
+	0,					/* start 	*/
+	0,					/* loop 	*/
+	18,
+	36,
+	motos_down_recover_prm,
+	motos_down_recover_tbl,
+    0
+};
+
+/*-------------------------------------------------------------*/
+/*-------------------------------------------------------------*/
+
+static short motos_down_stop_prm[]={
+	    0,  293,  293,  292,  288,  279,  259,  232,
+	  216,  233,  244,  247,  244,  233,  214,  222,
+	  226,  227,  226,  221,  214,  216,  218,  215,
+	  148, 3963, 4064, 4352, 4800, 5384, 6078, 6858,
+	 7698, 8572, 9456,10325,11153,11915,12587,13141,
+	13563,13869,14084,14235,14346,14445,14556,14706,
+	27362,27385,27444,27530,27634,27743,27849,27941,
+	28009,28042,28030,27978,27902,27803,27686,27555,
+	27413,27263,27110,26957,26808,26666,26535,21864,
+	21905,22027,22225,22495,22833,23235,23951,24958,
+	25842,26191,26093,25917,25676,25379,25037,24663,
+	24267,23859,23452,23056,22681,22340,21968,22004,
+	22112,22294,22549,22878,23283,24025,25079,26013,
+	26396,26317,26160,25934,25652,25325,24964,24580,
+	24185,23790,23406,23045,22718,27362,27383,27437,
+	27516,27610,27711,27809,27894,27959,27992,27986,
+	27944,27881,27798,27699,27587,27466,27338,27208,
+	27077,26950,26828,26717,    0,    4,   14,   26,
+	   35,   37,   26,    0,  -38,  -81, -128, -178,
+	 -231, -286, -342, -401, -460, -519, -579, -638,
+	 -696, -752, -807,    0,    0,    0,    0,    0,
+	    0,    0,    0,    0,    0,    0,    1,    1,
+	    2,    2,    3,    3,    3,    4,    4,    5,
+	    5,    6,-13783,-13329,-12158,-10558,-8819,-7228,
+	-6075,-5648,-5751,-5988,-6344,-6804,-7353,-7977,
+	-8660,-9387,-10144,-10916,-11688,-12445,-13173,-13855,
+	-14479,    0,  -10,  -35,  -64,  -85,  -89,  -64,
+	    0,   92,  195,  306,  425,  550,  681,  816,
+	  954, 1094, 1236, 1378, 1518, 1657, 1792, 1922,
+	    0,    0,    2,    5,    6,    7,    5,    0,
+	   -7,  -15,  -24,  -33,  -43,  -53,  -64,  -75,
+	  -86,  -97, -108, -119, -130, -141, -151,-13783,
+	-13357,-12260,-10762,-9134,-7645,-6567,-6169,-6270,
+	-6495,-6833,-7268,-7786,-8375,-9019,-9705,-10418,
+	-11146,-11874,-12588,-13274,-13918,-14506,16383,-16383,
+	-32767,-7332,16383,-32767,-7332,-4693,-4674,-4623,
+	-4544,-4444,-4330,-4206,-4079,-3951,-3818,-3681,
+	-3542,-3399,-3254,-3107,-2958,-2809,-2659,-2509,
+	-2359,-2211,-2064,-1919,    0,   -4,  -15,  -33,
+	  -56,  -82, -110, -139, -168, -198, -230, -261,
+	 -294, -327, -360, -394, -428, -462, -496, -530,
+	 -564, -597, -630,    0,  320, 1138, 2236, 3399,
+	 4409, 5050, 5106, 4735, 4247, 3656, 2975, 2216,
+	 1392,  517, -396,-1336,-2289,-3242,-4182,-5096,
+	-5971,-6795, 6675, 6663, 6630, 6581, 6518, 6445,
+	 6367, 6287, 6206, 6122, 6036, 5948, 5858, 5766,
+	 5673, 5579, 5485, 5390, 5296, 5201, 5107, 5015,
+	 4923,    0,    6,   26,   55,   92,  134,  180,
+	  227,  275,  324,  374,  426,  479,  533,  588,
+	  643,  698,  754,  809,  865,  920,  974, 1028,
+	    0,  299, 1062, 2087, 3170, 4109, 4702, 4746,
+	 4390, 3924, 3360, 2712, 1991, 1209,  379, -487,
+	-1378,-2282,-3185,-4076,-4943,-5773,-6555,16383,
+	-16383,-32767,-7332,16383,-32767,-7332,-16383,-16383,
+	    0,   -9,  -38,  -84, -145, -222, -311, -412,
+	 -524, -645, -774, -909,-1049,-1193,-1339,-1486,
+	-1632,-1777,-1918,-2055,-2186,-2310,-2425,    0,
+	  -11,  -43,  -95, -166, -252, -354, -470, -597,
+	 -735, -881,-1035,-1195,-1358,-1525,-1692,-1859,
+	-2023,-2185,-2340,-2490,-2630,-2761,-9050,-9050,
+	-9047,-9042,-9036,-9028,-9019,-9009,-8998,-8986,
+	-8973,-8960,-8946,-8932,-8917,-8903,-8888,-8874,
+	-8859,-8846,-8833,-8820,-8809,-32767,-32756,-32727,
+	-32680,-32617,-32538,-32446,-32342,-32227,-32103,-31971,
+	-31832,-31688,-31540,-31390,-31239,-31089,-30940,-30795,
+	-30654,-30520,-30393,-30275,-32767,32755,32722,32668,
+	32596,32507,32402,32284,32153,32012,31861,31703,
+	31540,31372,31201,31029,30858,30689,30524,30364,
+	30211,30066,29932,23715,23717,23720,23725,23731,
+	23739,23749,23760,23772,23785,23799,23814,23829,
+	23844,23860,23876,23892,23907,23922,23937,23951,
+	23965,23977,16383,16383,16383,-32767,-16383,};
+
+static unsigned short motos_down_stop_tbl[]= {
+	     1,     0,	/* body_sprite(35) */
+	    23,     1,
+	     1,    24,
+	    23,    25,	/* body_sprite(35) */
+	     1,     0,
+	     1,     0,
+	     1,   574,	/* chn29(34) */
+	     1,     0,
+	     1,     0,
+	    23,   432,	/* jnt29_1(29) */
+	    23,   455,
+	    23,   478,
+	     1,   424,	/* chn33(25) */
+	     1,   425,
+	     1,   426,
+	     1,     0,	/* jnt33_1(13) */
+	     1,     0,
+	    23,    48,
+	     1,     0,	/* cube5(1) */
+	     1,     0,
+	     1,     0,
+	     1,   279,	/* chn32(20) */
+	     1,   280,
+	     1,   281,
+	     1,     0,	/* jnt32_1(14) */
+	     1,     0,
+	    23,    71,
+	     1,     0,	/* cube6(2) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* eff29(11) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* L_arm_sprite(0) */
+	     1,     0,
+	     1,     0,
+	     1,   572,	/* chn31(33) */
+	     1,   573,
+	     1,     0,
+	    23,   501,	/* jnt31_1(30) */
+	    23,   524,
+	    23,   547,
+	     1,   427,	/* chn35(26) */
+	     1,   428,
+	     1,   429,
+	     1,     0,	/* jnt35_1(15) */
+	     1,     0,
+	    23,    94,
+	     1,     0,	/* cube3(4) */
+	     1,     0,
+	     1,     0,
+	     1,   282,	/* chn37(21) */
+	     1,   283,
+	     1,   284,
+	     1,     0,	/* jnt37_1(16) */
+	     1,     0,
+	    23,   117,
+	     1,     0,	/* cube4(5) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* eff31(12) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* R_arm_sprite(3) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn38(32) */
+	     1,   571,
+	     1,     0,
+	     1,     0,	/* jnt38_1(27) */
+	     1,     0,
+	     1,   430,
+	    23,   285,	/* jnt38_2(22) */
+	    23,   308,
+	    23,   331,
+	    23,   140,	/* jnt38_3(17) */
+	    23,   163,
+	    23,   186,
+	     1,     0,	/* cube2(6) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* L_foot_sprite(7) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn40(31) */
+	     1,   570,
+	     1,     0,
+	     1,     0,	/* jnt40_1(28) */
+	     1,     0,
+	     1,   431,
+	    23,   354,	/* jnt40_2(23) */
+	    23,   377,
+	    23,   400,
+	    23,   209,	/* jnt40_3(18) */
+	    23,   232,
+	    23,   255,
+	     1,     0,	/* cube7(8) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* R_foot_sprite(9) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn41(24) */
+	     1,   423,
+	     1,     0,
+	     1,     0,	/* jnt41_1(19) */
+	     1,     0,
+	     1,   278,
+	     1,     0,	/* sphere3(10) */
+	     1,     0,
+	     1,     0,
+};
+
+AnimeRecord motos_down_stop_anm={
+	MAP_ANIM_NORMAL,	/* attr 	*/
+	0,					/* code 	*/
+	0,					/* start 	*/
+	0,					/* loop 	*/
+	23,
+	36,
+	motos_down_stop_prm,
+	motos_down_stop_tbl,
+    0
+};
+
+/*-------------------------------------------------------------*/
+/*-------------------------------------------------------------*/
+
+static short motos_pitch_prm[]={
+	    0,    0,    0,    0,    0,    0,   -2,   -3,
+	   -4,   -3,    0,    8,   20,   35,   48,   57,
+	   59,   55,   50,   42,   34,   26,   20,   16,
+	   13,    9,    6,    3,    1,    0,    0,  278,
+	  278,  278,  278,  278,  278,  277,  277,  277,
+	  278,  281,  284,  289,  292,  294,  293,  289,
+	  287,  290,  288,  286,  285,  284,  283,  282,
+	  281,  280,  280,  279,  279,  -24,  -21,  -14,
+	   -9,   -6,   -4,   -3,   -1,    1,    7,   16,
+	   28,   41,   55,   69,   84,  100,  114,  117,
+	   77,   31,    3,   -5,   -9,  -10,   -9,   -6,
+	   -3,   -1,    0,-1460,-1605,-1986,-2515,-3108,
+	-3679,-4142,-4412,-4403,-4030,-2982,-1210,  983,
+	 3292, 5415, 7045, 7880, 7373, 5639, 3371, 1261,
+	    0, -464, -681, -710, -606, -426, -227,  -66,
+	    0,    0, -235, -871,-1804,-2929,-4143,-5342,
+	-6422,-7278,-7807,-7989,-7908,-7614,-7155,-6580,
+	-5939,-5281,-4381,-3149,-1839, -705,    0,  311,
+	  457,  476,  406,  285,  152,   44,    0,    0,
+	   91,  329,  660, 1028, 1378, 1657, 1809, 1781,
+	 1517,  807, -382,-1849,-3389,-4798,-5872,-6406,
+	-6030,-4822,-3244,-1760, -834, -421, -149,    7,
+	   75,   82,   54,   18,    0, -776, -777, -780,
+	 -784, -788, -792, -794, -794, -791, -784, -772,
+	 -755, -732, -700, -662, -617, -566, -512, -455,
+	 -397, -338, -280, -224, -172, -124,  -83,  -48,
+	  -22,   -5,    0, 1220, 1205, 1164, 1101, 1022,
+	  929,  829,  725,  623,  525,  438,  366,  313,
+	  272,  235,  201,  170,  142,  117,   95,   76,
+	   58,   44,   31,   21,   13,    7,    3,    0,
+	    0,-21916,-22006,-22253,-22622,-23080,-23591,-24121,
+	-24635,-25100,-25481,-25743,-25852,-25773,-25518,-25135,
+	-24641,-24055,-23397,-22684,-21935,-21169,-20405,-19661,
+	-18955,-18307,-17735,-17258,-16894,-16662,-16580,    0,
+	   22,   86,  182,  302,  438,  583,  727,  863,
+	  983, 1079, 1143, 1166, 1154, 1121, 1069, 1002,
+	  922,  832,  735,  634,  531,  430,  333,  243,
+	  163,   96,   44,   11,    0,-2424,-2396,-2316,
+	-2194,-2039,-1859,-1663,-1460,-1259,-1069, -898,
+	 -756, -651, -570, -496, -427, -364, -307, -255,
+	 -208, -166, -130,  -98,  -71,  -49,  -31,  -17,
+	   -7,   -1,    0,30151,30048,29769,29360,28866,
+	28334,27809,27338,26965,26737,26701,26900,27382,
+	28160,29191,30436,31857,-32119,-30463,-28749,-27014,
+	-25297,-23637,-22072,-20642,-19385,-18340,-17546,-17041,
+	-16864,-1636,-1621,-1576,-1509,-1422,-1321,-1211,
+	-1096, -981, -871, -770, -683, -616, -560, -504,
+	 -450, -398, -347, -298, -252, -208, -168, -131,
+	  -98,  -70,  -45,  -26,  -11,   -3,    0, 1147,
+	 1109, 1005,  847,  648,  420,  177,  -69, -307,
+	 -523, -704, -837, -911, -937, -938, -916, -876,
+	 -819, -750, -670, -584, -494, -403, -314, -231,
+	 -156,  -92,  -43,  -11,    0,29587,29382,28820,
+	27985,26959,25823,24660,23553,22583,21834,21387,
+	21324,21728,22588,23803,25320,27086,29050,31158,
+	-32175,-29935,-27708,-25546,-23502,-21629,-19979,-18603,
+	-17556,-16889,-16655, 1616, 1593, 1530, 1433, 1309,
+	 1167, 1013,  854,  698,  551,  422,  316,  242,
+	  191,  146,  109,   78,   53,   33,   18,    7,
+	    0,   -4,   -6,   -7,   -6,   -4,   -2,    0,
+	    0,  655,  662,  681,  710,  746,  785,  826,
+	  864,  898,  924,  940,  942,  929,  899,  858,
+	  806,  746,  678,  606,  531,  454,  378,  304,
+	  234,  170,  113,   66,   30,    8,    0,-22090,
+	-22245,-22671,-23311,-24106,-25000,-25935,-26853,-27697,
+	-28409,-28931,-29207,-29178,-28871,-28371,-27705,-26900,
+	-25984,-24984,-23927,-22841,-21753,-20691,-19682,-18752,
+	-17931,-17244,-16720,-16385,-16267,   78,   69,   43,
+	    4,  -45, -102, -165, -229, -293, -353, -406,
+	 -449, -479, -495, -491, -297,   65,  306,  326,
+	  257,  160,   97,   74,   53,   37,   23,   13,
+	    5,    1,    0,  -20,  -19,  -17,  -14,  -11,
+	   -6,   -2,    0,    3,    5,    6,    5,    2,
+	   -3,  -11,  -55, -132, -182, -189, -179, -160,
+	 -141, -123, -102,  -78,  -55,  -34,  -16,   -4,
+	    0,-13615,-13598,-13551,-13480,-13390,-13286,-13175,
+	-13062,-12952,-12851,-12764,-12698,-12657,-12648,-12675,
+	-13107,-13896,-14423,-14473,-14333,-14132,-14001,-13951,
+	-13907,-13869,-13839,-13815,-13797,-13787,-13783, -108,
+	 -145, -244, -387, -556, -734, -902,-1043,-1140,
+	-1173,-1161,-1134,-1094,-1042, -979, -909, -832,
+	 -749, -664, -577, -490, -406, -324, -248, -179,
+	 -119,  -69,  -32,   -8,    0,   28,   38,   65,
+	  104,  150,  198,  244,  283,  309,  318,  315,
+	  308,  297,  283,  266,  247,  226,  203,  180,
+	  156,  133,  110,   88,   67,   48,   32,   18,
+	    8,    2,    0,-13634,-13650,-13694,-13759,-13836,
+	-13917,-13995,-14061,-14109,-14130,-14132,-14129,-14120,
+	-14107,-14091,-14070,-14048,-14023,-13997,-13970,-13942,
+	-13915,-13889,-13865,-13842,-13823,-13806,-13794,-13786,
+	-13783,    0,  296, 1092, 2244, 3610, 5046, 6412,
+	 7564, 8360, 8656, 8594, 8414, 8131, 7756, 7304,
+	 6787, 6217, 5609, 4975, 4328, 3681, 3047, 2439,
+	 1869, 1352,  900,  525,  242,   62,    0,16383,
+	-16383,-32767,-7332,16383,-32767,-7332,-4693,-4627,
+	-4449,-4187,-3870,-3525,-3183,-2872,-2619,-2454,
+	-2396,-2425,-2513,-2634,-2758,-2859,-2909,-2573,
+	-2931,-3410,-3870,-4172,-4329,-4452,-4544,-4609,
+	-4652,-4678,-4690,-4693,    0,  -94, -353, -741,
+	-1221,-1756,-2311,-2849,-3333,-3728,-4053,-4352,
+	-4623,-4865,-5077,-5257,-5405,-4775,-3496,-2046,
+	 -767,    0,  304,  447,  466,  397,  279,  149,
+	   43,    0, 1322, 1071,  392, -602,-1801,-3090,
+	-4358,-5493,-6381,-6912,-7006,-6734,-6205,-5528,
+	-4812,-4166,-3699,-4184,-3180,-1896, -711,    0,
+	  267,  392,  408,  348,  245,  130,   38,    0,
+	 6675, 6657, 6623, 6604, 6596, 6582, 6571, 6574,
+	 6602, 6664, 6782, 6953, 7149, 7347, 7520, 7643,
+	 7690, 7673, 7626, 7553, 7462, 7356, 7242, 7125,
+	 7010, 6904, 6812, 6740, 6692, 6675,    0,  109,
+	  309,  409,  323,  141,  -65, -226, -271, -127,
+	  281,  915, 1671, 2442, 3124, 3613, 3804, 3745,
+	 3571, 3301, 2957, 2561, 2132, 1692, 1263,  864,
+	  517,  244,   64,    0, 1456, 1761, 2353, 2746,
+	 2785, 2691, 2548, 2438, 2444, 2649, 3153, 3916,
+	 4807, 5697, 6456, 6954, 7060, 6828, 6420, 5870,
+	 5212, 4479, 3706, 2926, 2173, 1481,  883,  415,
+	  109,    0,16383,-16383,-32767,-7332,16383,-32767,
+	-7332,-16383,-16383,-8734,-8591,-8210,-7657,-7001,
+	-6310,-5652,-5095,-4706,-4555,-4798,-5434,-6293,
+	-7206,-8003,-8515,-8571,-8233,-7699,-7008,-6199,
+	-5311,-4383,-3452,-2559,-1741,-1037, -486, -128,
+	    0,-9230,-9273,-9383,-9529,-9680,-9808,-9882,
+	-9871,-9745,-9474,-8946,-8137,-7154,-6101,-5084,
+	-4207,-3575,-3111,-2669,-2251,-1860,-1498,-1169,
+	 -875, -619, -403, -231, -104,  -26,    0,-5442,
+	-5627,-6115,-6807,-7601,-8399,-9099,-9601,-9806,
+	-9614,-8698,-7017,-4901,-2677, -674,  779, 1355,
+	 1204,  732,   -1, -939,-2025,-3199,-4404,-5583,
+	-6677,-7629,-8380,-8873,-9050,-23976,-23905,-23725,
+	-23485,-23234,-23022,-22898,-22911,-23110,-23545,-24436,
+	-25830,-27520,-29298,-30957,-32289,32446,32059,31807,
+	31671,31635,31679,31786,31937,32115,32301,32478,
+	32626,32728,-32767,23925,24067,24446,24994,25646,
+	26331,26984,27536,27920,28068,27821,27181,26317,
+	25401,24602,24092,24041,24388,24933,25637,26461,
+	27365,28310,29256,30165,30997,31712,32272,32636,
+	-32767,27598,27758,28177,28759,29410,30037,30544,
+	30837,30821,30403,29234,27255,24808,22236,19880,
+	18082,17184,17009,17121,17473,18017,18706,19492,
+	20327,21164,21956,22654,23212,23582,23715,16383,
+	16383,16383,-32767,-16383,};
+
+static unsigned short motos_pitch_tbl[]= {
+	    30,     1,	/* body_sprite(35) */
+	    30,    31,
+	    30,    61,
+	    30,    91,	/* body_sprite(35) */
+	    30,   121,
+	    30,   151,
+	     1,  1131,	/* chn29(34) */
+	     1,     0,
+	     1,     0,
+	    30,   947,	/* jnt29_1(29) */
+	    30,   977,
+	    30,  1007,
+	     1,   939,	/* chn33(25) */
+	     1,   940,
+	     1,   941,
+	    30,   181,	/* jnt33_1(13) */
+	    30,   211,
+	    30,   241,
+	     1,     0,	/* cube5(1) */
+	     1,     0,
+	     1,     0,
+	     1,   752,	/* chn32(20) */
+	     1,   753,
+	     1,   754,
+	    30,   271,	/* jnt32_1(14) */
+	    30,   301,
+	    30,   331,
+	     1,     0,	/* cube6(2) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* eff29(11) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* L_arm_sprite(0) */
+	     1,     0,
+	     1,     0,
+	     1,  1129,	/* chn31(33) */
+	     1,  1130,
+	     1,     0,
+	    30,  1037,	/* jnt31_1(30) */
+	    30,  1067,
+	    30,  1097,
+	     1,   942,	/* chn35(26) */
+	     1,   943,
+	     1,   944,
+	    30,   361,	/* jnt35_1(15) */
+	    30,   391,
+	    30,   421,
+	     1,     0,	/* cube3(4) */
+	     1,     0,
+	     1,     0,
+	     1,   755,	/* chn37(21) */
+	     1,   756,
+	     1,   757,
+	    30,   451,	/* jnt37_1(16) */
+	    30,   481,
+	    30,   511,
+	     1,     0,	/* cube4(5) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* eff31(12) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* R_arm_sprite(3) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn38(32) */
+	     1,  1128,
+	     1,     0,
+	     1,     0,	/* jnt38_1(27) */
+	     1,     0,
+	     1,   945,
+	    30,   758,	/* jnt38_2(22) */
+	    30,   788,
+	    30,   818,
+	    30,   541,	/* jnt38_3(17) */
+	    30,   571,
+	    30,   601,
+	     1,     0,	/* cube2(6) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* L_foot_sprite(7) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn40(31) */
+	     1,  1127,
+	     1,     0,
+	     1,     0,	/* jnt40_1(28) */
+	     1,     0,
+	     1,   946,
+	    30,   848,	/* jnt40_2(23) */
+	    30,   878,
+	    30,   908,
+	    30,   631,	/* jnt40_3(18) */
+	    30,   661,
+	    30,   691,
+	     1,     0,	/* cube7(8) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* R_foot_sprite(9) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn41(24) */
+	     1,   938,
+	     1,     0,
+	    30,   721,	/* jnt41_1(19) */
+	     1,     0,
+	     1,   751,
+	     1,     0,	/* sphere3(10) */
+	     1,     0,
+	     1,     0,
+};
+
+AnimeRecord motos_pitch_anm={
+	MAP_ANIM_NORMAL,	/* attr 	*/
+	0,					/* code 	*/
+	0,					/* start 	*/
+	0,					/* loop 	*/
+	30,
+	36,
+	motos_pitch_prm,
+	motos_pitch_tbl,
+    0
+};
+
+/*-------------------------------------------------------------*/
+/*-------------------------------------------------------------*/
+
+static short motos_safe_down_prm[]={
+	    0,  272,  276,  279,  278,  276,  277,  279,
+	  278,  274,  271,  273,  274,  277,  279,  280,
+	  281,  281,  281,  280,  280,  279,  279,  279,
+	  280,  281,  281,  280,  280,  280,  280,  280,
+	  280,  280,  279,  279,  279,   50,   39,   13,
+	  -13,  -26,  -18,    0,   22,   39,   47,   45,
+	   37,   25,   13,    2,   -3,    0,    1,    7,
+	   13,   19,   21,   20,   16,   10,    7,    3,
+	    0,    0,    0,    0,    0,    0,    0,    0,
+	    0, 3024, 2309,  735, -840,-1564,-1125,  -53,
+	 1247, 2373, 2920, 2793, 2280, 1552,  781,  136,
+	 -208, -199,   38,  404,  795, 1112, 1251, 1183,
+	  982,  705,  411,  157,    0,  -68, -100, -104,
+	  -89,  -62,  -33,   -9,    0,-16580,-16942,-17804,
+	-18829,-19681,-20022,-19653,-18796,-17755,-16831,-16325,
+	-16376,-16783,-17338,-17836,-18071,-18032,-17873,-17637,
+	-17364,-17096,-16875,-16742,-16676,-16625,-16588,-16563,
+	-16548,-16541,-16541,-16546,-16553,-16563,-16571,-16578,
+	-16580,-16864,-17430,-18786,-20424,-21830,-22496,-22144,
+	-21115,-19823,-18685,-18116,-18322,-19026,-19919,-20692,
+	-21035,-20807,-20213,-19467,-18780,-18365,-18164,-17979,
+	-17809,-17653,-17513,-17386,-17274,-17176,-17092,-17022,
+	-16964,-16920,-16889,-16870,-16864,-16655,-16267,  104,
+	   55,  -52, -160, -208, -178, -107,  -18,   64,
+	  118,  120,   83,   39,  -10,  -65, -125, -189,
+	 -257, -327, -399, -473, -547, -620, -693, -764,
+	 -832, -898, -960,-1017,-1068,-1114,-1153,-1185,
+	-1209,-1223,-1228,   -1,  -33, -104, -174, -204,
+	 -163,  -75,   25,  103,  120,   41, -108, -276,
+	 -462, -663, -877,-1101,-1334,-1573,-1817,-2062,
+	-2307,-2550,-2789,-3020,-3244,-3456,-3654,-3838,
+	-4004,-4151,-4276,-4376,-4451,-4497,-4513,-13575,
+	-13659,-13841,-14020,-14092,-14033,-13910,-13755,-13599,
+	-13475,-13413,-13396,-13382,-13371,-13364,-13359,-13357,
+	-13357,-13360,-13364,-13370,-13378,-13386,-13396,-13406,
+	-13416,-13427,-13437,-13448,-13457,-13466,-13474,-13481,
+	-13486,-13489,-13490, -104,  -99,  -85,  -61,  -30,
+	    8,   54,  107,  166,  230,  299,  373,  450,
+	  530,  613,  698,  784,  871,  958, 1046, 1132,
+	 1217, 1299, 1380, 1457, 1530, 1599, 1664, 1722,
+	 1775, 1822, 1861, 1892, 1915, 1930, 1934,    0,
+	   15,   60,  132,  231,  354,  499,  665,  849,
+	 1051, 1268, 1498, 1740, 1992, 2252, 2518, 2788,
+	 3062, 3336, 3609, 3879, 4145, 4405, 4657, 4899,
+	 5129, 5346, 5548, 5732, 5898, 6043, 6166, 6265,
+	 6337, 6382, 6398,-13575,-13574,-13571,-13566,-13559,
+	-13550,-13540,-13529,-13516,-13503,-13488,-13472,-13455,
+	-13438,-13420,-13402,-13383,-13365,-13346,-13327,-13308,
+	-13290,-13272,-13255,-13238,-13223,-13208,-13194,-13181,
+	-13170,-13160,-13151,-13145,-13140,-13137,-13136,16383,
+	-16383,-32767,-7332,16383,-32767,-7332,-4693,-4682,
+	-4649,-4595,-4523,-4433,-4327,-4205,-4069,-3922,
+	-3763,-3594,-3416,-3231,-3041,-2846,-2647,-2447,
+	-2246,-2045,-1847,-1652,-1461,-1276,-1099, -930,
+	 -771, -623, -488, -366, -259, -169,  -97,  -44,
+	  -11,    0,-3233,-2447, -718, 1007, 1785, 1270,
+	   47,-1429,-2707,-3332,-3201,-2635,-1826, -966,
+	 -244,  146,  146, -104, -494, -911,-1246,-1385,
+	-1294,-1053, -728, -387,  -94,   84,  156,  182,
+	  173,  141,   96,   50,   14,    0, 6675, 6659,
+	 6612, 6536, 6433, 6305, 6153, 5981, 5788, 5578,
+	 5351, 5111, 4859, 4596, 4325, 4047, 3765, 3480,
+	 3194, 2909, 2627, 2349, 2078, 1815, 1563, 1323,
+	 1097,  886,  694,  521,  369,  241,  138,   62,
+	   16,    0,    0,   51,  168,  294,  373,  398,
+	  402,  390,  366,  334,  290,  230,  162,   96,
+	   39,    0,  -14,   -9,    5,   18,   20,    0,
+	  -55, -139, -235, -325, -392, -418, -400, -352,
+	 -285, -209, -132,  -65,  -17,    0,-3233,-2532,
+	 -988,  558, 1270,  843, -205,-1477,-2573,-3095,
+	-2947,-2412,-1662, -872, -214,  137,  127, -118,
+	 -497, -904,-1237,-1391,-1340,-1161, -908, -633,
+	 -389, -230, -144,  -82,  -40,  -15,   -3,    1,
+	    0,    0,16383,-16383,-32767,-7332,16383,-32767,
+	-7332,-16383,-16383,-9050,-32767,-32767,23715,16383,
+	16383,16383,-32767,-16383,};
+
+static unsigned short motos_safe_down_tbl[]= {
+	     1,     0,	/* body_sprite(35) */
+	    36,     1,
+	    36,    37,
+	    36,    73,	/* body_sprite(35) */
+	     1,     0,
+	     1,     0,
+	     1,   603,	/* chn29(34) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* jnt29_1(29) */
+	     1,     0,
+	     1,   595,
+	     1,   587,	/* chn33(25) */
+	     1,   588,
+	     1,   589,
+	     1,     0,	/* jnt33_1(13) */
+	     1,     0,
+	    36,   109,
+	     1,     0,	/* cube5(1) */
+	     1,     0,
+	     1,     0,
+	     1,   400,	/* chn32(20) */
+	     1,   401,
+	     1,   402,
+	     1,     0,	/* jnt32_1(14) */
+	     1,     0,
+	    36,   145,
+	     1,     0,	/* cube6(2) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* eff29(11) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* L_arm_sprite(0) */
+	     1,     0,
+	     1,     0,
+	     1,   601,	/* chn31(33) */
+	     1,   602,
+	     1,     0,
+	     1,   596,	/* jnt31_1(30) */
+	     1,   597,
+	     1,   598,
+	     1,   590,	/* chn35(26) */
+	     1,   591,
+	     1,   592,
+	     1,     0,	/* jnt35_1(15) */
+	     1,     0,
+	     1,   181,
+	     1,     0,	/* cube3(4) */
+	     1,     0,
+	     1,     0,
+	     1,   403,	/* chn37(21) */
+	     1,   404,
+	     1,   405,
+	     1,     0,	/* jnt37_1(16) */
+	     1,     0,
+	     1,   182,
+	     1,     0,	/* cube4(5) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* eff31(12) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* R_arm_sprite(3) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn38(32) */
+	     1,   600,
+	     1,     0,
+	     1,     0,	/* jnt38_1(27) */
+	     1,     0,
+	     1,   593,
+	    36,   406,	/* jnt38_2(22) */
+	     1,     0,
+	    36,   442,
+	    36,   183,	/* jnt38_3(17) */
+	    36,   219,
+	    36,   255,
+	     1,     0,	/* cube2(6) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* L_foot_sprite(7) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn40(31) */
+	     1,   599,
+	     1,     0,
+	     1,     0,	/* jnt40_1(28) */
+	     1,     0,
+	     1,   594,
+	    36,   478,	/* jnt40_2(23) */
+	    36,   514,
+	    36,   550,
+	    36,   291,	/* jnt40_3(18) */
+	    36,   327,
+	    36,   363,
+	     1,     0,	/* cube7(8) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* R_foot_sprite(9) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn41(24) */
+	     1,   586,
+	     1,     0,
+	     1,     0,	/* jnt41_1(19) */
+	     1,     0,
+	     1,   399,
+	     1,     0,	/* sphere3(10) */
+	     1,     0,
+	     1,     0,
+};
+
+AnimeRecord motos_safe_down_anm={
+	MAP_ANIM_NORMAL,	/* attr 	*/
+	0,					/* code 	*/
+	0,					/* start 	*/
+	0,					/* loop 	*/
+	36,
+	36,
+	motos_safe_down_prm,
+	motos_safe_down_tbl,
+    0
+};
+
+/*-------------------------------------------------------------*/
+/*-------------------------------------------------------------*/
+
+static short motos_wait_prm[]={
+	    0,  279,-16580,-16783,-17304,-18017,-18794,-19507,
+	-20029,-20231,-20029,-19507,-18794,-18017,-17304,-16783,
+	-16580,-16706,-17041,-17527,-18103,-18709,-19284,-19770,
+	-20106,-20231,-20106,-19770,-19284,-18709,-18103,-17527,
+	-17041,-16706,-16580,-16706,-17041,-17527,-18103,-18709,
+	-19284,-19770,-20106,-20231,-20106,-19770,-19284,-18709,
+	-18103,-17527,-17041,-16706,-16580,-16683,-16960,-17369,
+	-17865,-18406,-18946,-19442,-19851,-20129,-20231,-20106,
+	-19770,-19284,-18709,-18103,-17527,-17041,-16706,-16580,
+	-16737,-17151,-17735,-18406,-19076,-19660,-20074,-20231,
+	-20029,-19507,-18794,-18017,-17304,-16783,-16580,-16580,
+	-16580,-16580,-16580,-16580,-16864,-17436,-18911,-20928,
+	-23126,-25143,-26618,-27190,-26618,-25143,-23126,-20928,
+	-18911,-17436,-16864,-17218,-18167,-19541,-21170,-22884,
+	-24513,-25887,-26836,-27190,-26836,-25887,-24513,-22884,
+	-21170,-19541,-18167,-17218,-16864,-17218,-18167,-19541,
+	-21170,-22884,-24513,-25887,-26836,-27190,-26836,-25887,
+	-24513,-22884,-21170,-19541,-18167,-17218,-16864,-17153,
+	-17938,-19094,-20499,-22027,-23555,-24959,-26116,-26901,
+	-27190,-26836,-25887,-24513,-22884,-21170,-19541,-18167,
+	-17218,-16864,-17308,-18477,-20131,-22027,-23923,-25576,
+	-26746,-27190,-26618,-25143,-23126,-20928,-18911,-17436,
+	-16864,-16864,-16864,-16864,-16864,-16864,-16655,-17239,
+	-18744,-20802,-23044,-25101,-26606,-27190,-26737,-25544,
+	-23857,-21923,-19989,-18301,-17108,-16655,-16950,-17751,
+	-18931,-20364,-21923,-23482,-24914,-26094,-26895,-27190,
+	-26944,-26272,-25267,-24024,-22639,-21206,-19821,-18579,
+	-17574,-16901,-16655,-17017,-17985,-19387,-21048,-22797,
+	-24459,-25860,-26829,-27190,-26829,-25860,-24459,-22797,
+	-21048,-19387,-17985,-17017,-16655,-16950,-17751,-18931,
+	-20364,-21923,-23482,-24914,-26094,-26895,-27190,-26895,
+	-26094,-24914,-23482,-21923,-20364,-18931,-17751,-16950,
+	-16655,-17108,-18301,-19989,-21923,-23857,-25544,-26737,
+	-27190,-26606,-25101,-23044,-20802,-18744,-17239,-16655,
+	-16267,-16545,-17260,-18238,-19303,-20281,-20997,-21274,
+	-21059,-20492,-19690,-18771,-17852,-17050,-16483,-16267,
+	-16408,-16788,-17349,-18030,-18771,-19512,-20192,-20753,
+	-21134,-21274,-21157,-20838,-20360,-19769,-19111,-18430,
+	-17772,-17181,-16704,-16384,-16267,-16439,-16899,-17565,
+	-18355,-19186,-19976,-20642,-21102,-21274,-21102,-20642,
+	-19976,-19186,-18355,-17565,-16899,-16439,-16267,-16408,
+	-16788,-17349,-18030,-18771,-19512,-20192,-20753,-21134,
+	-21274,-21134,-20753,-20192,-19512,-18771,-18030,-17349,
+	-16788,-16408,-16267,-16483,-17050,-17852,-18771,-19690,
+	-20492,-21059,-21274,-20997,-20281,-19303,-18238,-17260,
+	-16545,-16267,-13783,-13783,    0,  130,  499, 1076,
+	 1829, 2726, 3736, 4827, 5968, 7126, 8271, 9370,
+	10393,11307,12081,12682,13081,13245,13141,12799,
+	12278,11594,10766, 9808, 8739, 7575, 6334, 5031,
+	 3684, 2309,  925, -453,-1808,-3123,-4382,-5566,
+	-6660,-7646,-8507,-9228,-9790,-10178,-10373,-10387,
+	-10248,-9967,-9558,-9031,-8398,-7671,-6861,-5981,
+	-5041,-4055,-3033,-1987, -928,  129, 1176, 2200,
+	 3189, 4132, 5017, 5831, 6564, 7203, 7738, 8155,
+	 8444, 8589, 8590, 8463, 8220, 7877, 7446, 6941,
+	 6378, 5769, 5129, 4471, 3810, 3159, 2532, 1944,
+	 1408,  938,  548,  253,   65,    0,16383,-16383,
+	-32767,-7332,16383,-32767,-7332,-4693, 6675,16383,
+	-16383,-32767,-7332,16383,-32767,-7332,-16383,-16383,
+	-9050,-32767,-32767,23715,16383,16383,16383,-32767,
+	-16383,};
+
+static unsigned short motos_wait_tbl[]= {
+	     1,     0,	/* body_sprite(35) */
+	     1,     1,
+	     1,     0,
+	     1,     0,	/* body_sprite(35) */
+	     1,     0,
+	     1,     0,
+	     1,   480,	/* chn29(34) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* jnt29_1(29) */
+	     1,     0,
+	     1,   472,
+	     1,   464,	/* chn33(25) */
+	     1,   465,
+	     1,   466,
+	     1,     0,	/* jnt33_1(13) */
+	     1,     0,
+	    90,     2,
+	     1,     0,	/* cube5(1) */
+	     1,     0,
+	     1,     0,
+	     1,   455,	/* chn32(20) */
+	     1,   456,
+	     1,   457,
+	     1,     0,	/* jnt32_1(14) */
+	     1,     0,
+	    90,    92,
+	     1,     0,	/* cube6(2) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* eff29(11) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* L_arm_sprite(0) */
+	     1,     0,
+	     1,     0,
+	     1,   478,	/* chn31(33) */
+	     1,   479,
+	     1,     0,
+	     1,   473,	/* jnt31_1(30) */
+	     1,   474,
+	     1,   475,
+	     1,   467,	/* chn35(26) */
+	     1,   468,
+	     1,   469,
+	     1,     0,	/* jnt35_1(15) */
+	     1,     0,
+	    90,   182,
+	     1,     0,	/* cube3(4) */
+	     1,     0,
+	     1,     0,
+	     1,   458,	/* chn37(21) */
+	     1,   459,
+	     1,   460,
+	     1,     0,	/* jnt37_1(16) */
+	     1,     0,
+	    90,   272,
+	     1,     0,	/* cube4(5) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* eff31(12) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* R_arm_sprite(3) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn38(32) */
+	     1,   477,
+	     1,     0,
+	     1,     0,	/* jnt38_1(27) */
+	     1,     0,
+	     1,   470,
+	     1,   461,	/* jnt38_2(22) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* jnt38_3(17) */
+	     1,     0,
+	     1,   362,
+	     1,     0,	/* cube2(6) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* L_foot_sprite(7) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn40(31) */
+	     1,   476,
+	     1,     0,
+	     1,     0,	/* jnt40_1(28) */
+	     1,     0,
+	     1,   471,
+	     1,   462,	/* jnt40_2(23) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* jnt40_3(18) */
+	     1,     0,
+	     1,   363,
+	     1,     0,	/* cube7(8) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* R_foot_sprite(9) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn41(24) */
+	     1,   463,
+	     1,     0,
+	    90,   364,	/* jnt41_1(19) */
+	     1,     0,
+	     1,   454,
+	     1,     0,	/* sphere3(10) */
+	     1,     0,
+	     1,     0,
+};
+
+AnimeRecord motos_wait_anm={
+	MAP_ANIM_NORMAL,	/* attr 	*/
+	0,					/* code 	*/
+	0,					/* start 	*/
+	0,					/* loop 	*/
+	90,
+	36,
+	motos_wait_prm,
+	motos_wait_tbl,
+    0
+};
+
+/*-------------------------------------------------------------*/
+/*-------------------------------------------------------------*/
+
+static short motos_walk_prm[]={
+	    0,  273,  273,  274,  276,  277,  278,  279,
+	  279,  279,  279,  278,  278,  278,  278,  278,
+	  278,  278,  278,  278,  278,  277,  276,  275,
+	  274,  273,  273,    3,    3,    3,    3,    2,
+	    2,    1,    1,    0,    0,    0,    0,    0,
+	    0,    0,    0,    0,    1,    1,    2,    2,
+	    2,    3,    3,    3,    3, 1773, 1705, 1518,
+	 1235,  880,  478,   52, -374, -776,-1131,-1413,
+	-1601,-1668,-1610,-1449,-1203, -891, -532, -146,
+	  250,  637,  996, 1307, 1553, 1715, 1773,    5,
+	    5,    4,    4,    4,    4,    4,    4,    3,
+	    3,    3,    3,    3,    3,    3,    3,    3,
+	    4,    4,    4,    4,    4,    4,    5,    5,
+	    5,    3,   61,  204,  391,  578,  722,  779,
+	  722,  578,  391,  204,   61,    3,   46,  157,
+	  309,  474,  625,  736,  779,  722,  578,  391,
+	  204,   61,    3, 2294, 2284, 2259, 2227, 2194,
+	 2170, 2160, 2170, 2194, 2227, 2259, 2284, 2294,
+	 2287, 2267, 2241, 2213, 2186, 2167, 2160, 2170,
+	 2194, 2227, 2259, 2284, 2294,-16580,-16312,-15640,
+	-14767,-13894,-13222,-12953,-13222,-13894,-14767,-15640,
+	-16312,-16580,-16379,-15861,-15153,-14381,-13672,-13154,
+	-12953,-13222,-13894,-14767,-15640,-16312,-16580,  734,
+	  729,  719,  705,  692,  682,  677,  682,  692,
+	  705,  719,  729,  734,  730,  722,  711,  699,
+	  689,  681,  677,  682,  692,  705,  719,  729,
+	  734, -397, -331, -167,   44,  257,  421,  486,
+	  421,  257,   44, -167, -331, -397, -348, -221,
+	  -49,  138,  311,  437,  486,  421,  257,   44,
+	 -167, -331, -397,-28039,-28902,-31060,31668,28863,
+	26705,25842,26705,28863,31668,-31060,-28902,-28039,
+	-28684,-30349,-32625,30428,28152,26488,25842,26705,
+	28863,31668,-31060,-28902,-28039,-1319,-1313,-1300,
+	-1283,-1265,-1252,-1247,-1252,-1265,-1283,-1300,
+	-1313,-1319,-1315,-1304,-1290,-1275,-1261,-1251,
+	-1247,-1252,-1265,-1283,-1300,-1313,-1319,  314,
+	  251,   94, -109, -313, -470, -533, -470, -313,
+	 -109,   94,  251,  314,  267,  146,  -19, -199,
+	 -365, -486, -533, -470, -313, -109,   94,  251,
+	  314,-30652,-31143,-32369,31569,29975,28748,28258,
+	28748,29975,31569,-32369,-31143,-30652,-31019,-31965,
+	32274,30864,29571,28624,28258,28748,29975,31569,
+	-32369,-31143,-30652,-1233,-1177,-1037, -856, -675,
+	 -535, -479, -535, -675, -856,-1037,-1177,-1233,
+	-1191,-1083, -936, -776, -629, -521, -479, -535,
+	 -675, -856,-1037,-1177,-1233,  564,  617,  747,
+	  916, 1086, 1216, 1268, 1216, 1086,  916,  747,
+	  617,  564,  603,  704,  841,  991, 1129, 1229,
+	 1268, 1216, 1086,  916,  747,  617,  564,-28190,
+	-27588,-26080,-24121,-22161,-20654,-20051,-20654,-22161,
+	-24121,-26080,-27588,-28190,-27740,-26577,-24987,-23254,
+	-21664,-20502,-20051,-20654,-22161,-24121,-26080,-27588,
+	-28190,    0,  -14,  -54, -114, -189, -274, -365,
+	 -455, -540, -616, -676, -715, -730, -717, -683,
+	 -631, -565, -489, -407, -323, -240, -164,  -98,
+	  -46,  -12,    0,    0,  -69, -262, -554, -919,
+	-1333,-1773,-2212,-2626,-2992,-3283,-3476,-3546,
+	-3486,-3320,-3066,-2745,-2375,-1977,-1568,-1170,
+	 -800, -479, -225,  -59,    0,-9507,-9651,-10048,
+	-10648,-11400,-12253,-13157,-14062,-14915,-15667,-16267,
+	-16664,-16808,-16685,-16343,-15821,-15160,-14399,-13578,
+	-12737,-11916,-11155,-10494,-9972,-9630,-9507,    0,
+	  -20,  -77, -162, -270, -392, -521, -650, -772,
+	 -880, -965,-1022,-1042,-1025, -976, -902, -807,
+	 -698, -581, -461, -344, -235, -140,  -66,  -17,
+	    0,    0,  -86, -324, -684,-1135,-1647,-2190,
+	-2732,-3244,-3696,-4056,-4294,-4380,-4306,-4101,
+	-3788,-3391,-2935,-2442,-1938,-1445, -988, -592,
+	 -279,  -73,    0,-18581,-18433,-18025,-17408,-16634,
+	-15756,-14826,-13896,-13018,-12245,-11628,-11219,-11071,
+	-11198,-11550,-12087,-12767,-13550,-14394,-15259,-16103,
+	-16886,-17566,-18103,-18455,-18581,-1668,-1605,-1429,
+	-1163, -830, -452,  -52,  348,  726, 1059, 1325,
+	 1500, 1564, 1510, 1358, 1127,  834,  497,  134,
+	 -238, -601, -938,-1231,-1462,-1614,-1668,16383,
+	-16383,-32767,-7332,16383,-32767,-7332,-4332,-4336,
+	-4345,-4360,-4378,-4399,-4421,-4443,-4463,-4481,
+	-4496,-4506,-4509,-4506,-4498,-4485,-4469,-4451,
+	-4431,-4410,-4391,-4372,-4356,-4343,-4335,-4332,
+	-1859,-1796,-1622,-1359,-1029, -654, -257,  139,
+	  513,  843, 1107, 1281, 1344, 1290, 1140,  911,
+	  621,  287,  -73, -442, -802,-1136,-1426,-1655,
+	-1805,-1859,-3987,-3853,-3482,-2921,-2219,-1421,
+	 -577,  267, 1064, 1767, 2328, 2699, 2833, 2718,
+	 2398, 1911, 1293,  582, -184, -969,-1736,-2447,
+	-3065,-3553,-3872,-3987, 6159, 6166, 6185, 6213,
+	 6249, 6289, 6332, 6375, 6415, 6451, 6479, 6498,
+	 6505, 6499, 6483, 6458, 6427, 6391, 6352, 6312,
+	 6273, 6237, 6206, 6181, 6165, 6159,-2740,-2655,
+	-2418,-2061,-1613,-1105, -566,  -28,  480,  928,
+	 1285, 1522, 1607, 1534, 1330, 1019,  625,  172,
+	 -316, -816,-1305,-1759,-2152,-2463,-2667,-2740,
+	 3855, 3736, 3407, 2910, 2287, 1580,  831,   82,
+	 -624,-1247,-1744,-2073,-2192,-2090,-1807,-1375,
+	 -827, -196,  483, 1179, 1859, 2490, 3037, 3470,
+	 3753, 3855,16383,-18372,23168,-5636,16383,-32767,
+	-7332, 6258,-16383,-3233,-16383,-9050,-32767,-32767,
+	23715,16383,16383,16383,-32767,-16383,};
+
+static unsigned short motos_walk_tbl[]= {
+	     1,     0,	/* body_sprite(35) */
+	    26,     1,
+	     1,     0,
+	    26,    27,	/* body_sprite(35) */
+	    26,    53,
+	    26,    79,
+	     1,   781,	/* chn29(34) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* jnt29_1(29) */
+	     1,     0,
+	     1,   773,
+	     1,   763,	/* chn33(25) */
+	     1,   764,
+	     1,   765,
+	    26,   105,	/* jnt33_1(13) */
+	    26,   131,
+	    26,   157,
+	     1,     0,	/* cube5(1) */
+	     1,     0,
+	     1,     0,
+	     1,   600,	/* chn32(20) */
+	     1,   601,
+	     1,   602,
+	    26,   183,	/* jnt32_1(14) */
+	    26,   209,
+	    26,   235,
+	     1,     0,	/* cube6(2) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* eff29(11) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* L_arm_sprite(0) */
+	     1,     0,
+	     1,     0,
+	     1,   779,	/* chn31(33) */
+	     1,   780,
+	     1,     0,
+	     1,   774,	/* jnt31_1(30) */
+	     1,   775,
+	     1,   776,
+	     1,   766,	/* chn35(26) */
+	     1,   767,
+	     1,   768,
+	    26,   261,	/* jnt35_1(15) */
+	    26,   287,
+	    26,   313,
+	     1,     0,	/* cube3(4) */
+	     1,     0,
+	     1,     0,
+	     1,   603,	/* chn37(21) */
+	     1,   604,
+	     1,   605,
+	    26,   339,	/* jnt37_1(16) */
+	    26,   365,
+	    26,   391,
+	     1,     0,	/* cube4(5) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* eff31(12) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* R_arm_sprite(3) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn38(32) */
+	     1,   778,
+	     1,     0,
+	     1,   769,	/* jnt38_1(27) */
+	     1,     0,
+	     1,   770,
+	    26,   606,	/* jnt38_2(22) */
+	    26,   632,
+	    26,   658,
+	    26,   417,	/* jnt38_3(17) */
+	    26,   443,
+	    26,   469,
+	     1,     0,	/* cube2(6) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* L_foot_sprite(7) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn40(31) */
+	     1,   777,
+	     1,     0,
+	     1,   771,	/* jnt40_1(28) */
+	     1,     0,
+	     1,   772,
+	    26,   684,	/* jnt40_2(23) */
+	    26,   710,
+	    26,   736,
+	    26,   495,	/* jnt40_3(18) */
+	    26,   521,
+	    26,   547,
+	     1,     0,	/* cube7(8) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* R_foot_sprite(9) */
+	     1,     0,
+	     1,     0,
+	     1,     0,	/* chn41(24) */
+	     1,   762,
+	     1,     0,
+	    26,   573,	/* jnt41_1(19) */
+	     1,     0,
+	     1,   599,
+	     1,     0,	/* sphere3(10) */
+	     1,     0,
+	     1,     0,
+};
+
+AnimeRecord motos_walk_anm={
+	MAP_ANIM_NORMAL,	/* attr 	*/
+	0,					/* code 	*/
+	0,					/* start 	*/
+	0,					/* loop 	*/
+	26,
+	36,
+	motos_walk_prm,
+	motos_walk_tbl,
+    0
+};
+
+/*-------------------------------------------------------------*/
+
+AnimePtr motos_anime[] = {
+	&motos_basedata_A_anm,
+	&motos_carry_anm,
+	&motos_carry_run_anm,
+	&motos_carry_start_anm,
+	&motos_down_recover_anm,
+	&motos_down_stop_anm,
+	&motos_pitch_anm,
+	&motos_safe_down_anm,
+	&motos_wait_anm,
+	&motos_walk_anm,
+};
diff --git a/actors/motos/geo.inc.c b/actors/motos/geo.inc.c
new file mode 100644
index 0000000..63b60d6
--- /dev/null
+++ b/actors/motos/geo.inc.c
@@ -0,0 +1,178 @@
+#define hmsShadow(a,b,c) GEO_SHADOW(c,b,a),
+#define hmsBegin() GEO_OPEN_NODE(),
+#define hmsTrans(x,y,z) GEO_TRANSLATE(0x00, x,y,z),
+#define hmsScale(s) GEO_SCALE(0x00, (u32)(s * 65536)),
+#define hmsJoint(l,dl,x,y,z) GEO_ANIMATED_PART(l, x, y, z, dl),
+#define hmsEnd() GEO_CLOSE_NODE(),
+#define hmsExit() GEO_END(),
+#define hmsBboard(x,y,z) GEO_BILLBOARD(),
+#define hmsGfx(l,dl) GEO_DISPLAY_LIST(l, dl),
+
+#define RM_SURF LAYER_OPAQUE
+#define RM_SPRITE LAYER_ALPHA
+
+#define	softspriteON	1
+
+#define Hierarchy const GeoLayout
+/*-------------------------------------------------------------*/
+/*	Hms data 			                                       */
+/*-------------------------------------------------------------*/
+
+Hierarchy RCP_HmsEnemymotos_basedata_A[] = {
+ hmsShadow(100, 155, 1)
+ hmsBegin()
+  hmsTrans(0,-65,0)
+  hmsBegin()
+  hmsScale(0.25f)
+    hmsBegin()
+#if softspriteON
+      hmsJoint(RM_SURF,NULL,0,279,0)  /* body_sprite(35) */
+	  hmsBegin()
+		hmsBboard(0,0,0)
+	    hmsBegin()
+		  hmsGfx(RM_SPRITE,RCP_motos_body)
+	  	hmsEnd()
+	  hmsEnd()
+#else
+      hmsJoint(RM_SURF,RCP_motos_basedata_A11,0,279,0)  /* body_sprite(35) */
+#endif
+      hmsBegin()
+         hmsJoint(RM_SURF,NULL,0,0,0)  /* chn29(34) */
+         hmsBegin()
+            hmsJoint(RM_SURF,NULL,0,0,0)  /* jnt29_1(29) */
+            hmsBegin()
+               hmsJoint(RM_SURF,NULL,209,0,0)  /* chn33(25) */
+               hmsBegin()
+                  hmsJoint(RM_SURF,NULL,0,0,0)  /* jnt33_1(13) */
+                  hmsBegin()
+                     hmsJoint(RM_SURF,RCP_motos_LhandB,0,0,0)  /* cube5(1) */
+                  hmsEnd()
+               hmsEnd()
+               hmsJoint(RM_SURF,NULL,208,1,0)  /* chn32(20) */
+               hmsBegin()
+                  hmsJoint(RM_SURF,NULL,0,0,0)  /* jnt32_1(14) */
+                  hmsBegin()
+                     hmsJoint(RM_SURF,RCP_motos_LhandA,0,0,0)  /* cube6(2) */
+                  hmsEnd()
+               hmsEnd()
+               hmsJoint(RM_SURF,NULL,209,0,0)  /* eff29(11) */
+               hmsBegin()
+#if softspriteON
+                  hmsJoint(RM_SURF,NULL,0,0,0)  /* R_arm_sprite(3) */
+				  hmsBegin()
+				  		hmsBboard(0,0,0)
+						hmsBegin()
+						  hmsGfx(RM_SPRITE, RCP_motos_arm)
+						hmsEnd()
+				  hmsEnd()
+#else
+                  hmsJoint(RM_SURF,RCP_motos_basedata_A0,0,0,0)  /* L_arm_sprite(0) */
+#endif
+               hmsEnd()
+            hmsEnd()
+         hmsEnd()
+         hmsJoint(RM_SURF,NULL,0,0,0)  /* chn31(33) */
+         hmsBegin()
+            hmsJoint(RM_SURF,NULL,0,0,0)  /* jnt31_1(30) */
+            hmsBegin()
+               hmsJoint(RM_SURF,NULL,208,1,0)  /* chn35(26) */
+               hmsBegin()
+                  hmsJoint(RM_SURF,NULL,0,0,0)  /* jnt35_1(15) */
+                  hmsBegin()
+                     hmsJoint(RM_SURF,RCP_motos_RhandA,0,0,0)  /* cube3(4) */
+                  hmsEnd()
+               hmsEnd()
+               hmsJoint(RM_SURF,NULL,209,0,0)  /* chn37(21) */
+               hmsBegin()
+                  hmsJoint(RM_SURF,NULL,0,0,0)  /* jnt37_1(16) */
+                  hmsBegin()
+                     hmsJoint(RM_SURF,RCP_motos_RhandB,0,0,0)  /* cube4(5) */
+                  hmsEnd()
+                  GEO_ASM(0, geo_update_held_mario_pos),
+               hmsEnd()
+               hmsJoint(RM_SURF,NULL,209,0,0)  /* eff31(12) */
+               hmsBegin()
+
+#if softspriteON
+                  hmsJoint(RM_SURF,NULL,0,0,0)  /* R_arm_sprite(3) */
+				  hmsBegin()
+				    hmsBboard(0,0,0)
+				    hmsBegin()
+					  hmsGfx(RM_SPRITE, RCP_motos_arm)
+				    hmsEnd()
+				  hmsEnd()
+#else
+                  hmsJoint(RM_SURF,RCP_motos_basedata_A3,0,0,0)  /* R_arm_sprite(3) */
+#endif
+
+
+               hmsEnd()
+
+            hmsEnd()
+         hmsEnd()
+         hmsJoint(RM_SURF,NULL,87,0,0)  /* chn38(32) */
+         hmsBegin()
+            hmsJoint(RM_SURF,NULL,0,0,0)  /* jnt38_1(27) */
+            hmsBegin()
+               hmsJoint(RM_SURF,NULL,181,0,0)  /* jnt38_2(22) */
+               hmsBegin()
+                  hmsJoint(RM_SURF,NULL,71,0,0)  /* jnt38_3(17) */
+                  hmsBegin()
+                     hmsJoint(RM_SURF,RCP_motos_Lfoot,0,0,0)  /* cube2(6) */
+                  hmsEnd()
+
+#if softspriteON
+                  hmsJoint(RM_SURF, NULL,0,0,0)  /* L_foot_sprite(7) */
+				  hmsBegin()
+				    hmsBboard(0,0,0)
+				    hmsBegin()
+					  hmsGfx(RM_SPRITE, RCP_motos_leg)
+				    hmsEnd()
+				  hmsEnd()
+#else
+                  hmsJoint(RM_SURF,RCP_motos_basedata_A7,0,0,0)  /* L_foot_sprite(7) */
+#endif
+
+               hmsEnd()
+            hmsEnd()
+         hmsEnd()
+         hmsJoint(RM_SURF,NULL,-87,0,0)  /* chn40(31) */
+         hmsBegin()
+            hmsJoint(RM_SURF,NULL,0,0,0)  /* jnt40_1(28) */
+            hmsBegin()
+               hmsJoint(RM_SURF,NULL,181,0,0)  /* jnt40_2(23) */
+               hmsBegin()
+                  hmsJoint(RM_SURF,NULL,71,0,0)  /* jnt40_3(18) */
+                  hmsBegin()
+                     hmsJoint(RM_SURF,RCP_motos_Rfoot,0,0,0)  /* cube7(8) */
+                  hmsEnd()
+
+#if softspriteON
+                  hmsJoint(RM_SURF,NULL,0,0,0)  /* R_foot_sprite(9) */
+				  hmsBegin()
+				      hmsBboard(0,0,0)
+					  hmsBegin()
+					 	 hmsGfx(RM_SPRITE, RCP_motos_leg)
+				      hmsEnd()
+				  hmsEnd()
+#else
+                  hmsJoint(RM_SURF,RCP_motos_basedata_A9,0,0,0)  /* R_foot_sprite(9) */
+#endif
+
+
+               hmsEnd()
+            hmsEnd()
+         hmsEnd()
+         hmsJoint(RM_SURF,NULL,0,178,0)  /* chn41(24) */
+         hmsBegin()
+            hmsJoint(RM_SURF,NULL,0,0,0)  /* jnt41_1(19) */
+            hmsBegin()
+               hmsJoint(RM_SURF,RCP_motos_head,0,0,0)  /* sphere3(10) */
+            hmsEnd()
+         hmsEnd()
+      hmsEnd()
+   hmsEnd()
+  hmsEnd()
+ hmsEnd()
+ hmsExit()
+};
diff --git a/actors/motos/header.h b/actors/motos/header.h
new file mode 100644
index 0000000..f47eb86
--- /dev/null
+++ b/actors/motos/header.h
@@ -0,0 +1,34 @@
+extern const GeoLayout RCP_HmsEnemymotos_basedata_A[];
+extern const struct Animation *const motos_anime[];
+extern const Gfx RCP_motos_body[];
+extern const Gfx RCP_motos_arm[];
+extern const Gfx RCP_motos_leg[];
+extern const Gfx RCP_motos_basedata_A0[];
+extern const Gfx gfx_motos_LhandB_0[];
+extern const Gfx gfx_motos_LhandB_1[];
+extern const Gfx RCP_motos_LhandB[];
+extern const Gfx gfx_motos_LhandA_0[];
+extern const Gfx gfx_motos_LhandA_1[];
+extern const Gfx RCP_motos_LhandA[];
+extern const Gfx RCP_motos_basedata_A3[];
+extern const Gfx gfx_motos_RhandA_0[];
+extern const Gfx gfx_motos_RhandA_1[];
+extern const Gfx RCP_motos_RhandA[];
+extern const Gfx gfx_motos_RhandB_0[];
+extern const Gfx gfx_motos_RhandB_1[];
+extern const Gfx RCP_motos_RhandB[];
+extern const Gfx gfx_motos_Lfoot_0[];
+extern const Gfx gfx_motos_Lfoot_1[];
+extern const Gfx gfx_motos_Lfoot_2[];
+extern const Gfx RCP_motos_Lfoot[];
+extern const Gfx RCP_motos_basedata_A7[];
+extern const Gfx gfx_motos_Rfoot_0[];
+extern const Gfx gfx_motos_Rfoot_1[];
+extern const Gfx gfx_motos_Rfoot_2[];
+extern const Gfx RCP_motos_Rfoot[];
+extern const Gfx RCP_motos_basedata_A9[];
+extern const Gfx gfx_motos_head_0[];
+extern const Gfx gfx_motos_head_1[];
+extern const Gfx gfx_motos_head_2[];
+extern const Gfx RCP_motos_head[];
+extern const Gfx RCP_motos_basedata_A11[];
\ No newline at end of file
diff --git a/actors/motos/model.inc.c b/actors/motos/model.inc.c
new file mode 100644
index 0000000..3965f91
--- /dev/null
+++ b/actors/motos/model.inc.c
@@ -0,0 +1,2386 @@
+#define ShapeColor(r,g,b) gdSPDefLights1(r/4,g/4,b/4,r,g,b,0x28,0x28,0x28)
+
+#define	softspriteON	1
+#define ShapeColor_motos_basedata_A(r,g,b)   ShapeColor(r,g,b)
+
+#define	gsxDPLoadTextureImage(fmt, siz, width, height,		\
+		pal, cms, cmt, masks, maskt, shifts, shiftt)		\
+									\
+	gsDPSetTile(fmt, siz, 0, 0, G_TX_LOADTILE, 0 , cmt, maskt,	\
+		shiftt, cms, masks, shifts),				\
+	gsDPLoadSync(),							\
+	gsDPLoadBlock(G_TX_LOADTILE, 0, 0, (width)*(height)-1,		\
+				 	CALC_DXT(width, siz##_BYTES)),					\
+	gsDPSetTile(fmt, siz, ((((width) * siz##_LINE_BYTES)+7)>>3), 0,	\
+		G_TX_RENDERTILE, pal, cmt, maskt, shiftt, cms, masks,	\
+		shifts),						\
+	gsDPSetTileSize(G_TX_RENDERTILE, 0, 0,				\
+		((width)-1) << G_TEXTURE_IMAGE_FRAC,			\
+		((height)-1) << G_TEXTURE_IMAGE_FRAC)
+
+
+/********************************************************************************/
+/*	Static display-list to load texture image made by Tanimoto.					*/
+/********************************************************************************/
+
+#define	g_Tani_LoadTextureImage(gfxptr, timg, fmt, siz, width, height,	tmem, ttdn)		\
+																						\
+	gDPSetTextureImage(gfxptr, fmt, siz, 1, timg);										\
+	gDPTileSync(gfxptr);																\
+	gDPSetTile(gfxptr, fmt, siz, 0, tmem, ttdn, 0,  0,0,0, 0,0,0);						\
+	gDPLoadSync(gfxptr);																\
+	gDPLoadBlock(gfxptr, ttdn, 0, 0, ((width)*(height)-1),								\
+				  CALC_DXT(width, siz##_BYTES) )
+
+
+#define	gs_Tani_LoadTextureImage(timg, fmt, siz, width, height,	tmem, ttdn)			\
+																					\
+	gsDPSetTextureImage(fmt, siz, 1, timg),											\
+	gsDPTileSync(),																	\
+	gsDPSetTile(fmt, siz, 0, tmem, ttdn, 0,  0,0,0, 0,0,0),							\
+	gsDPLoadSync(),																	\
+	gsDPLoadBlock(ttdn, 0, 0, ((width)*(height)-1),									\
+				  CALC_DXT(width, siz##_BYTES) )
+
+/********************************************************************************/
+/*	Static display-list to load texture image Ver.2 made by Tanimoto.			*/
+/********************************************************************************/
+
+#define	g_Tani_LoadTextureImage2(gfxptr, timg, fmt, siz, width, height,	tmem, ttdn)		\
+																						\
+	gDPSetTextureImage(gfxptr, fmt, siz, 1, timg);										\
+	gDPLoadSync(gfxptr);																\
+	gDPLoadBlock(gfxptr, ttdn, 0, 0, ((width)*(height)-1),								\
+				  CALC_DXT(width, siz##_BYTES) )
+
+
+#define	gs_Tani_LoadTextureImage2(timg, fmt, siz, width, height, tmem, ttdn)		\
+																					\
+	gsDPSetTextureImage(fmt, siz, 1, timg),											\
+	gsDPLoadSync(),																	\
+	gsDPLoadBlock(ttdn, 0, 0, ((width)*(height)-1),									\
+				  CALC_DXT(width, siz##_BYTES) )
+
+
+/********************************************************************************/
+/*	Static display-list to set up Texture Tile Descriptor made by Tanimoto.		*/
+/********************************************************************************/
+
+#define	g_Tani_SetUpTileDescrip(gfxptr, fmt, siz, width, height, tmem, ttdn, 		\
+							 cms, masks, shifts, cmt, maskt, shiftt)				\
+																					\
+	gDPTileSync(gfxptr);															\
+	gDPSetTile(gfxptr, fmt, siz, ((((width)*siz##_LINE_BYTES)+7)>>3), tmem,			\
+				ttdn, 0, (cmt), (maskt), (shiftt), (cms), (masks), (shifts));		\
+	gDPSetTileSize(gfxptr, ttdn, 0, 0,												\
+					(((width) -1) << G_TEXTURE_IMAGE_FRAC),							\
+					(((height)-1) << G_TEXTURE_IMAGE_FRAC) )
+
+
+#define	gs_Tani_SetUpTileDescrip(fmt, siz, width, height, tmem, ttdn, 				\
+							 	 cms, masks, shifts, cmt, maskt, shiftt)			\
+																					\
+	gsDPTileSync(),																	\
+	gsDPSetTile(fmt, siz, ((((width)*siz##_LINE_BYTES)+7)>>3), tmem,				\
+				ttdn, 0, (cmt), (maskt), (shiftt), (cms), (masks), (shifts)),		\
+	gsDPSetTileSize(ttdn, 0, 0,														\
+					(((width) -1) << G_TEXTURE_IMAGE_FRAC),							\
+					(((height)-1) << G_TEXTURE_IMAGE_FRAC) )
+
+
+/*-------------------------------------------------------------*/
+/*	light data                                                 */
+/*-------------------------------------------------------------*/
+static Lights1 light_motos_basedata_A[]={
+	ShapeColor_motos_basedata_A(228,131,0),
+	ShapeColor_motos_basedata_A(76,76,98),
+	ShapeColor_motos_basedata_A(13,28,48),
+	ShapeColor_motos_basedata_A(15,54,111),
+	ShapeColor_motos_basedata_A(255,0,0),
+	ShapeColor_motos_basedata_A(255,255,255),
+};
+
+/*-------------------------------------------------------------*/
+/*	texture data                                               */
+/*-------------------------------------------------------------*/
+static unsigned short motos_skinA_txt[] = {
+    0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  0x73a9,  0x73ab,  0x73ab,  0x73ab,  0x7beb,  0x7bed,  0x7bed,  0x842f,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  0xa537,  0xa537,  0xad79,  0xb5bb,  0xbdfb,  0xbdfd,  
+    0x5ae5,  0x5ae5,  0x5ae5,  0x52a5,  0xad75,  0x8c6f,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  0x73a9,  0x73ab,  0x73ab,  0x73ab,  0x7beb,  0x7bed,  0x7bed,  0x842f,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x52a5,  0xad75,  0x8c6f,  0xad79,  0xb5bb,  0xbdfb,  
+    0x5ae3,  0x5ae5,  0x2959,  0x4a63,  0xa533,  0x8c6f,  0xa533,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  0x73a9,  0x73ab,  0x73ab,  0x73ab,  0x7beb,  0x7bed,  0x7bed,  0x842f,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x2959,  0x4a63,  0xa533,  0x8c6f,  0xa533,  0xad79,  0xb5bb,  
+    0x5ae3,  0x2115,  0x2115,  0x4a63,  0x9cf1,  0x842d,  0x9cf1,  0xa531,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  0x73a9,  0x73ab,  0x73ab,  0x73ab,  0x7beb,  0x7bed,  0x7bed,  0x842f,  0x842f,  0x8c6f,  0x2115,  0x2115,  0x4a63,  0x9cf1,  0x842d,  0x9cf1,  0xa531,  0xad79,  
+    0x52a3,  0x18d3,  0x18d3,  0x39df,  0x94af,  0x73ab,  0x7bed,  0x7be9,  0x6327,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  0x73a9,  0x73ab,  0x73ab,  0x73ab,  0x7beb,  0x7bed,  0x7bed,  0x842f,  0x842f,  0x18d3,  0x18d3,  0x39df,  0x94af,  0x73ab,  0x7bed,  0x7be9,  0xa537,  
+    0x52a3,  0x2115,  0x18d1,  0x2957,  0x8c6d,  0x52a5,  0x5ae3,  0x421d,  0x6325,  0x6327,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  0x73a9,  0x73ab,  0x73ab,  0x73ab,  0x7beb,  0x7bed,  0x7bed,  0x842f,  0x2115,  0x18d1,  0x2957,  0x8c6d,  0x52a5,  0x5ae3,  0x421d,  0xa537,  
+    0x52a3,  0x52a3,  0x18d3,  0x108f,  0x842b,  0x2957,  0x3199,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  0x73a9,  0x73ab,  0x73ab,  0x73ab,  0x7beb,  0x7bed,  0x7bed,  0x842f,  0x18d3,  0x108f,  0x842b,  0x2957,  0x3199,  0x9cf3,  0x9cf5,  
+    0x52a1,  0x52a3,  0x52a3,  0x2115,  0x1091,  0x2115,  0x5ae5,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  0x73a9,  0x73ab,  0x73ab,  0x73ab,  0x7beb,  0x7bed,  0x7bed,  0x842f,  0x2115,  0x1091,  0x2115,  0x94b1,  0x94b3,  0x9cf3,  
+    0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  0x73a9,  0x73ab,  0x73ab,  0x73ab,  0x7beb,  0x7bed,  0x7bed,  0x842f,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  
+    0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  0x73a9,  0x73ab,  0x73ab,  0x73ab,  0x7beb,  0x7bed,  0x7bed,  0x842f,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  
+    0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  0x73a9,  0x73ab,  0x73ab,  0x73ab,  0x7beb,  0x7bed,  0x7bed,  0x842f,  0x842f,  0x8c6f,  0x8c71,  
+    0x4a61,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  0x73a9,  0x73ab,  0x73ab,  0x73ab,  0x7beb,  0x7bed,  0x7bed,  0x842f,  0x842f,  0x8c6f,  
+    0x4a5f,  0x4a61,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  0x73a9,  0x73ab,  0x73ab,  0x73ab,  0x7beb,  0x7bed,  0x7bed,  0x842f,  0x842f,  
+    0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  0x73a9,  0x73ab,  0x73ab,  0x73ab,  0x7beb,  0x7bed,  0x7bed,  0x842f,  
+    0x421f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  0x73a9,  0x73ab,  0x73ab,  0x73ab,  0x7beb,  0x7bed,  0x7bed,  
+    0x421f,  0x421f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  0x73a9,  0x73ab,  0x73ab,  0x73ab,  0x7beb,  0x7bed,  
+    0x421f,  0x421f,  0x421f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  0x73a9,  0x73ab,  0x73ab,  0x73ab,  0x7beb,  
+    0x421d,  0x421f,  0x421f,  0x421f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  0x73a9,  0x73ab,  0x73ab,  0x73ab,  
+    0x421d,  0x421d,  0x421f,  0x421f,  0x421f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  0x73a9,  0x73ab,  0x73ab,  
+    0x39dd,  0x421d,  0x421d,  0x421f,  0x421f,  0x421f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  0x73a9,  0x73ab,  
+    0x39dd,  0x39dd,  0x421d,  0x421d,  0x421f,  0x421f,  0x421f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  0x73a9,  
+    0x39dd,  0x39dd,  0x39dd,  0x421d,  0x421d,  0x421f,  0x421f,  0x421f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  0x6b69,  
+    0x39db,  0x39dd,  0x39dd,  0x39dd,  0x421d,  0x421d,  0x421f,  0x421f,  0x421f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6327,  0x6327,  0x6b67,  0x6b69,  0x6b69,  
+    0x39db,  0x39db,  0x39dd,  0x39dd,  0x39dd,  0x421d,  0x421d,  0x421f,  0x421f,  0x421f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6327,  0x6327,  0x6b67,  0x6b69,  
+    0x39db,  0x39db,  0x39db,  0x52a5,  0xad75,  0x8c6f,  0x421d,  0x421d,  0x421f,  0x421f,  0x421f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x5ae5,  0x52a5,  0xad75,  0x8c6f,  0x6327,  0x6327,  0x6b67,  
+    0x319b,  0x39db,  0x2959,  0x4a63,  0xa533,  0x8c6f,  0xa533,  0x421d,  0x421d,  0x421f,  0x421f,  0x421f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae5,  0x2959,  0x4a63,  0xa533,  0x8c6f,  0xa533,  0x6327,  0x6327,  
+    0x319b,  0x2115,  0x2115,  0x4a63,  0x9cf1,  0x842d,  0x9cf1,  0xa531,  0x421d,  0x421d,  0x421f,  0x421f,  0x421f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x52a3,  0x5ae3,  0x2115,  0x2115,  0x4a63,  0x9cf1,  0x842d,  0x9cf1,  0xa531,  0x6327,  
+    0x319b,  0x18d3,  0x18d3,  0x39df,  0x94af,  0x73ab,  0x7bed,  0x7be9,  0x39dd,  0x421d,  0x421d,  0x421f,  0x421f,  0x421f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x52a3,  0x18d3,  0x18d3,  0x39df,  0x94af,  0x73ab,  0x7bed,  0x7be9,  0x6327,  
+    0x3199,  0x2115,  0x18d1,  0x2957,  0x8c6d,  0x52a5,  0x5ae3,  0x421d,  0x39dd,  0x39dd,  0x421d,  0x421d,  0x421f,  0x421f,  0x421f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x2115,  0x18d1,  0x2957,  0x8c6d,  0x52a5,  0x5ae3,  0x421d,  0x6325,  
+    0x3199,  0x3199,  0x18d3,  0x108f,  0x842b,  0x2957,  0x3199,  0x39db,  0x39dd,  0x39dd,  0x39dd,  0x421d,  0x421d,  0x421f,  0x421f,  0x421f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x18d3,  0x108f,  0x842b,  0x2957,  0x3199,  0x5ae5,  0x6325,  
+    0x2959,  0x3199,  0x3199,  0x2115,  0x1091,  0x2115,  0x39db,  0x39db,  0x39db,  0x39dd,  0x39dd,  0x39dd,  0x421d,  0x421d,  0x421f,  0x421f,  0x421f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x2115,  0x1091,  0x2115,  0x5ae5,  0x5ae5,  0x5ae5,  
+    0x2959,  0x2959,  0x3199,  0x3199,  0x319b,  0x319b,  0x319b,  0x39db,  0x39db,  0x39db,  0x39dd,  0x39dd,  0x39dd,  0x421d,  0x421d,  0x421f,  0x421f,  0x421f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  
+};
+
+static unsigned short motos_skinB_txt[] = {
+    0x319b,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  0xa535,  0xa537,  0xad77,  0xad79,  0xb5bb,  0xbdfb,  0xbdfd,  0xc63d,  
+    0x3199,  0x39db,  0x39db,  0x52a5,  0xad75,  0x8c6f,  0x39db,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x52a5,  0xad75,  0x8c6f,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x7bed,  0x842d,  0x842f,  0x8c6f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  0xa537,  0x52a5,  0xad75,  0x8c6f,  0xb5bb,  0xbdfd,  0xc63d,  
+    0x3199,  0x319b,  0x2959,  0x4a63,  0xa533,  0x8c6f,  0xa533,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x2959,  0x4a63,  0xa533,  0x8c6f,  0xa533,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  0x2959,  0x4a63,  0xa533,  0x8c6f,  0xa533,  0xbdfb,  0xbdfd,  
+    0x3199,  0x2115,  0x2115,  0x4a63,  0x9cf1,  0x842d,  0x9cf1,  0xa531,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x2115,  0x2115,  0x4a63,  0x9cf1,  0x842d,  0x9cf1,  0xa531,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x7bed,  0x842d,  0x842f,  0x8c6f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x2115,  0x2115,  0x4a63,  0x9cf1,  0x842d,  0x9cf1,  0xa531,  0xbdfd,  
+    0x3199,  0x18d3,  0x18d3,  0x39df,  0x94af,  0x73ab,  0x7bed,  0x7be9,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x18d3,  0x18d3,  0x39df,  0x94af,  0x73ab,  0x7bed,  0x7be9,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x18d3,  0x18d3,  0x39df,  0x94af,  0x73ab,  0x7bed,  0x7be9,  0xbdfb,  
+    0x3199,  0x2115,  0x18d1,  0x2957,  0x8c6d,  0x52a5,  0x5ae3,  0x421d,  0x39db,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x2115,  0x18d1,  0x2957,  0x8c6d,  0x52a5,  0x5ae3,  0x421d,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x7bed,  0x842d,  0x842f,  0x8c6f,  0x8c6f,  0x8c71,  0x94b1,  0x2115,  0x18d1,  0x2957,  0x8c6d,  0x52a5,  0x5ae3,  0x421d,  0xb5bb,  
+    0x3199,  0x3199,  0x18d3,  0x108f,  0x842b,  0x2957,  0x3199,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x18d3,  0x108f,  0x842b,  0x2957,  0x3199,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x18d3,  0x108f,  0x842b,  0x2957,  0x3199,  0xad79,  0xb5bb,  
+    0x3199,  0x3199,  0x3199,  0x2115,  0x1091,  0x2115,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x2115,  0x1091,  0x2115,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x7bed,  0x842d,  0x842f,  0x8c6f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x2115,  0x1091,  0x2115,  0xad77,  0xad79,  0xb5b9,  
+    0x3199,  0x3199,  0x3199,  0x3199,  0x319b,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  0xa535,  0xa537,  0xad77,  0xad79,  
+    0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x7bed,  0x842d,  0x842f,  0x8c6f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  0xa537,  0xad77,  0xad79,  
+    0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x319b,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  0xa535,  0xa537,  0xad77,  
+    0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x7bed,  0x842d,  0x842f,  0x8c6f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  0xa537,  0xad77,  
+    0x2959,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x319b,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  0xa535,  0xa537,  
+    0x2957,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x7bed,  0x842d,  0x842f,  0x8c6f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  0xa537,  
+    0x2957,  0x2959,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x319b,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  0xa535,  
+    0x2957,  0x2957,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x7bed,  0x842d,  0x842f,  0x8c6f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  
+    0x2957,  0x2957,  0x2959,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x319b,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  
+    0x2957,  0x2957,  0x2957,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x7bed,  0x842d,  0x842f,  0x8c6f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  
+    0x2957,  0x2957,  0x2957,  0x2959,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x319b,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  
+    0x2957,  0x2957,  0x2957,  0x2957,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x7bed,  0x842d,  0x842f,  0x8c6f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  
+    0x2957,  0x2957,  0x2957,  0x2957,  0x2959,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x319b,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  
+    0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x73ab,  0x7beb,  0x7bed,  0x7bed,  0x842d,  0x842f,  0x8c6f,  0x8c6f,  0x8c71,  0x94b1,  
+    0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x2959,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x319b,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  
+    0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x73ab,  0x7beb,  0x7bed,  0x7bed,  0x842d,  0x842f,  0x842f,  0x8c6f,  0x8c71,  
+    0x2957,  0x2957,  0x2957,  0x2957,  0x52a5,  0xad75,  0x8c6f,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x319b,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x52a5,  0xad75,  0x8c6f,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x52a5,  0xad75,  0x8c6f,  0x842f,  0x8c6f,  0x8c71,  
+    0x2115,  0x2957,  0x2957,  0x2959,  0x4a63,  0xa533,  0x8c6f,  0xa533,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x2959,  0x4a63,  0xa533,  0x8c6f,  0xa533,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x73ab,  0x2959,  0x4a63,  0xa533,  0x8c6f,  0xa533,  0x842f,  0x8c6f,  
+    0x2115,  0x2957,  0x2115,  0x2115,  0x4a63,  0x9cf1,  0x842d,  0x9cf1,  0xa531,  0x3199,  0x3199,  0x3199,  0x3199,  0x319b,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x2115,  0x2115,  0x4a63,  0x9cf1,  0x842d,  0x9cf1,  0xa531,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x2115,  0x2115,  0x4a63,  0x9cf1,  0x842d,  0x9cf1,  0xa531,  0x8c6f,  
+    0x2115,  0x2115,  0x18d3,  0x18d3,  0x39df,  0x94af,  0x73ab,  0x7bed,  0x7be9,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x18d3,  0x18d3,  0x39df,  0x94af,  0x73ab,  0x7bed,  0x7be9,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  0x73a9,  0x73a9,  0x18d3,  0x18d3,  0x39df,  0x94af,  0x73ab,  0x7bed,  0x7be9,  0x842f,  
+    0x2115,  0x2115,  0x2115,  0x18d1,  0x2957,  0x8c6d,  0x52a5,  0x5ae3,  0x421d,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x319b,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x2115,  0x18d1,  0x2957,  0x8c6d,  0x52a5,  0x5ae3,  0x421d,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x2115,  0x18d1,  0x2957,  0x8c6d,  0x52a5,  0x5ae3,  0x421d,  0x842f,  
+    0x2115,  0x2115,  0x2115,  0x18d3,  0x108f,  0x842b,  0x2957,  0x3199,  0x2957,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x18d3,  0x108f,  0x842b,  0x2957,  0x3199,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  0x73a9,  0x73a9,  0x18d3,  0x108f,  0x842b,  0x2957,  0x3199,  0x842d,  0x842f,  
+    0x2115,  0x2115,  0x2115,  0x2957,  0x2115,  0x1091,  0x2115,  0x2957,  0x2957,  0x2959,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x319b,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x2115,  0x1091,  0x2115,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x2115,  0x1091,  0x2115,  0x7bed,  0x842d,  0x842d,  
+    0x2115,  0x2115,  0x2115,  0x2115,  0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  
+};
+
+static unsigned short motos_skinC_txt[] = {
+    0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  0xa535,  0xa537,  0xad79,  0xb5b9,  0xb5bb,  0xbdfd,  0xc63d,  
+    0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  0xa535,  0xa537,  0xad79,  0xb5b9,  0xb5bb,  0xbdfd,  
+    0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  0xa535,  0xa537,  0xad79,  0xb5b9,  0xb5bb,  
+    0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  0xa537,  0xa537,  0xad79,  0xb5b9,  
+    0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  0xa537,  0xad77,  0xad79,  
+    0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  0xa537,  0xad77,  
+    0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  0xa537,  
+    0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  
+    0x52a1,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842f,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  
+    0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842f,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  
+    0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842f,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  
+    0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842f,  0x842f,  0x8c6f,  0x8c71,  
+    0x4a61,  0x52a1,  0x52a1,  0x52a5,  0xad75,  0x8c6f,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x73ab,  0x7beb,  0x52a5,  0xad75,  0x8c6f,  0x842f,  0x842f,  0x8c6f,  
+    0x4a5f,  0x4a61,  0x2959,  0x4a63,  0xa533,  0x8c6f,  0xa533,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x2959,  0x4a63,  0xa533,  0x8c6f,  0xa533,  0x842f,  0x8c6f,  
+    0x4a5f,  0x2115,  0x2115,  0x4a63,  0x9cf1,  0x842d,  0x9cf1,  0xa531,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x2115,  0x2115,  0x4a63,  0x9cf1,  0x842d,  0x9cf1,  0xa531,  0x842f,  
+    0x4a5f,  0x18d3,  0x18d3,  0x39df,  0x94af,  0x73ab,  0x7bed,  0x7be9,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  0x18d3,  0x18d3,  0x39df,  0x94af,  0x73ab,  0x7bed,  0x7be9,  0x842d,  
+    0x4a5f,  0x2115,  0x18d1,  0x2957,  0x8c6d,  0x52a5,  0x5ae3,  0x421d,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b69,  0x2115,  0x18d1,  0x2957,  0x8c6d,  0x52a5,  0x5ae3,  0x421d,  0x7bed,  
+    0x4a5f,  0x4a5f,  0x18d3,  0x108f,  0x842b,  0x2957,  0x3199,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b69,  0x18d3,  0x108f,  0x842b,  0x2957,  0x3199,  0x7beb,  0x7bed,  
+    0x421f,  0x4a5f,  0x4a5f,  0x2115,  0x1091,  0x2115,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x2115,  0x1091,  0x2115,  0x73ab,  0x73ab,  0x7beb,  
+    0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x73ab,  
+    0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  
+    0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  0x73a9,  0x73a9,  
+    0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  0x73a9,  
+    0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  
+    0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  
+    0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  
+    0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  
+    0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  
+    0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  
+    0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  
+    0x319b,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  
+    0x3199,  0x319b,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  
+};
+
+static unsigned short motos_skinD_txt[] = {
+    0x3199,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x6325,  0x6325,  0x6b67,  0x6b67,  0x73a9,  0x7beb,  0x842b,  0x842d,  0x94b1,  0xa533,  0xad75,  0xbdf9,  0xef7f,  
+    0x3199,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x5ae3,  0x5ae3,  0x5ae3,  0x6325,  0x6325,  0x6b67,  0x6b67,  0x73a9,  0x7be9,  0x7beb,  0x8c6f,  0x9cf1,  0xa533,  0xb5b7,  0xef7f,  
+    0x3199,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x6325,  0x6325,  0x6b67,  0x73a7,  0x73a9,  0x7beb,  0x842d,  0x8c6d,  0x94af,  0x9cf1,  0x9cf3,  0xa533,  0xa535,  0xad75,  0xad75,  0xb5b7,  0xb5b7,  0xbdf7,  0xbdf9,  0xc639,  0xc63b,  0xce7b,  0xef7f,  
+    0x3199,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x6325,  0x6325,  0x6b67,  0x6b67,  0x73a9,  0x73a9,  0x7beb,  0x842d,  0x8c6d,  0x94af,  0x9cf1,  0x9cf1,  0xa533,  0xad75,  0xad75,  0xb5b7,  0xbdf9,  0xc63b,  0xef7f,  
+    0x319b,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6b67,  0x6b67,  0x73a9,  0x73a9,  0x7beb,  0x7beb,  0x842b,  0x842d,  0x8c6f,  0x94af,  0x9cf1,  0xa533,  0xa533,  0xad75,  0xb5b7,  0xbdf7,  0xbdf9,  0xc63b,  0xce7b,  0xef7f,  
+    0x39db,  0x52a1,  0x52a1,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x73a7,  0x73a9,  0x73a9,  0x7be9,  0x7beb,  0x842b,  0x8c6d,  0x94af,  0x9cf1,  0xa533,  0xad75,  0xb5b7,  0xbdf7,  0xc639,  0xc63b,  0xce7b,  0xce7d,  0xef7f,  
+    0x39db,  0x5ae5,  0x6325,  0x6325,  0x6b67,  0x6b67,  0x73a7,  0x73a9,  0x7be9,  0x7beb,  0x842b,  0x842d,  0x8c6d,  0x8c6f,  0x94af,  0x94b1,  0x9cf1,  0x9cf3,  0xa533,  0xa533,  0xad75,  0xb5b7,  0xbdf7,  0xbdf9,  0xc639,  0xc63b,  0xc63b,  0xce7b,  0xce7d,  0xd6bd,  0xd6bd,  0xef7f,  
+    0x39db,  0x5ae3,  0x5ae3,  0x6325,  0x6325,  0x6325,  0x6b67,  0x6b67,  0x73a9,  0x73a9,  0x7be9,  0x7beb,  0x842d,  0x8c6d,  0x8c6f,  0x94af,  0x9cf1,  0x9cf1,  0xa533,  0xad75,  0xad75,  0xb5b7,  0xbdf7,  0xbdf9,  0xc639,  0xc63b,  0xce7b,  0xce7b,  0xd6bd,  0xd6bd,  0xd6bd,  0xef7f,  
+    0x39db,  0x5ae1,  0x5ae3,  0x5ae3,  0x5ae3,  0x6323,  0x6325,  0x6b65,  0x6b67,  0x73a7,  0x73a9,  0x7beb,  0x842b,  0x8c6d,  0x8c6f,  0x94af,  0x94b1,  0x9cf1,  0xa533,  0xad75,  0xad75,  0xb5b7,  0xb5b7,  0xbdf9,  0xc639,  0xc63b,  0xce7b,  0xce7b,  0xce7d,  0xce7d,  0xd6bd,  0xef7f,  
+    0x39db,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x6325,  0x6325,  0x6325,  0x6b67,  0x6b67,  0x73a9,  0x73a9,  0x7beb,  0x842b,  0x842d,  0x8c6f,  0x94af,  0x9cf1,  0x9cf3,  0xa533,  0xad75,  0xb5b7,  0xbdf9,  0xc639,  0xc63b,  0xce7b,  0xd6bd,  0xd6bd,  0xef7f,  
+    0x39dd,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x6325,  0x6325,  0x6b67,  0x6b67,  0x73a9,  0x73a9,  0x7beb,  0x7beb,  0x842d,  0x842d,  0x8c6d,  0x8c6f,  0x94af,  0x94b1,  0x9cf1,  0xa533,  0xad75,  0xad75,  0xb5b7,  0xbdf9,  0xc639,  0xc63b,  0xce7b,  0xce7b,  0xd6bd,  0xd6bd,  0xef7f,  
+    0x421d,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x73a9,  0x73a9,  0x7beb,  0x842d,  0x8c6d,  0x94af,  0x9cf1,  0xa533,  0xad75,  0xbdf7,  0xc639,  0xc63b,  0xce7b,  0xd6bd,  0xd6bd,  0xef7f,  
+    0x421d,  0x52a3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x73a9,  0x73a9,  0x7beb,  0x842d,  0x8c6d,  0x94af,  0x9cf1,  0xa533,  0xa535,  0xad75,  0xb5b7,  0xb5b7,  0xbdf9,  0xc63b,  0xd6bd,  0xd6bd,  0xef7f,  
+    0x421d,  0x5ae3,  0x5ae5,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6325,  0x6b67,  0x6b67,  0x6b67,  0x6b67,  0x73a9,  0x73a9,  0x73a9,  0x7beb,  0x842b,  0x842d,  0x8c6f,  0x94af,  0x9cf1,  0xa533,  0xad75,  0xad75,  0xb5b7,  0xbdf9,  0xc639,  0xce7b,  0xce7d,  0xd6bd,  0xd6bd,  0xef7f,  
+    0x421d,  0x6325,  0x6325,  0x6325,  0x6325,  0x6325,  0x6325,  0x6b67,  0x6b67,  0x6b67,  0x6b67,  0x73a9,  0x73a9,  0x73a9,  0x7beb,  0x7beb,  0x842d,  0x8c6d,  0x94af,  0x9cf1,  0xa533,  0xad75,  0xb5b7,  0xbdf9,  0xc639,  0xce7b,  0xce7b,  0xd6bd,  0xd6bd,  0xd6bd,  0xd6bd,  0xef7f,  
+    0x421d,  0x6325,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b67,  0x73a9,  0x73a9,  0x73a9,  0x7beb,  0x7beb,  0x842d,  0x842d,  0x8c6f,  0x94af,  0x94b1,  0x9cf1,  0xa533,  0xad75,  0xb5b7,  0xbdf7,  0xbdf9,  0xc63b,  0xce7b,  0xce7d,  0xd6bd,  0xd6bd,  0xef7f,  
+    0x421f,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x7beb,  0x7beb,  0x7beb,  0x842d,  0x8c6f,  0x94af,  0x94b1,  0x9cf1,  0xa533,  0xad75,  0xb5b7,  0xbdf9,  0xc639,  0xce7b,  0xd6bd,  0xef7f,  
+    0x4a5f,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x7be9,  0x7beb,  0x7beb,  0x842d,  0x842d,  0x8c6d,  0x8c6f,  0x94af,  0x94b1,  0x9cf1,  0x9cf1,  0x9cf3,  0xa533,  0xa535,  0xad75,  0xb5b7,  0xb5b7,  0xbdf7,  0xbdf9,  0xce7b,  0xef7f,  
+    0x4a5f,  0x6325,  0x6325,  0x6327,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x73a9,  0x7beb,  0x7beb,  0x842b,  0x842d,  0x842d,  0x8c6f,  0x8c6f,  0x94af,  0x94b1,  0x94b1,  0xa533,  0xad75,  0xb5b7,  0xbdf9,  0xc639,  0xce7b,  0xef7f,  
+    0x4a5f,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x7beb,  0x7beb,  0x7beb,  0x842d,  0x842d,  0x8c6d,  0x8c6f,  0x94af,  0x94b1,  0x94b1,  0x9cf1,  0x9cf3,  0xa533,  0xad75,  0xb5b7,  0xbdf7,  0xc639,  0xce7b,  0xce7b,  0xef7f,  
+    0x4a5f,  0x6327,  0x6b67,  0x6b67,  0x6b69,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x73ab,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x8c6f,  0x8c6f,  0x94af,  0x94b1,  0x9cf1,  0x9cf3,  0x9cf3,  0xa533,  0xad75,  0xb5b5,  0xb5b7,  0xbdf9,  0xc639,  0xce7b,  0xce7b,  0xce7b,  0xd6bd,  0xef7f,  
+    0x4a61,  0x6b67,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x8c6f,  0x8c6f,  0x94af,  0x94b1,  0x94b1,  0x9cf1,  0xa533,  0xa535,  0xad75,  0xb5b7,  0xbdf9,  0xbdf9,  0xc639,  0xce7b,  0xef7f,  
+    0x52a1,  0x73a9,  0x73a9,  0x7be9,  0x7beb,  0x7beb,  0x7beb,  0x842b,  0x842d,  0x842d,  0x842d,  0x8c6d,  0x8c6f,  0x8c6f,  0x8c6f,  0x94af,  0x94b1,  0x94b1,  0x9cf1,  0x9cf3,  0x9cf3,  0xa533,  0xa533,  0xa535,  0xad75,  0xad75,  0xb5b7,  0xb5b7,  0xbdf9,  0xc63b,  0xd6bd,  0xef7f,  
+    0x52a1,  0x73a9,  0x73a9,  0x73a9,  0x73a9,  0x73a9,  0x7beb,  0x7beb,  0x7beb,  0x7beb,  0x842d,  0x842d,  0x842d,  0x8c6f,  0x8c6f,  0x94af,  0x94b1,  0x9cf1,  0x9cf1,  0x9cf3,  0xa533,  0xa535,  0xad75,  0xb5b5,  0xb5b7,  0xbdf9,  0xc639,  0xce7b,  0xd6bb,  0xd6bd,  0xd6bd,  0xef7f,  
+    0x52a1,  0x73a9,  0x73a9,  0x7beb,  0x7beb,  0x7beb,  0x7beb,  0x842d,  0x842d,  0x842d,  0x842d,  0x8c6f,  0x8c6f,  0x8c6f,  0x8c6f,  0x94b1,  0x94b1,  0x9cf1,  0x9cf3,  0xa533,  0xa535,  0xad75,  0xb5b7,  0xb5b7,  0xbdf7,  0xbdf9,  0xc639,  0xc63b,  0xce7b,  0xd6bd,  0xd6bd,  0xef7f,  
+    0x52a1,  0x842b,  0x842d,  0x842d,  0x842d,  0x8c6d,  0x8c6f,  0x8c6f,  0x94af,  0x94af,  0x94b1,  0x9cf1,  0x9cf3,  0xa533,  0xa533,  0xa535,  0xad75,  0xad75,  0xb5b7,  0xb5b7,  0xb5b7,  0xbdf7,  0xbdf9,  0xbdf9,  0xc639,  0xc63b,  0xce7b,  0xce7b,  0xd6bd,  0xd6bd,  0xd6bd,  0xef7f,  
+    0x52a3,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842d,  0x8c6f,  0x8c6f,  0x94b1,  0x94b1,  0x9cf1,  0xa533,  0xa535,  0xad75,  0xb5b7,  0xb5b7,  0xbdf7,  0xbdf9,  0xc639,  0xc63b,  0xce7b,  0xd6bd,  0xd6bd,  0xdefd,  0xe73f,  0xef7f,  
+    0x52a3,  0x842d,  0x842d,  0x842d,  0x8c6f,  0x8c6f,  0x8c6f,  0x94af,  0x94b1,  0x9cf1,  0x9cf1,  0x9cf3,  0xa533,  0xa533,  0xad75,  0xad75,  0xb5b7,  0xb5b7,  0xbdf7,  0xbdf9,  0xc639,  0xc63b,  0xce7b,  0xce7b,  0xce7b,  0xd6bb,  0xd6bd,  0xd6bd,  0xdefd,  0xdefd,  0xdeff,  0xef7f,  
+    0x5ae3,  0x7beb,  0x7beb,  0x7beb,  0x7beb,  0x842d,  0x842d,  0x842d,  0x842d,  0x842d,  0x8c6f,  0x8c6f,  0x8c6f,  0x8c6f,  0x94b1,  0x94b1,  0x94b1,  0x94b1,  0x9cf3,  0x9cf3,  0xa533,  0xa535,  0xad75,  0xb5b7,  0xbdf9,  0xc63b,  0xce7b,  0xd6bd,  0xd6bd,  0xdefd,  0xe73f,  0xef7f,  
+    0x5ae3,  0x7beb,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c6f,  0x8c6f,  0x94b1,  0x94b1,  0x9cf3,  0x9cf3,  0xa535,  0xad75,  0xad77,  0xb5b7,  0xbdf9,  0xc639,  0xc63b,  0xce7b,  0xce7b,  0xd6bd,  0xd6bd,  0xdefd,  0xdeff,  0xe73f,  0xe73f,  0xef7f,  
+    0x5ae3,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c6f,  0x8c6f,  0x94b1,  0x94b1,  0x94b1,  0x9cf3,  0xa533,  0xa535,  0xad75,  0xb5b7,  0xbdf7,  0xbdf9,  0xc63b,  0xce7b,  0xce7b,  0xd6bb,  0xd6bd,  0xdefd,  0xdefd,  0xe73f,  0xe73f,  0xe73f,  0xef7f,  0xef7f,  
+    0x5ae5,  0x842f,  0x8c6f,  0x8c6f,  0x8c6f,  0x8c71,  0x94b1,  0x94b1,  0x94b1,  0x9cf3,  0x9cf3,  0x9cf3,  0xa533,  0xa535,  0xa535,  0xad75,  0xad77,  0xb5b7,  0xbdf9,  0xc639,  0xc63b,  0xce7b,  0xce7b,  0xd6bd,  0xdefd,  0xdefd,  0xe73f,  0xe73f,  0xe73f,  0xef7f,  0xef7f,  0xef7f,  
+};
+
+static unsigned short motos_eye_txt[] = {
+    0x2115,  0x2917,  0x2957,  0x2957,  0x2957,  0x2957,  0x3159,  0x3199,  0x3199,  0x3199,  0x3199,  0x399b,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x5ae3,  0x5ae3,  0x6323,  0x6325,  0x5ae5,  0x6325,  0x6b27,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  0xa537,  0xad77,  0xb5b9,  0xb5bb,  0xbdfd,  0xc63d,  
+    0x2115,  0x2915,  0x2957,  0x2957,  0x2957,  0x2957,  0x3157,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a5f,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x5ae3,  0x5ae3,  0x6323,  0x6325,  0x5ae5,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x8c2f,  0x8c6f,  0x9471,  0x94b3,  0x9cf3,  0x9cf5,  0xa537,  0xad77,  0xad79,  0xb5bb,  0xbdfd,  0xc63d,  
+    0x2115,  0x2915,  0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x41dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x4a1f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x5ae3,  0x5ae3,  0x6323,  0x6325,  0x5ae5,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b69,  0x7369,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7bed,  0x83ed,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x9cf3,  0x9cf5,  0xa535,  0xad77,  0xad79,  0xb5bb,  0xbdfb,  0xbdfd,  
+    0x2115,  0x2915,  0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x399b,  0x39db,  0x39db,  0x39db,  0x39db,  0x41dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x4a1f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x5ae3,  0x5ae3,  0x6323,  0x6325,  0x5ae5,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf5,  0xa535,  0xa537,  0xad79,  0xb5b9,  0xbdfb,  0xbdfd,  
+    0x2115,  0x2115,  0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x3159,  0x3199,  0x3199,  0x3199,  0x3199,  0x399b,  0x39db,  0x39db,  0x39db,  0x39db,  0x41dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a61,  0x4a5f,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x5ae3,  0x5ae3,  0x6323,  0x6325,  0x5ae5,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0xa535,  0xa537,  0xad79,  0xb5b9,  0xb5bb,  0xbdfd,  
+    0x2115,  0x2115,  0x2917,  0x2957,  0x2957,  0x2957,  0x2957,  0x3157,  0x3199,  0x3199,  0x3199,  0x3199,  0x399b,  0x39db,  0x39db,  0x39db,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x5ae3,  0x5ae3,  0x6323,  0x6325,  0x5ae5,  0x6325,  0x6327,  0x6b27,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x7bab,  0x7beb,  0x7bed,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  0xa537,  0xad77,  0xb579,  0xb5bb,  0xbdfd,  
+    0x2115,  0x2115,  0x2915,  0x2957,  0x2957,  0x2957,  0x2957,  0x3157,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x5ae3,  0x5ae3,  0x6323,  0x6325,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b69,  0x7369,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b3,  0x9cf3,  0x9cf5,  0xa537,  0xad77,  0xad79,  0xb5bb,  0xbdfd,  
+    0x2115,  0x2115,  0x2915,  0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x41dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x4a1f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x5ae3,  0x5ae3,  0x6323,  0x6325,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x83ed,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x9cf3,  0x9cf5,  0xa535,  0xad77,  0xad79,  0xb5bb,  0xbdfb,  
+    0x2115,  0x2115,  0x2115,  0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x399b,  0x39db,  0x39db,  0x39db,  0x39db,  0x41dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x4a1f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x5ae3,  0x5ae3,  0x6323,  0x6325,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf5,  0xa535,  0xa537,  0xad79,  0xb5b9,  0xb5bb,  
+    0x2115,  0x2115,  0x2115,  0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x3159,  0x3199,  0x3199,  0x3199,  0x3199,  0x399b,  0x39db,  0x39db,  0x39db,  0x39db,  0x41dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x5ae3,  0x5ae3,  0x6323,  0x6325,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6b27,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0xa535,  0xa537,  0xad79,  0xb5b9,  0xb5bb,  
+    0x2115,  0x2115,  0x2115,  0x2915,  0x2957,  0x2957,  0x2957,  0x2957,  0x3157,  0x3199,  0x3199,  0x3199,  0x3199,  0x3999,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x421d,  0x421d,  0x421d,  0x421d,  0x421f,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a5f,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x5ae3,  0x5ae3,  0x6323,  0x6325,  0x5ae5,  0x6325,  0x6325,  0x6327,  0x6b27,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x7bab,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf3,  0x9cf5,  0xa537,  0xad77,  0xad79,  0xb5bb,  
+    0x2115,  0x2115,  0x2115,  0x2915,  0x2957,  0x2957,  0x2957,  0x2957,  0x3157,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x421d,  0x421d,  0x421d,  0x421d,  0x421d,  0x4a1f,  0x4a5f,  0x4a5f,  0x4a5f,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x5ae3,  0x5ae3,  0x6323,  0x6325,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b69,  0x7369,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7bed,  0x842d,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b3,  0x9cf3,  0x9cf5,  0xa537,  0xad77,  0xad79,  0xb5bb,  
+    0x2115,  0x2115,  0x2115,  0x2915,  0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x39db,  0x39db,  0x39db,  0x39db,  0x39db,  0x41dd,  0x421d,  0x421d,  0x421d,  0x421d,  0x4a1f,  0x4a5f,  0x4a5f,  0x4a5f,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x5ae3,  0x5ae3,  0x6323,  0x6325,  0x5ae5,  0x6325,  0x6325,  0x6325,  0x6327,  0x6b67,  0x6b67,  0x6b67,  0x6b69,  0x73a9,  0x73a9,  0x73ab,  0x7beb,  0x7beb,  0x7bed,  0x842d,  0x842f,  0x8c6f,  0x8c71,  0x94b1,  0x9cb3,  0x9cf5,  0xa535,  0xa537,  0xad79,  0xb5bb,  
+    0x2115,  0x2115,  0x2115,  0x2115,  0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x3199,  0x5ae3,  0x5ae3,  0x5ae5,  0x5ae5,  0x5ae3,  0x5ae3,  0x5ae3,  0x52a3,  0x52a1,  0x52a1,  0x52a1,  0x52a1,  0x4a61,  0x4a5f,  0x4a5f,  0x4a5f,  0x4a1f,  0x421d,  0x421d,  0x421d,  0x421d,  0x41dd,  0x39db,  0x39db,  0x39db,  0x39db,  0x3199,  0x3199,  0x3199,  0x3199,  0x3199,  0x2957,  0x2957,  0x2957,  0x2957,  0x2915,  0x2115,  0x2115,  0x2115,  0x2115,  0x18d3,  0x18d3,  0x18d3,  0x18d3,  0x18d3,  0x8c6f,  0x8c71,  0x94b1,  0x94b3,  0x9cf5,  0xa535,  0xa537,  0xad79,  0xb5b9,  
+    0x2115,  0x2115,  0x2115,  0x2115,  0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x3199,  0x41dd,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x18d3,  0x8c6f,  0x8c71,  0x94b3,  0x94b3,  0x9cf5,  0xa535,  0xa537,  0xad79,  0xb5b9,  
+    0x2115,  0x2115,  0x2115,  0x2115,  0x2915,  0x2957,  0x2957,  0x2957,  0x2957,  0x41dd,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x41dd,  0x8c71,  0x94b3,  0x9cb3,  0x9cf3,  0xa535,  0xa537,  0xad79,  0xad79,  
+    0x2115,  0x2115,  0x2115,  0x2115,  0x2915,  0x2957,  0x2957,  0x2957,  0x2957,  0x18d3,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x18d3,  0x8c71,  0x94b3,  0x9cf3,  0x9cf5,  0xa535,  0xa537,  0xad77,  0xad79,  
+    0x2115,  0x2115,  0x2115,  0x2115,  0x2915,  0x2917,  0x2957,  0x2957,  0x2957,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x39db,  0x94b3,  0x9cf3,  0x9cf5,  0xa535,  0xa537,  0xad79,  0xad79,  
+    0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2917,  0x2957,  0x41dd,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x318d,  0x6b5b,  0xffff,  0xffff,  0x6b5b,  0x318d,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x318d,  0x6b5b,  0xffff,  0xffff,  0x6b5b,  0x318d,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x18d3,  0x94b3,  0x9cf3,  0x9cf5,  0xa535,  0xa537,  0xad77,  0xad79,  
+    0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2957,  0x18d3,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x6b5b,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x6b5b,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x6b5b,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x6b5b,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x94b3,  0x9cf5,  0x9cf5,  0xa535,  0xa537,  0xad77,  0xad77,  
+    0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x41dd,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x318d,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x318d,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x318d,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x318d,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x39db,  0x9cf5,  0x9cf5,  0xa535,  0xa537,  0xad77,  0xad77,  
+    0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x41dd,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x6b5b,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x6b5b,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x6b5b,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x6b5b,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x39db,  0x9cf5,  0x9cf5,  0xa535,  0x9cf5,  0xa537,  0xad77,  
+    0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x18d3,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x18d3,  0x9cf5,  0x9cf5,  0xa535,  0xa537,  0xa537,  0xa537,  
+    0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x41dd,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x39db,  0x9cf5,  0xa535,  0xa535,  0xa537,  0xa537,  
+    0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x41dd,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x6b5b,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x6b5b,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x6b5b,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x6b5b,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x39db,  0x9cf5,  0xa535,  0xa535,  0xa537,  0xa537,  
+    0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x18d3,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x318d,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x318d,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x318d,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x318d,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x18d3,  0x9cf5,  0x9cf5,  0xa535,  0xa537,  0xa537,  
+    0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x41dd,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x6b5b,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x6b5b,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x6b5b,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x6b5b,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x39db,  0xa535,  0xa535,  0xa537,  0xa535,  
+    0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x41dd,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x318d,  0x6b5b,  0xffff,  0xffff,  0x6b5b,  0x318d,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x318d,  0x6b5b,  0xffff,  0xffff,  0x6b5b,  0x318d,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x39db,  0xa535,  0xa535,  0xa537,  0xa535,  
+    0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x18d3,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x39db,  0xa535,  0xa535,  0xa537,  0xa535,  
+    0x2115,  0x2115,  0x2115,  0x2115,  0x41dd,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x18d3,  0xa535,  0xa535,  0xa537,  0x9cf5,  
+    0x2115,  0x2115,  0x2115,  0x2115,  0x18d3,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x39db,  0xa535,  0xa537,  0x9cf5,  
+    0x2115,  0x2115,  0x2115,  0x18d3,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x39db,  0x9cf5,  0x9cf5,  0x9cf5,  
+};
+
+
+static unsigned short motos_parts_txt[] = {
+    0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0xf4c7,  0xfd07,  0xfd47,  0xfd87,  0xfdc9,  0xfdc9,  0xfdc7,  0xfdc7,  0xfd87,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0xf487,  0xfd07,  0xfd87,  0xfdc9,  0xfe09,  0xfe09,  0xfe49,  0xfe49,  0xfe49,  0xfe49,  0xfe49,  0xfe49,  0xfdc9,  0xfd87,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0xe445,  0xf4c7,  0xfd47,  0xfd87,  0xfdc9,  0xfe09,  0xfe49,  0xfe89,  0xfe89,  0xfe89,  0xfec9,  0xfec9,  0xfe89,  0xfe89,  0xfe89,  0xfe49,  0xfdc7,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0xd405,  0xf487,  0xfd47,  0xfd87,  0xfdc9,  0xfe09,  0xfe49,  0xfe89,  0xfe89,  0xfec9,  0xfec9,  0xfec9,  0xfec9,  0xfec9,  0xfec9,  0xfec9,  0xfe89,  0xfe49,  0xfe09,  0xfd47,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0xcbc5,  0xec87,  0xfd07,  0xfd47,  0xfdc7,  0xfe09,  0xfe49,  0xfe89,  0xfe89,  0xfec9,  0xfec9,  0xff0b,  0xff0b,  0xff0b,  0xff0b,  0xff09,  0xfec9,  0xfec9,  0xfe89,  0xfe49,  0xfdc9,  0xfd07,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x5182,  0x5182,  0xb345,  0xe405,  0xfcc7,  0xfd07,  0xfd87,  0xfdc9,  0xfe09,  0xfe49,  0xfe89,  0xfec9,  0xff0b,  0xff4d,  0xff8d,  0xff8f,  0xff8d,  0xff4d,  0xff0b,  0xff09,  0xfec9,  0xfec9,  0xfe89,  0xfe49,  0xfdc7,  0xfd07,  0x5182,  0x5182,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x5182,  0x9ac5,  0xcbc5,  0xec47,  0xfcc7,  0xfd47,  0xfd87,  0xfdc9,  0xfe09,  0xfe49,  0xfe89,  0xfecb,  0xff4d,  0xffd1,  0xffd5,  0xffd9,  0xffd7,  0xffd3,  0xff8f,  0xff4b,  0xfec9,  0xfec9,  0xfe89,  0xfe49,  0xfe09,  0xfd87,  0x5182,  0x5182,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x5182,  0xab05,  0xd3c5,  0xec87,  0xfcc7,  0xfd47,  0xfd87,  0xfdc9,  0xfe09,  0xfe49,  0xfe89,  0xff0b,  0xff91,  0xffd7,  0xffe1,  0xffe5,  0xffe3,  0xffdd,  0xffd5,  0xff8f,  0xff0b,  0xfec9,  0xfe89,  0xfe49,  0xfe09,  0xfdc7,  0xfd07,  0x5182,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x7a43,  0xb345,  0xd405,  0xec87,  0xfcc7,  0xfd47,  0xfd87,  0xfdc9,  0xfe09,  0xfe49,  0xfe89,  0xff0d,  0xff93,  0xffdb,  0xffe7,  0xffed,  0xffed,  0xffe5,  0xffdb,  0xffd1,  0xff0b,  0xfec9,  0xfe89,  0xfe49,  0xfe09,  0xfdc7,  0xfd47,  0xec87,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x8a83,  0xb345,  0xd405,  0xec47,  0xfcc7,  0xfd07,  0xfd87,  0xfdc7,  0xfe09,  0xfe09,  0xfe49,  0xfecb,  0xff91,  0xffdb,  0xffe5,  0xffeb,  0xffed,  0xffe7,  0xffdb,  0xffd1,  0xff0d,  0xfec9,  0xfe89,  0xfe49,  0xfe09,  0xfdc7,  0xfd47,  0xf487,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x9283,  0xb345,  0xd405,  0xec47,  0xfcc7,  0xfd07,  0xfd47,  0xfd87,  0xfdc9,  0xfe09,  0xfe49,  0xfe8b,  0xff0f,  0xffd5,  0xffdd,  0xffe3,  0xffe3,  0xffdf,  0xffd7,  0xff8f,  0xfecb,  0xfe89,  0xfe49,  0xfe49,  0xfe09,  0xfdc7,  0xfd47,  0xfcc7,  0x5182,  0x5182,  
+    0x5182,  0x59c3,  0x92c3,  0xb345,  0xcbc5,  0xe445,  0xf487,  0xfd07,  0xfd47,  0xfd87,  0xfd87,  0xfdc9,  0xfe09,  0xfe49,  0xfe8b,  0xff0f,  0xff93,  0xffd5,  0xffd7,  0xffd5,  0xff91,  0xff0d,  0xfe8b,  0xfe89,  0xfe49,  0xfe09,  0xfdc9,  0xfd87,  0xfd47,  0xfcc7,  0xd3c5,  0x5182,  
+    0x5182,  0x61c3,  0x8a83,  0xab45,  0xc3c5,  0xdc05,  0xf487,  0xfcc7,  0xfd07,  0xfd47,  0xfd87,  0xfdc7,  0xfdc9,  0xfe09,  0xfe49,  0xfe8b,  0xfecd,  0xff0d,  0xff0f,  0xff0d,  0xfecb,  0xfe8b,  0xfe49,  0xfe49,  0xfe09,  0xfe09,  0xfdc7,  0xfd87,  0xfd07,  0xfcc7,  0xcbc5,  0x5182,  
+    0x5182,  0x5983,  0x8243,  0xa305,  0xbb85,  0xd405,  0xe445,  0xf487,  0xfcc7,  0xfd07,  0xfd47,  0xfd87,  0xfd87,  0xfdc9,  0xfe09,  0xfe09,  0xfe49,  0xfe49,  0xfe4b,  0xfe49,  0xfe49,  0xfe49,  0xfe09,  0xfe09,  0xfe09,  0xfdc9,  0xfd87,  0xfd47,  0xfd07,  0xf487,  0xc385,  0x5182,  
+    0x5182,  0x5983,  0x7a43,  0x9ac5,  0xb345,  0xcbc5,  0xdc05,  0xec47,  0xfc87,  0xfcc7,  0xfd07,  0xfd47,  0xfd87,  0xfd87,  0xfdc7,  0xfdc9,  0xfe09,  0xfe09,  0xfe09,  0xfe09,  0xfe09,  0xfe09,  0xfdc9,  0xfdc9,  0xfdc7,  0xfd87,  0xfd47,  0xfd07,  0xfcc7,  0xec47,  0xbb85,  0x5182,  
+    0x5182,  0x5183,  0x6a03,  0x8a83,  0xa305,  0xbb85,  0xcbc5,  0xe405,  0xec87,  0xfc87,  0xfcc7,  0xfd07,  0xfd47,  0xfd47,  0xfd87,  0xfd87,  0xfd87,  0xfdc7,  0xfdc9,  0xfdc9,  0xfdc9,  0xfdc7,  0xfdc7,  0xfd87,  0xfd87,  0xfd47,  0xfd07,  0xfcc7,  0xf487,  0xdc05,  0xb345,  0x5182,  
+    0x5182,  0x5183,  0x61c3,  0x7a43,  0x92c3,  0xab45,  0xc385,  0xd3c5,  0xe405,  0xec47,  0xfc87,  0xfcc7,  0xfd07,  0xfd07,  0xfd47,  0xfd47,  0xfd47,  0xfd87,  0xfd87,  0xfd87,  0xfd87,  0xfd87,  0xfd47,  0xfd47,  0xfd47,  0xfd07,  0xfcc7,  0xf487,  0xe445,  0xcbc5,  0x9b05,  0x5182,  
+    0x5182,  0x5183,  0x61c3,  0x7203,  0x8283,  0x9b05,  0xb345,  0xc385,  0xd3c5,  0xdc05,  0xec47,  0xf487,  0xfcc7,  0xfcc7,  0xfd07,  0xfd07,  0xfd07,  0xfd47,  0xfd47,  0xfd47,  0xfd47,  0xfd47,  0xfd07,  0xfd07,  0xfd07,  0xfcc7,  0xf487,  0xe445,  0xd405,  0xbb85,  0x8a83,  0x5182,  
+    0x5182,  0x5183,  0x59c3,  0x69c3,  0x7a43,  0x8a83,  0xa305,  0xb345,  0xc385,  0xcbc5,  0xdc05,  0xe445,  0xec47,  0xf487,  0xfc87,  0xfcc7,  0xfcc7,  0xfcc7,  0xfcc7,  0xfd07,  0xfd07,  0xfcc7,  0xfcc7,  0xfcc7,  0xfc87,  0xec87,  0xe445,  0xd405,  0xc385,  0xa305,  0x7a43,  0x5182,  
+    0x5182,  0x4943,  0x5983,  0x61c3,  0x6a03,  0x7a43,  0x8a83,  0xa305,  0xb345,  0xbb85,  0xcbc5,  0xd3c5,  0xdc05,  0xe445,  0xec47,  0xec87,  0xf487,  0xf487,  0xf487,  0xf487,  0xfc87,  0xf487,  0xf487,  0xec87,  0xe445,  0xdc05,  0xd3c5,  0xc385,  0xab45,  0x8a83,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x5183,  0x61c3,  0x6a03,  0x7203,  0x7a43,  0x8a83,  0x9ac5,  0xab05,  0xb345,  0xc385,  0xcbc5,  0xd3c5,  0xd405,  0xdc05,  0xe445,  0xe445,  0xe445,  0xe445,  0xe445,  0xe445,  0xe405,  0xdc05,  0xd405,  0xcbc5,  0xbb85,  0xab05,  0x92c3,  0x6a03,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x4983,  0x5983,  0x61c3,  0x6a03,  0x7203,  0x7a43,  0x8a83,  0x92c3,  0xa305,  0xab45,  0xb345,  0xbb85,  0xc385,  0xcbc5,  0xcbc5,  0xd3c5,  0xd3c5,  0xd3c5,  0xd3c5,  0xcbc5,  0xcbc5,  0xc385,  0xbb85,  0xb345,  0xa305,  0x92c3,  0x7203,  0x5183,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x5182,  0x5183,  0x61c3,  0x69c3,  0x6a03,  0x7203,  0x7a43,  0x8243,  0x8a83,  0x9ac3,  0xa305,  0xab05,  0xb345,  0xb345,  0xbb85,  0xbb85,  0xbb85,  0xbb85,  0xbb85,  0xbb85,  0xb345,  0xab45,  0xa305,  0x9ac3,  0x8a83,  0x7203,  0x5183,  0x5182,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x5182,  0x4983,  0x5983,  0x61c3,  0x6a03,  0x7203,  0x7203,  0x7a43,  0x7a43,  0x8243,  0x8a83,  0x92c3,  0x9ac3,  0x9b05,  0xa305,  0xa305,  0xa305,  0xa305,  0xa305,  0xa305,  0x9ac5,  0x92c3,  0x8a83,  0x7a43,  0x6a03,  0x5983,  0x5182,  0x5182,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x5182,  0x5182,  0x5183,  0x5983,  0x61c3,  0x6a03,  0x6a03,  0x7203,  0x7203,  0x7a43,  0x7a43,  0x7a43,  0x8243,  0x8283,  0x8a83,  0x8a83,  0x8a83,  0x8a83,  0x8a83,  0x8283,  0x8243,  0x7a43,  0x6a03,  0x61c3,  0x5983,  0x4943,  0x5182,  0x5182,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5183,  0x5983,  0x61c3,  0x69c3,  0x6a03,  0x7203,  0x7203,  0x7203,  0x7243,  0x7a43,  0x7a43,  0x7a43,  0x7a43,  0x7a43,  0x7243,  0x7203,  0x7203,  0x6a03,  0x69c3,  0x61c3,  0x5983,  0x5183,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5183,  0x5983,  0x61c3,  0x61c3,  0x6a03,  0x6a03,  0x6a03,  0x7203,  0x7203,  0x7203,  0x7203,  0x7203,  0x7203,  0x6a03,  0x6a03,  0x6a03,  0x61c3,  0x61c3,  0x5183,  0x4943,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x4943,  0x5183,  0x5983,  0x61c3,  0x61c3,  0x61c3,  0x6a03,  0x6a03,  0x6a03,  0x6a03,  0x6a03,  0x6a03,  0x61c3,  0x61c3,  0x61c3,  0x5983,  0x5183,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x4983,  0x5183,  0x5983,  0x59c3,  0x61c3,  0x61c3,  0x61c3,  0x61c3,  0x61c3,  0x61c3,  0x59c3,  0x5983,  0x5183,  0x4943,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5183,  0x5183,  0x5183,  0x5183,  0x5183,  0x5183,  0x5183,  0x4943,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  
+    0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  0x5182,  
+};
+
+static unsigned short motos_body1_txt[] = {
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x20d3,  0x2113,  0x2113,  0x2113,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x18cf,  0x18d1,  0x18d1,  0x18d3,  0x20d3,  0x2113,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x18cf,  0x18d1,  0x18d1,  0x18d3,  0x20d3,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x20d3,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2117,  0x2117,  0x2117,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x108d,  0x18cf,  0x18d1,  0x18d1,  0x18d3,  0x2113,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2117,  0x2117,  0x2117,  0x2117,  0x2117,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x108d,  0x18cf,  0x18d1,  0x18d1,  0x18d3,  0x2113,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2117,  0x2117,  0x2117,  0x2117,  0x2117,  0x2117,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x108d,  0x18cf,  0x18d1,  0x18d1,  0x18d3,  0x20d3,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2117,  0x2117,  0x2117,  0x2117,  0x2117,  0x2917,  0x2917,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x108b,  0x108d,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x20d3,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2117,  0x2117,  0x2117,  0x2117,  0x2917,  0x2917,  0x2957,  0x2957,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x108b,  0x108d,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d3,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2117,  0x2117,  0x2117,  0x2117,  0x2917,  0x2957,  0x2957,  0x2959,  0x2959,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x108b,  0x108d,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x20d3,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2117,  0x2117,  0x2117,  0x2917,  0x2957,  0x2957,  0x2959,  0x2959,  0x2959,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d3,  0x2113,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2117,  0x2117,  0x2117,  0x2917,  0x2957,  0x2957,  0x2959,  0x2959,  0x3199,  0x319b,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x108b,  0x108d,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2117,  0x2117,  0x2117,  0x2957,  0x2957,  0x2959,  0x3159,  0x319b,  0x39db,  0x39dd,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x108b,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2117,  0x2117,  0x2917,  0x2957,  0x2959,  0x3199,  0x319b,  0x39dd,  0x421f,  0x4a61,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0849,  0x108b,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x20d3,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2117,  0x2117,  0x2957,  0x2959,  0x3159,  0x319b,  0x39dd,  0x4a5f,  0x52a3,  0x6325,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x1089,  0x108b,  0x108d,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x20d3,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2117,  0x2917,  0x2957,  0x2959,  0x319b,  0x39dd,  0x421f,  0x52a3,  0x6327,  0x73ab,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0849,  0x108b,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d3,  0x20d3,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2117,  0x2917,  0x2957,  0x2959,  0x319b,  0x41dd,  0x4a61,  0x5ae5,  0x73a9,  0x842f,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0849,  0x108b,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2117,  0x2917,  0x2957,  0x3199,  0x399b,  0x421d,  0x52a1,  0x6327,  0x7bed,  0x94b3,  
+        0x0846,  0x0846,  0x0846,  0x0847,  0x1089,  0x108b,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x2113,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2117,  0x2917,  0x2957,  0x3199,  0x39db,  0x421f,  0x52a3,  0x6327,  0x7bed,  0x94b3,  
+        0x0846,  0x0846,  0x0846,  0x0849,  0x108b,  0x108b,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x20d3,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2117,  0x2957,  0x2959,  0x319b,  0x421d,  0x52a1,  0x6327,  0x7bed,  0x94b1,  
+        0x0846,  0x0846,  0x0847,  0x0849,  0x108b,  0x108b,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x20d3,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2117,  0x2957,  0x2959,  0x319b,  0x39dd,  0x4a61,  0x5ae5,  0x73a9,  0x842f,  
+        0x0846,  0x0846,  0x0847,  0x0849,  0x108b,  0x108b,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x18d3,  0x2113,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2957,  0x2957,  0x3199,  0x39db,  0x421f,  0x52a1,  0x6327,  0x73ab,  
+        0x0846,  0x0846,  0x0847,  0x0849,  0x108b,  0x108b,  0x108d,  0x108d,  0x188f,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x20d3,  0x2113,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2117,  0x2957,  0x2959,  0x3199,  0x39dd,  0x4a1f,  0x52a3,  0x6327,  
+        0x0846,  0x0845,  0x0847,  0x0849,  0x108b,  0x108b,  0x108d,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x18d3,  0x2113,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2917,  0x2957,  0x2959,  0x3199,  0x39dd,  0x421f,  0x52a1,  
+        0x0846,  0x0845,  0x0847,  0x0849,  0x108b,  0x108b,  0x108d,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x20d3,  0x2113,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2957,  0x2957,  0x2959,  0x3199,  0x39db,  0x421d,  
+        0x0846,  0x0845,  0x0847,  0x0849,  0x1089,  0x108b,  0x108b,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x18d3,  0x20d3,  0x2113,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2917,  0x2957,  0x2959,  0x3199,  0x319b,  
+        0x0846,  0x0845,  0x0847,  0x0849,  0x1089,  0x108b,  0x108b,  0x108d,  0x108d,  0x188f,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x18d3,  0x2113,  0x2113,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2117,  0x2957,  0x2957,  0x2959,  
+        0x0846,  0x0845,  0x0847,  0x0849,  0x1089,  0x108b,  0x108b,  0x108d,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x20d3,  0x2113,  0x2113,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2917,  0x2957,  
+        0x0846,  0x0845,  0x0847,  0x0849,  0x0849,  0x108b,  0x108b,  0x108b,  0x108d,  0x108d,  0x188f,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x20d3,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  
+        0x0846,  0x0845,  0x0847,  0x0847,  0x0849,  0x1089,  0x108b,  0x108b,  0x108d,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x18d3,  0x20d3,  0x2113,  0x2113,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  
+        0x0847,  0x0845,  0x0847,  0x0847,  0x0849,  0x1089,  0x108b,  0x108b,  0x108b,  0x108d,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x18d3,  0x20d3,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2115,  0x2115,  0x2115,  
+        0x0847,  0x0845,  0x0847,  0x0847,  0x0849,  0x0849,  0x1089,  0x108b,  0x108b,  0x108d,  0x108d,  0x108d,  0x188f,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x18d3,  0x20d3,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  
+        0x0846,  0x0845,  0x0845,  0x0847,  0x0847,  0x0849,  0x1089,  0x108b,  0x108b,  0x108b,  0x108d,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x18d3,  0x20d3,  0x20d3,  0x2113,  0x2113,  0x2113,  0x2113,  
+        0x0846,  0x0845,  0x0845,  0x0847,  0x0847,  0x0849,  0x0849,  0x1089,  0x108b,  0x108b,  0x108b,  0x108d,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x18d3,  0x18d3,  0x20d3,  0x2113,  0x2113,  
+        0x0846,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0849,  0x1049,  0x108b,  0x108b,  0x108b,  0x108d,  0x108d,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x18d3,  0x18d3,  0x18d3,  
+        0x0846,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0849,  0x0849,  0x1089,  0x108b,  0x108b,  0x108b,  0x108d,  0x108d,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  
+        0x0846,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0849,  0x0849,  0x1089,  0x108b,  0x108b,  0x108b,  0x108d,  0x108d,  0x108d,  0x108d,  0x188f,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  
+        0x0846,  0x0847,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0849,  0x0849,  0x1089,  0x108b,  0x108b,  0x108b,  0x108d,  0x108d,  0x108d,  0x108d,  0x188d,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  
+        0x0846,  0x0847,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0849,  0x1089,  0x108b,  0x108b,  0x108b,  0x108b,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  
+        0x0846,  0x0846,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0849,  0x0849,  0x1089,  0x108b,  0x108b,  0x108b,  0x108b,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18d1,  
+        0x0846,  0x0846,  0x0847,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0849,  0x0849,  0x1089,  0x1089,  0x108b,  0x108b,  0x108b,  0x108b,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  
+        0x0846,  0x0846,  0x0847,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0849,  0x0849,  0x1049,  0x1089,  0x108b,  0x108b,  0x108b,  0x108b,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x188f,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  
+        0x0846,  0x0846,  0x0846,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0849,  0x0849,  0x0849,  0x1089,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x188f,  0x18cf,  0x18cf,  
+        0x0846,  0x0846,  0x0846,  0x0847,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0849,  0x0849,  0x0849,  0x1089,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0849,  0x0849,  0x1049,  0x1089,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0847,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0849,  0x0849,  0x0849,  0x1049,  0x1089,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108d,  0x108d,  0x108d,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0849,  0x0849,  0x0849,  0x1049,  0x1089,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0847,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0849,  0x0849,  0x0849,  0x0849,  0x1049,  0x1089,  0x1089,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0847,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0849,  0x0849,  0x0849,  0x0849,  0x0849,  0x1049,  0x1089,  0x1089,  0x1089,  0x108b,  0x108b,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0845,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0849,  0x0849,  0x0849,  0x0849,  0x0849,  0x0849,  0x0849,  0x0849,  0x1049,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0849,  0x0849,  0x0849,  0x0849,  0x0849,  0x0849,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0847,  0x0847,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0847,  0x0845,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0845,  0x0845,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0845,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0847,  0x0845,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0847,  0x0845,  0x0845,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0847,  0x0845,  0x0845,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0847,  0x0845,  0x0845,  0x0845,  0x0845,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0847,  0x0845,  0x0845,  0x0845,  0x0845,  0x0845,  0x0845,  0x0845,  0x0845,  0x0845,  0x0845,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0847,  0x0847,  0x0845,  0x0847,  0x0845,  0x0845,  0x0845,  0x0847,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+};
+
+static unsigned short motos_body2_txt[] = {
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x20d3,  0x18d3,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2113,  0x2113,  0x20d3,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2113,  0x18d3,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x2117,  0x2117,  0x2117,  0x2117,  0x2117,  0x2117,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2113,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x2117,  0x2117,  0x2117,  0x2117,  0x2117,  0x2117,  0x2117,  0x2117,  0x2117,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2113,  0x18d3,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x2117,  0x2917,  0x2917,  0x2917,  0x2917,  0x2917,  0x2917,  0x2917,  0x2117,  0x2117,  0x2117,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2113,  0x18d1,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x2917,  0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x2917,  0x2917,  0x2117,  0x2117,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2113,  0x18d1,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x2957,  0x2957,  0x2957,  0x2959,  0x2959,  0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x2917,  0x2917,  0x2117,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2113,  0x18d1,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x2959,  0x2959,  0x2959,  0x2959,  0x2959,  0x2959,  0x2959,  0x2959,  0x2959,  0x2957,  0x2957,  0x2917,  0x2917,  0x2117,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2113,  0x18d3,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x2959,  0x2959,  0x2959,  0x2959,  0x2959,  0x2959,  0x2959,  0x2959,  0x2959,  0x2959,  0x2957,  0x2957,  0x2917,  0x2917,  0x2117,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2113,  0x18d1,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x319b,  0x319b,  0x319b,  0x319b,  0x319b,  0x319b,  0x3159,  0x2959,  0x2959,  0x2959,  0x2959,  0x2957,  0x2957,  0x2917,  0x2117,  0x2117,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2113,  0x18d1,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x39dd,  0x41dd,  0x421f,  0x421f,  0x41dd,  0x39dd,  0x399b,  0x319b,  0x3159,  0x2959,  0x2959,  0x2959,  0x2957,  0x2957,  0x2917,  0x2117,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2113,  0x18d3,  0x18d1,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x4a61,  0x52a3,  0x52a3,  0x52a3,  0x52a3,  0x4a61,  0x421f,  0x39dd,  0x399b,  0x319b,  0x2959,  0x2959,  0x2959,  0x2957,  0x2917,  0x2117,  0x2117,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2113,  0x18d1,  0x18cf,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x6325,  0x6b69,  0x6b69,  0x73ab,  0x6b69,  0x6327,  0x5ae5,  0x4a61,  0x421f,  0x39dd,  0x319b,  0x2959,  0x2959,  0x2957,  0x2957,  0x2917,  0x2117,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2113,  0x20d3,  0x18d1,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x73ab,  0x842f,  0x8c71,  0x8c71,  0x8c71,  0x842f,  0x73ab,  0x6327,  0x52a3,  0x421f,  0x39dd,  0x319b,  0x2959,  0x2959,  0x2957,  0x2917,  0x2117,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2113,  0x2113,  0x18d1,  0x18cf,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x842f,  0x94b3,  0xa537,  0xa537,  0xa537,  0x9cf5,  0x8c71,  0x7bab,  0x6327,  0x52a3,  0x421f,  0x319b,  0x2959,  0x2959,  0x2957,  0x2917,  0x2117,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2115,  0x2113,  0x18d3,  0x18d1,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x94b3,  0xa537,  0xb5bb,  0xbdfd,  0xbdfb,  0xad79,  0x9cf5,  0x8c2f,  0x73ab,  0x5ae5,  0x4a61,  0x39dd,  0x319b,  0x2959,  0x2957,  0x2917,  0x2117,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2115,  0x2113,  0x18d3,  0x18d1,  0x18cf,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x94b3,  0xad79,  0xbdfd,  0xc63f,  0xc63f,  0xbdfd,  0xad77,  0x94b3,  0x7bed,  0x6327,  0x5261,  0x421d,  0x319b,  0x2959,  0x2957,  0x2957,  0x2117,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2115,  0x2113,  0x20d3,  0x18d1,  0x18d1,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x94b1,  0xa537,  0xb5bb,  0xc5fd,  0xc63d,  0xbdfb,  0xad79,  0x94b3,  0x7bed,  0x6327,  0x52a3,  0x421f,  0x319b,  0x2959,  0x2957,  0x2917,  0x2117,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2115,  0x2113,  0x2113,  0x18d1,  0x18d1,  0x18cf,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x842f,  0x9cf3,  0xad77,  0xb5bb,  0xb5bb,  0xad79,  0xa4f5,  0x8c71,  0x73ab,  0x6327,  0x4a61,  0x421d,  0x319b,  0x2959,  0x2957,  0x2917,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2113,  0x2113,  0x18d3,  0x18d1,  0x18cf,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x73ab,  0x842f,  0x94b3,  0x9cf5,  0x9cf5,  0x9cf3,  0x8c71,  0x83ed,  0x6b69,  0x5ae5,  0x4a61,  0x39dd,  0x319b,  0x2959,  0x2957,  0x2917,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2113,  0x2113,  0x18d3,  0x18d1,  0x18cf,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x6327,  0x73a9,  0x7bed,  0x842f,  0x842f,  0x842d,  0x7beb,  0x6b69,  0x62e5,  0x52a1,  0x421f,  0x39db,  0x3199,  0x2959,  0x2957,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2113,  0x20d3,  0x18d1,  0x18d1,  0x18cf,  0x108d,  0x0846,  0x0846,  0x0846,  
+        0x52a1,  0x5ae5,  0x6327,  0x6b67,  0x6b69,  0x6b67,  0x6325,  0x5ae3,  0x4a5f,  0x421f,  0x39dd,  0x319b,  0x2959,  0x2957,  0x2957,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2113,  0x2113,  0x20d3,  0x18d1,  0x18d1,  0x18cf,  0x108d,  0x0846,  0x0846,  0x0846,  
+        0x421d,  0x4a5f,  0x52a1,  0x52a1,  0x52a3,  0x52a3,  0x5261,  0x4a5f,  0x421d,  0x39db,  0x319b,  0x3199,  0x2957,  0x2957,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2113,  0x2113,  0x18d3,  0x18d1,  0x18d1,  0x18cf,  0x18cf,  0x0846,  0x0846,  0x0846,  
+        0x319b,  0x39db,  0x39dd,  0x421d,  0x421d,  0x421d,  0x41dd,  0x39dd,  0x39db,  0x3199,  0x2959,  0x2957,  0x2957,  0x2117,  0x2117,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2113,  0x2113,  0x2113,  0x18d3,  0x18d1,  0x18d1,  0x18cf,  0x18cf,  0x108d,  0x0846,  0x0846,  
+        0x2959,  0x3199,  0x3199,  0x319b,  0x319b,  0x319b,  0x3199,  0x3199,  0x3159,  0x2959,  0x2957,  0x2957,  0x2117,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2113,  0x2113,  0x20d3,  0x18d3,  0x18d1,  0x18d1,  0x18cf,  0x18cf,  0x108b,  0x0846,  0x0846,  
+        0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x2957,  0x2917,  0x2117,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2113,  0x2113,  0x2113,  0x18d3,  0x18d1,  0x18d1,  0x18d1,  0x18cf,  0x188f,  0x108b,  0x0846,  0x0846,  
+        0x2115,  0x2115,  0x2117,  0x2957,  0x2957,  0x2957,  0x2957,  0x2917,  0x2117,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2113,  0x2113,  0x2113,  0x18d3,  0x18d3,  0x18d1,  0x18d1,  0x18cf,  0x18cf,  0x108d,  0x108b,  0x0846,  0x0846,  
+        0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2113,  0x2113,  0x2113,  0x2113,  0x20d3,  0x18d3,  0x18d1,  0x18d1,  0x18d1,  0x18cf,  0x18cf,  0x108d,  0x108b,  0x0846,  0x0846,  
+        0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x20d3,  0x18d3,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18cf,  0x18cf,  0x108d,  0x108b,  0x0846,  0x0846,  
+        0x2113,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2115,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x20d3,  0x18d3,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18cf,  0x18cf,  0x188f,  0x108d,  0x108b,  0x0846,  0x0846,  
+        0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x20d3,  0x18d3,  0x18d3,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18cf,  0x18cf,  0x18cf,  0x108d,  0x108d,  0x108b,  0x0846,  0x0846,  
+        0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x20d3,  0x18d3,  0x18d3,  0x18d3,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18cf,  0x18cf,  0x18cf,  0x108d,  0x108d,  0x108b,  0x1089,  0x0846,  0x0846,  
+        0x18d3,  0x20d3,  0x20d3,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x2113,  0x20d3,  0x20d3,  0x20d3,  0x18d3,  0x18d3,  0x18d3,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18cf,  0x18cf,  0x18cf,  0x108d,  0x108d,  0x108b,  0x0849,  0x0846,  0x0846,  
+        0x18d3,  0x18d3,  0x18d3,  0x18d3,  0x18d3,  0x18d3,  0x18d3,  0x18d3,  0x18d3,  0x18d3,  0x18d3,  0x18d3,  0x18d3,  0x18d3,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x108d,  0x108d,  0x108b,  0x108b,  0x0849,  0x0846,  0x0846,  
+        0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d3,  0x18d3,  0x18d3,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x108d,  0x108d,  0x108d,  0x108b,  0x1089,  0x0847,  0x0846,  0x0846,  
+        0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x108d,  0x108d,  0x108d,  0x108b,  0x108b,  0x0849,  0x0846,  0x0846,  0x0846,  
+        0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x108d,  0x108d,  0x108d,  0x108b,  0x108b,  0x1089,  0x0847,  0x0846,  0x0846,  0x0846,  
+        0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18d1,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x108d,  0x108d,  0x108d,  0x108b,  0x108b,  0x108b,  0x0849,  0x0847,  0x0846,  0x0846,  0x0846,  
+        0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x108d,  0x108d,  0x108d,  0x108d,  0x108b,  0x108b,  0x108b,  0x1049,  0x0847,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x188d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108b,  0x108b,  0x108b,  0x1089,  0x0849,  0x0847,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x18cf,  0x188f,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108b,  0x108b,  0x108b,  0x1089,  0x0849,  0x0847,  0x0845,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x108d,  0x108d,  0x108d,  0x188d,  0x188f,  0x188f,  0x188f,  0x188f,  0x188f,  0x188d,  0x188d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108b,  0x108b,  0x108b,  0x108b,  0x1089,  0x0849,  0x0847,  0x0847,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x1089,  0x0849,  0x0847,  0x0847,  0x0845,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108d,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x1089,  0x0849,  0x0849,  0x0847,  0x0847,  0x0845,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x108b,  0x108b,  0x108b,  0x108b,  0x108d,  0x108d,  0x108d,  0x108d,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x1089,  0x1089,  0x0849,  0x0849,  0x0847,  0x0847,  0x0845,  0x0847,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x1089,  0x1049,  0x0849,  0x0849,  0x0847,  0x0847,  0x0847,  0x0845,  0x0845,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x108b,  0x1089,  0x1089,  0x1089,  0x0849,  0x0849,  0x0849,  0x0849,  0x0847,  0x0847,  0x0847,  0x0845,  0x0845,  0x0847,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x1049,  0x1089,  0x1089,  0x1089,  0x1089,  0x1089,  0x1089,  0x1089,  0x1089,  0x1089,  0x1049,  0x0849,  0x0849,  0x0849,  0x0849,  0x0849,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0845,  0x0845,  0x0845,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x0849,  0x0849,  0x0849,  0x0849,  0x0849,  0x0849,  0x0849,  0x0849,  0x0849,  0x0849,  0x0849,  0x0849,  0x0849,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0845,  0x0845,  0x0847,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x0847,  0x0847,  0x0849,  0x0849,  0x0849,  0x0849,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0845,  0x0845,  0x0845,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0845,  0x0845,  0x0845,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0845,  0x0845,  0x0847,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0845,  0x0845,  0x0845,  0x0847,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0845,  0x0845,  0x0845,  0x0845,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0845,  0x0845,  0x0845,  0x0847,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0845,  0x0845,  0x0845,  0x0845,  0x0847,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0847,  0x0845,  0x0845,  0x0845,  0x0845,  0x0845,  0x0847,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x0845,  0x0845,  0x0845,  0x0845,  0x0845,  0x0845,  0x0845,  0x0847,  0x0847,  0x0847,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x0847,  0x0845,  0x0845,  0x0845,  0x0847,  0x0847,  0x0845,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+        0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  0x0846,  
+};
+
+/* ========================================================================	
+		: motos body sprite.
+=========================================================================== */
+static Vtx vtx_motos_body[] = {
+	{{{   -209/4,    210/4,      0},     0,   {  0,     0},   {181,   32,   64,  255}}}, 
+	{{{   -209/4,   -209/4,      0},     0,   {  0,  2016},   {181,   32,   64,  255}}}, 
+	{{{      0/4,   -209/4,      0},     0,   {992,  2016},   {181,   32,   64,  255}}}, 
+	{{{      0/4,    210/4,      0},     0,   {992,     0},   {181,   32,   64,  255}}}, 
+	{{{      0/4,   -209/4,      0},     0,   {  0,  2016},   {181,   32,   64,  255}}}, 
+	{{{    210/4,    210/4,      0},     0,   {992,     0},   {181,   32,   64,  255}}}, 
+	{{{      0/4,    210/4,      0},     0,   {  0,     0},   {181,   32,   64,  255}}}, 
+	{{{    210/4,   -209/4,      0},     0,   {992,  2016},   {181,   32,   64,  255}}}, 
+};
+
+const Gfx RCP_motos_body[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineMode(G_CC_DECALRGBA, G_CC_DECALRGBA),
+	gsSPClearGeometryMode(G_LIGHTING), 
+	gsDPSetTile(G_IM_FMT_RGBA,G_IM_SIZ_16b, 0, 0, 7, 0,  0,0,0, 0,0,0),
+
+	gsSPTexture(0xffff,0xffff, 0, 0, G_ON),
+
+	gs_Tani_SetUpTileDescrip(G_IM_FMT_RGBA,G_IM_SIZ_16b, 32, 64,  0, 0, G_TX_CLAMP|G_TX_NOMIRROR, 5, G_TX_NOLOD, G_TX_CLAMP|G_TX_NOMIRROR, 6, G_TX_NOLOD),
+
+	gs_Tani_LoadTextureImage2(motos_body1_txt, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 64, 0, 7),
+	gsSPVertex(&vtx_motos_body[0],  4, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSP1Triangle( 0, 2, 3, 0),
+
+	gs_Tani_LoadTextureImage2(motos_body2_txt, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 64, 0, 7),
+	gsSPVertex(&vtx_motos_body[4],  4, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSP1Triangle( 0, 3, 1, 0),
+
+	gsSPTexture(0xffff, 0xffff, 0, 0, G_OFF),
+
+	gsDPPipeSync(),
+	gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+	gsSPSetGeometryMode(G_LIGHTING), 
+	gsSPEndDisplayList() 
+};
+
+/* ========================================================================	
+		: motos arm sprite.
+=========================================================================== */
+static Vtx vtx_motos_arm[] = {
+	{{{    -49/4,    -49/4,      0},     0,   {  0,   992},   {181,   32,   64,  255}}}, 
+	{{{     50/4,    -49/4,      0},     0,   {992,   992},   {181,   32,   64,  255}}}, 
+	{{{     50/4,     50/4,      0},     0,   {992,     0},   {181,   32,   64,  255}}}, 
+	{{{    -49/4,     50/4,      0},     0,   {  0,     0},   {181,   32,   64,  255}}}, 
+};
+
+const Gfx RCP_motos_arm[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineMode(G_CC_DECALRGBA, G_CC_DECALRGBA),
+	gsSPClearGeometryMode(G_LIGHTING), 
+	gsDPSetTile(G_IM_FMT_RGBA,G_IM_SIZ_16b, 0, 0, 7, 0,  0,0,0, 0,0,0),
+
+	gsSPTexture(0xffff,0xffff, 0, 0, G_ON),
+
+	gs_Tani_SetUpTileDescrip(G_IM_FMT_RGBA,G_IM_SIZ_16b, 32, 32,  0, 0, G_TX_CLAMP|G_TX_NOMIRROR, 5, G_TX_NOLOD, G_TX_CLAMP|G_TX_NOMIRROR, 5, G_TX_NOLOD),
+	gs_Tani_LoadTextureImage2(motos_parts_txt, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0, 7),
+	gsSPVertex(&vtx_motos_arm[0],  4, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSP1Triangle( 0, 2, 3, 0),
+
+	gsSPTexture(0xffff, 0xffff, 0, 0, G_OFF),
+
+	gsDPPipeSync(),
+	gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+	gsSPSetGeometryMode(G_LIGHTING), 
+	gsSPEndDisplayList() 
+};
+
+/* ========================================================================	
+		: motos leg sprite.
+=========================================================================== */
+static Vtx vtx_motos_leg[] = {
+	{{{    -53/4,    -53/4,      0},     0,   {  0,   992},   {181,   32,   64,  255}}}, 
+	{{{     54/4,    -53/4,      0},     0,   {992,   992},   {181,   32,   64,  255}}}, 
+	{{{     54/4,     54/4,      0},     0,   {992,     0},   {181,   32,   64,  255}}}, 
+	{{{    -53/4,     54/4,      0},     0,   {  0,     0},   {181,   32,   64,  255}}}, 
+};
+
+const Gfx RCP_motos_leg[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineMode(G_CC_DECALRGBA, G_CC_DECALRGBA),
+	gsSPClearGeometryMode(G_LIGHTING), 
+	gsDPSetTile(G_IM_FMT_RGBA,G_IM_SIZ_16b, 0, 0, 7, 0,  0,0,0, 0,0,0),
+
+	gsSPTexture(0xffff,0xffff, 0, 0, G_ON),
+
+	gs_Tani_SetUpTileDescrip(G_IM_FMT_RGBA,G_IM_SIZ_16b, 32, 32,  0, 0, G_TX_CLAMP|G_TX_NOMIRROR, 5, G_TX_NOLOD, G_TX_CLAMP|G_TX_NOMIRROR, 5, G_TX_NOLOD),
+
+	gs_Tani_LoadTextureImage2(motos_parts_txt, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0, 7),
+	gsSPVertex(&vtx_motos_leg[0],  4, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSP1Triangle( 0, 2, 3, 0),
+
+	gsSPTexture(0xffff, 0xffff, 0, 0, G_OFF),
+
+	gsDPPipeSync(),
+	gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+	gsSPSetGeometryMode(G_LIGHTING), 
+	gsSPEndDisplayList() 
+};
+
+/*-------------------------------------------------------------*/
+/*	vertex & polygon data                                      */
+/*-------------------------------------------------------------*/
+
+static Vtx vtx_motos_basedata_A0[]={
+    {{{0,0,-51},0,{0,0},{0,0,-127,0}}},
+    {{{-12,-15,-47},0,{0,0},{-31,-36,-117,0}}},
+    {{{-19,-1,-47},0,{0,0},{-48,-3,-117,0}}},
+    {{{-23,-27,-36},0,{0,0},{-57,-68,-90,0}}},
+    {{{-36,-3,-36},0,{0,0},{-89,-7,-90,0}}},
+    {{{-30,-36,-19},0,{0,0},{-75,-89,-48,0}}},
+    {{{-47,-3,-19},0,{0,0},{-116,-9,-48,0}}},
+    {{{-33,-39,0},0,{0,0},{-82,-96,0,0}}},
+    {{{-51,-4,0},0,{0,0},{-126,-10,0,0}}},
+    {{{-30,-36,19},0,{0,0},{-75,-89,48,0}}},
+    {{{-47,-3,19},0,{0,0},{-116,-9,48,0}}},
+    {{{-23,-27,36},0,{0,0},{-57,-68,90,0}}},
+    {{{-36,-3,36},0,{0,0},{-89,-7,90,0}}},
+    {{{-12,-15,47},0,{0,0},{-31,-36,117,0}}},
+    {{{-19,-1,47},0,{0,0},{-48,-3,117,0}}},
+    {{{0,0,51},0,{0,0},{0,0,127,0}}},
+    {{{0,0,-51},0,{0,0},{0,0,-127,0}}},
+    {{{-19,-1,-47},0,{0,0},{-48,-3,-117,0}}},
+    {{{-15,12,-47},0,{0,0},{-36,31,-117,0}}},
+    {{{-36,-3,-36},0,{0,0},{-89,-7,-90,0}}},
+    {{{-27,23,-36},0,{0,0},{-68,57,-90,0}}},
+    {{{-47,-3,-19},0,{0,0},{-116,-9,-48,0}}},
+    {{{-36,30,-19},0,{0,0},{-89,75,-48,0}}},
+    {{{-51,-4,0},0,{0,0},{-126,-10,0,0}}},
+    {{{-39,33,0},0,{0,0},{-96,82,0,0}}},
+    {{{-47,-3,19},0,{0,0},{-116,-9,48,0}}},
+    {{{-36,30,19},0,{0,0},{-89,75,48,0}}},
+    {{{-36,-3,36},0,{0,0},{-89,-7,90,0}}},
+    {{{-27,23,36},0,{0,0},{-68,57,90,0}}},
+    {{{-19,-1,47},0,{0,0},{-48,-3,117,0}}},
+    {{{-15,12,47},0,{0,0},{-36,31,117,0}}},
+    {{{0,0,51},0,{0,0},{0,0,127,0}}},
+    {{{0,0,-51},0,{0,0},{0,0,-127,0}}},
+    {{{-15,12,-47},0,{0,0},{-36,31,-117,0}}},
+    {{{-1,19,-47},0,{0,0},{-3,48,-117,0}}},
+    {{{-27,23,-36},0,{0,0},{-68,57,-90,0}}},
+    {{{-3,36,-36},0,{0,0},{-7,89,-90,0}}},
+    {{{-36,30,-19},0,{0,0},{-89,75,-48,0}}},
+    {{{-3,47,-19},0,{0,0},{-9,116,-48,0}}},
+    {{{-39,33,0},0,{0,0},{-96,82,0,0}}},
+    {{{-4,51,0},0,{0,0},{-10,126,0,0}}},
+    {{{-36,30,19},0,{0,0},{-89,75,48,0}}},
+    {{{-3,47,19},0,{0,0},{-9,116,48,0}}},
+    {{{-27,23,36},0,{0,0},{-68,57,90,0}}},
+    {{{-3,36,36},0,{0,0},{-7,89,90,0}}},
+    {{{-15,12,47},0,{0,0},{-36,31,117,0}}},
+    {{{-1,19,47},0,{0,0},{-3,48,117,0}}},
+    {{{0,0,51},0,{0,0},{0,0,127,0}}},
+    {{{0,0,-51},0,{0,0},{0,0,-127,0}}},
+    {{{-1,19,-47},0,{0,0},{-3,48,-117,0}}},
+    {{{12,15,-47},0,{0,0},{31,36,-117,0}}},
+    {{{-3,36,-36},0,{0,0},{-7,89,-90,0}}},
+    {{{23,27,-36},0,{0,0},{57,68,-90,0}}},
+    {{{-3,47,-19},0,{0,0},{-9,116,-48,0}}},
+    {{{30,36,-19},0,{0,0},{75,89,-48,0}}},
+    {{{-4,51,0},0,{0,0},{-10,126,0,0}}},
+    {{{33,39,0},0,{0,0},{82,96,0,0}}},
+    {{{-3,47,19},0,{0,0},{-9,116,48,0}}},
+    {{{30,36,19},0,{0,0},{75,89,48,0}}},
+    {{{-3,36,36},0,{0,0},{-7,89,90,0}}},
+    {{{23,27,36},0,{0,0},{57,68,90,0}}},
+    {{{-1,19,47},0,{0,0},{-3,48,117,0}}},
+    {{{12,15,47},0,{0,0},{31,36,117,0}}},
+    {{{0,0,51},0,{0,0},{0,0,127,0}}},
+    {{{0,0,-51},0,{0,0},{0,0,-127,0}}},
+    {{{12,15,-47},0,{0,0},{31,36,-117,0}}},
+    {{{19,1,-47},0,{0,0},{48,3,-117,0}}},
+    {{{23,27,-36},0,{0,0},{57,68,-90,0}}},
+    {{{36,3,-36},0,{0,0},{89,7,-90,0}}},
+    {{{30,36,-19},0,{0,0},{75,89,-48,0}}},
+    {{{47,3,-19},0,{0,0},{116,9,-48,0}}},
+    {{{33,39,0},0,{0,0},{82,96,0,0}}},
+    {{{51,4,0},0,{0,0},{126,10,0,0}}},
+    {{{30,36,19},0,{0,0},{75,89,48,0}}},
+    {{{47,3,19},0,{0,0},{116,9,48,0}}},
+    {{{23,27,36},0,{0,0},{57,68,90,0}}},
+    {{{36,3,36},0,{0,0},{89,7,90,0}}},
+    {{{12,15,47},0,{0,0},{31,36,117,0}}},
+    {{{19,1,47},0,{0,0},{48,3,117,0}}},
+    {{{0,0,51},0,{0,0},{0,0,127,0}}},
+    {{{0,0,-51},0,{0,0},{0,0,-127,0}}},
+    {{{19,1,-47},0,{0,0},{48,3,-117,0}}},
+    {{{15,-12,-47},0,{0,0},{36,-31,-117,0}}},
+    {{{36,3,-36},0,{0,0},{89,7,-90,0}}},
+    {{{27,-23,-36},0,{0,0},{68,-57,-90,0}}},
+    {{{47,3,-19},0,{0,0},{116,9,-48,0}}},
+    {{{36,-30,-19},0,{0,0},{89,-75,-48,0}}},
+    {{{51,4,0},0,{0,0},{126,10,0,0}}},
+    {{{39,-33,0},0,{0,0},{96,-82,0,0}}},
+    {{{47,3,19},0,{0,0},{116,9,48,0}}},
+    {{{36,-30,19},0,{0,0},{89,-75,48,0}}},
+    {{{36,3,36},0,{0,0},{89,7,90,0}}},
+    {{{27,-23,36},0,{0,0},{68,-57,90,0}}},
+    {{{19,1,47},0,{0,0},{48,3,117,0}}},
+    {{{15,-12,47},0,{0,0},{36,-31,117,0}}},
+    {{{0,0,51},0,{0,0},{0,0,127,0}}},
+    {{{0,0,-51},0,{0,0},{0,0,-127,0}}},
+    {{{15,-12,-47},0,{0,0},{36,-31,-117,0}}},
+    {{{1,-19,-47},0,{0,0},{3,-48,-117,0}}},
+    {{{27,-23,-36},0,{0,0},{68,-57,-90,0}}},
+    {{{3,-36,-36},0,{0,0},{7,-89,-90,0}}},
+    {{{36,-30,-19},0,{0,0},{89,-75,-48,0}}},
+    {{{3,-47,-19},0,{0,0},{9,-116,-48,0}}},
+    {{{39,-33,0},0,{0,0},{96,-82,0,0}}},
+    {{{4,-51,0},0,{0,0},{10,-126,0,0}}},
+    {{{36,-30,19},0,{0,0},{89,-75,48,0}}},
+    {{{3,-47,19},0,{0,0},{9,-116,48,0}}},
+    {{{27,-23,36},0,{0,0},{68,-57,90,0}}},
+    {{{3,-36,36},0,{0,0},{7,-89,90,0}}},
+    {{{15,-12,47},0,{0,0},{36,-31,117,0}}},
+    {{{1,-19,47},0,{0,0},{3,-48,117,0}}},
+    {{{0,0,51},0,{0,0},{0,0,127,0}}},
+    {{{0,0,-51},0,{0,0},{0,0,-127,0}}},
+    {{{1,-19,-47},0,{0,0},{3,-48,-117,0}}},
+    {{{-12,-15,-47},0,{0,0},{-31,-36,-117,0}}},
+    {{{3,-36,-36},0,{0,0},{7,-89,-90,0}}},
+    {{{-23,-27,-36},0,{0,0},{-57,-68,-90,0}}},
+    {{{3,-47,-19},0,{0,0},{9,-116,-48,0}}},
+    {{{-30,-36,-19},0,{0,0},{-75,-89,-48,0}}},
+    {{{4,-51,0},0,{0,0},{10,-126,0,0}}},
+    {{{-33,-39,0},0,{0,0},{-82,-96,0,0}}},
+    {{{3,-47,19},0,{0,0},{9,-116,48,0}}},
+    {{{-30,-36,19},0,{0,0},{-75,-89,48,0}}},
+    {{{3,-36,36},0,{0,0},{7,-89,90,0}}},
+    {{{-23,-27,36},0,{0,0},{-57,-68,90,0}}},
+    {{{1,-19,47},0,{0,0},{3,-48,117,0}}},
+    {{{-12,-15,47},0,{0,0},{-31,-36,117,0}}},
+    {{{0,0,51},0,{0,0},{0,0,127,0}}},
+};
+static Vtx vtx_motos_LhandB_0[] = {
+	{{{     -3,      0,     25},     0,   {880,    22},   {202,  209,  103,  255}}}, 
+	{{{    139,     -1,      0},     0,   {472,   990},   {108,  190,    0,  255}}}, 
+	{{{     42,     41,     25},     0,   {214,   330},   {217,  110,   48,  255}}}, 
+	{{{     -3,      0,    -24},     0,   {904,     6},   {160,   24,  178,  255}}}, 
+	{{{    139,     -1,      0},     0,   {468,  1006},   {108,  190,    0,  255}}}, 
+	{{{     -3,      0,     25},     0,   {152,     2},   {202,  209,  103,  255}}}, 
+	{{{     -3,      0,    -24},     0,   {  0,   990},   {160,   24,  178,  255}}}, 
+	{{{     42,     41,     25},     0,   {990,     0},   {217,  110,   48,  255}}}, 
+	{{{     42,     41,    -24},     0,   {990,   990},   {248,  105,  187,  255}}}, 
+	{{{     -3,      0,     25},     0,   {  0,     0},   {202,  209,  103,  255}}}, 
+	{{{     -3,      0,    -24},     0,   { 46,     8},   {160,   24,  178,  255}}}, 
+	{{{     42,     41,    -24},     0,   {812,   242},   {248,  105,  187,  255}}}, 
+	{{{    139,     -1,      0},     0,   {482,   988},   {108,  190,    0,  255}}}, 
+};
+
+static Vtx vtx_motos_LhandB_1[] = {
+	{{{     42,     41,     25},     0,   {996, -2314},   {217,  110,   48,  255}}}, 
+	{{{    139,     -1,      0},     0,   {654,  1072},   {108,  190,    0,  255}}}, 
+	{{{     42,     41,    -24},     0,   { -8, -2318},   {248,  105,  187,  255}}}, 
+};
+static Vtx vtx_motos_LhandA_0[] = {
+	{{{     -2,      0,     25},     0,   {900, -2988},   {202,   48,  104,  255}}}, 
+	{{{    140,      0,      0},     0,   {480,  1004},   {108,   66,    0,  255}}}, 
+	{{{     -2,      0,    -24},     0,   { 16, -2966},   {160,  232,  177,  255}}}, 
+};
+
+static Vtx vtx_motos_LhandA_1[] = {
+	{{{     43,    -41,     25},     0,   {392,    78},   {217,  146,   48,  255}}}, 
+	{{{    140,      0,      0},     0,   {984,   954},   {108,   66,    0,  255}}}, 
+	{{{     -2,      0,     25},     0,   { 52,   920},   {202,   48,  104,  255}}}, 
+	{{{     43,    -41,    -24},     0,   {  0,     0},   {248,  151,  187,  255}}}, 
+	{{{     43,    -41,     25},     0,   {  0,   990},   {217,  146,   48,  255}}}, 
+	{{{     -2,      0,    -24},     0,   {990,     0},   {160,  232,  177,  255}}}, 
+	{{{     -2,      0,     25},     0,   {990,   990},   {202,   48,  104,  255}}}, 
+	{{{     43,    -41,    -24},     0,   {186,   234},   {248,  151,  187,  255}}}, 
+	{{{     -2,      0,    -24},     0,   {956,    32},   {160,  232,  177,  255}}}, 
+	{{{    140,      0,      0},     0,   {382,   996},   {108,   66,    0,  255}}}, 
+	{{{     43,    -41,    -24},     0,   {896,    -4},   {248,  151,  187,  255}}}, 
+	{{{    140,      0,      0},     0,   {468,  1008},   {108,   66,    0,  255}}}, 
+	{{{     43,    -41,     25},     0,   {112,    42},   {217,  146,   48,  255}}}, 
+};
+static Vtx vtx_motos_basedata_A3[]={
+    {{{ -19,  -1,  47},     0,{    0,    0},{ -48,  -3, 117,   0}}},
+    {{{ -12, -15,  47},     0,{    0,    0},{ -31, -36, 117,   0}}},
+    {{{   0,   0,  51},     0,{    0,    0},{   0,   0, 127,   0}}},
+    {{{ -36,  -3,  36},     0,{    0,    0},{ -89,  -7,  90,   0}}},
+    {{{ -23, -27,  36},     0,{    0,    0},{ -57, -68,  90,   0}}},
+    {{{ -47,  -3,  19},     0,{    0,    0},{-116,  -9,  48,   0}}},
+    {{{ -30, -36,  19},     0,{    0,    0},{ -75, -89,  48,   0}}},
+    {{{ -51,  -4,   0},     0,{    0,    0},{-126, -10,   0,   0}}},
+    {{{ -33, -39,   0},     0,{    0,    0},{ -82, -96,   0,   0}}},
+    {{{ -47,  -3, -19},     0,{    0,    0},{-116,  -9, -48,   0}}},
+    {{{ -30, -36, -19},     0,{    0,    0},{ -75, -89, -48,   0}}},
+    {{{ -36,  -3, -36},     0,{    0,    0},{ -89,  -7, -90,   0}}},
+    {{{ -23, -27, -36},     0,{    0,    0},{ -57, -68, -90,   0}}},
+    {{{ -19,  -1, -47},     0,{    0,    0},{ -48,  -3,-117,   0}}},
+    {{{ -12, -15, -47},     0,{    0,    0},{ -31, -36,-117,   0}}},
+    {{{   0,   0, -51},     0,{    0,    0},{   0,   0,-127,   0}}},
+    {{{ -15,  12,  47},     0,{    0,    0},{ -36,  31, 117,   0}}},
+    {{{ -19,  -1,  47},     0,{    0,    0},{ -48,  -3, 117,   0}}},
+    {{{   0,   0,  51},     0,{    0,    0},{   0,   0, 127,   0}}},
+    {{{ -27,  23,  36},     0,{    0,    0},{ -68,  57,  90,   0}}},
+    {{{ -36,  -3,  36},     0,{    0,    0},{ -89,  -7,  90,   0}}},
+    {{{ -36,  30,  19},     0,{    0,    0},{ -89,  75,  48,   0}}},
+    {{{ -47,  -3,  19},     0,{    0,    0},{-116,  -9,  48,   0}}},
+    {{{ -39,  33,   0},     0,{    0,    0},{ -96,  82,   0,   0}}},
+    {{{ -51,  -4,   0},     0,{    0,    0},{-126, -10,   0,   0}}},
+    {{{ -36,  30, -19},     0,{    0,    0},{ -89,  75, -48,   0}}},
+    {{{ -47,  -3, -19},     0,{    0,    0},{-116,  -9, -48,   0}}},
+    {{{ -27,  23, -36},     0,{    0,    0},{ -68,  57, -90,   0}}},
+    {{{ -36,  -3, -36},     0,{    0,    0},{ -89,  -7, -90,   0}}},
+    {{{ -15,  12, -47},     0,{    0,    0},{ -36,  31,-117,   0}}},
+    {{{ -19,  -1, -47},     0,{    0,    0},{ -48,  -3,-117,   0}}},
+    {{{   0,   0, -51},     0,{    0,    0},{   0,   0,-127,   0}}},
+    {{{  -1,  19,  47},     0,{    0,    0},{  -3,  48, 117,   0}}},
+    {{{ -15,  12,  47},     0,{    0,    0},{ -36,  31, 117,   0}}},
+    {{{   0,   0,  51},     0,{    0,    0},{   0,   0, 127,   0}}},
+    {{{  -3,  36,  36},     0,{    0,    0},{  -7,  89,  90,   0}}},
+    {{{ -27,  23,  36},     0,{    0,    0},{ -68,  57,  90,   0}}},
+    {{{  -3,  47,  19},     0,{    0,    0},{  -9, 116,  48,   0}}},
+    {{{ -36,  30,  19},     0,{    0,    0},{ -89,  75,  48,   0}}},
+    {{{  -4,  51,   0},     0,{    0,    0},{ -10, 126,   0,   0}}},
+    {{{ -39,  33,   0},     0,{    0,    0},{ -96,  82,   0,   0}}},
+    {{{  -3,  47, -19},     0,{    0,    0},{  -9, 116, -48,   0}}},
+    {{{ -36,  30, -19},     0,{    0,    0},{ -89,  75, -48,   0}}},
+    {{{  -3,  36, -36},     0,{    0,    0},{  -7,  89, -90,   0}}},
+    {{{ -27,  23, -36},     0,{    0,    0},{ -68,  57, -90,   0}}},
+    {{{  -1,  19, -47},     0,{    0,    0},{  -3,  48,-117,   0}}},
+    {{{ -15,  12, -47},     0,{    0,    0},{ -36,  31,-117,   0}}},
+    {{{   0,   0, -51},     0,{    0,    0},{   0,   0,-127,   0}}},
+    {{{  12,  15,  47},     0,{    0,    0},{  31,  36, 117,   0}}},
+    {{{  -1,  19,  47},     0,{    0,    0},{  -3,  48, 117,   0}}},
+    {{{   0,   0,  51},     0,{    0,    0},{   0,   0, 127,   0}}},
+    {{{  23,  27,  36},     0,{    0,    0},{  57,  68,  90,   0}}},
+    {{{  -3,  36,  36},     0,{    0,    0},{  -7,  89,  90,   0}}},
+    {{{  30,  36,  19},     0,{    0,    0},{  75,  89,  48,   0}}},
+    {{{  -3,  47,  19},     0,{    0,    0},{  -9, 116,  48,   0}}},
+    {{{  33,  39,   0},     0,{    0,    0},{  82,  96,   0,   0}}},
+    {{{  -4,  51,   0},     0,{    0,    0},{ -10, 126,   0,   0}}},
+    {{{  30,  36, -19},     0,{    0,    0},{  75,  89, -48,   0}}},
+    {{{  -3,  47, -19},     0,{    0,    0},{  -9, 116, -48,   0}}},
+    {{{  23,  27, -36},     0,{    0,    0},{  57,  68, -90,   0}}},
+    {{{  -3,  36, -36},     0,{    0,    0},{  -7,  89, -90,   0}}},
+    {{{  12,  15, -47},     0,{    0,    0},{  31,  36,-117,   0}}},
+    {{{  -1,  19, -47},     0,{    0,    0},{  -3,  48,-117,   0}}},
+    {{{   0,   0, -51},     0,{    0,    0},{   0,   0,-127,   0}}},
+    {{{  19,   1,  47},     0,{    0,    0},{  48,   3, 117,   0}}},
+    {{{  12,  15,  47},     0,{    0,    0},{  31,  36, 117,   0}}},
+    {{{   0,   0,  51},     0,{    0,    0},{   0,   0, 127,   0}}},
+    {{{  36,   3,  36},     0,{    0,    0},{  89,   7,  90,   0}}},
+    {{{  23,  27,  36},     0,{    0,    0},{  57,  68,  90,   0}}},
+    {{{  47,   3,  19},     0,{    0,    0},{ 116,   9,  48,   0}}},
+    {{{  30,  36,  19},     0,{    0,    0},{  75,  89,  48,   0}}},
+    {{{  51,   4,   0},     0,{    0,    0},{ 126,  10,   0,   0}}},
+    {{{  33,  39,   0},     0,{    0,    0},{  82,  96,   0,   0}}},
+    {{{  47,   3, -19},     0,{    0,    0},{ 116,   9, -48,   0}}},
+    {{{  30,  36, -19},     0,{    0,    0},{  75,  89, -48,   0}}},
+    {{{  36,   3, -36},     0,{    0,    0},{  89,   7, -90,   0}}},
+    {{{  23,  27, -36},     0,{    0,    0},{  57,  68, -90,   0}}},
+    {{{  19,   1, -47},     0,{    0,    0},{  48,   3,-117,   0}}},
+    {{{  12,  15, -47},     0,{    0,    0},{  31,  36,-117,   0}}},
+    {{{   0,   0, -51},     0,{    0,    0},{   0,   0,-127,   0}}},
+    {{{  15, -12,  47},     0,{    0,    0},{  36, -31, 117,   0}}},
+    {{{  19,   1,  47},     0,{    0,    0},{  48,   3, 117,   0}}},
+    {{{   0,   0,  51},     0,{    0,    0},{   0,   0, 127,   0}}},
+    {{{  27, -23,  36},     0,{    0,    0},{  68, -57,  90,   0}}},
+    {{{  36,   3,  36},     0,{    0,    0},{  89,   7,  90,   0}}},
+    {{{  36, -30,  19},     0,{    0,    0},{  89, -75,  48,   0}}},
+    {{{  47,   3,  19},     0,{    0,    0},{ 116,   9,  48,   0}}},
+    {{{  39, -33,   0},     0,{    0,    0},{  96, -82,   0,   0}}},
+    {{{  51,   4,   0},     0,{    0,    0},{ 126,  10,   0,   0}}},
+    {{{  36, -30, -19},     0,{    0,    0},{  89, -75, -48,   0}}},
+    {{{  47,   3, -19},     0,{    0,    0},{ 116,   9, -48,   0}}},
+    {{{  27, -23, -36},     0,{    0,    0},{  68, -57, -90,   0}}},
+    {{{  36,   3, -36},     0,{    0,    0},{  89,   7, -90,   0}}},
+    {{{  15, -12, -47},     0,{    0,    0},{  36, -31,-117,   0}}},
+    {{{  19,   1, -47},     0,{    0,    0},{  48,   3,-117,   0}}},
+    {{{   0,   0, -51},     0,{    0,    0},{   0,   0,-127,   0}}},
+    {{{   1, -19,  47},     0,{    0,    0},{   3, -48, 117,   0}}},
+    {{{  15, -12,  47},     0,{    0,    0},{  36, -31, 117,   0}}},
+    {{{   0,   0,  51},     0,{    0,    0},{   0,   0, 127,   0}}},
+    {{{   3, -36,  36},     0,{    0,    0},{   7, -89,  90,   0}}},
+    {{{  27, -23,  36},     0,{    0,    0},{  68, -57,  90,   0}}},
+    {{{   3, -47,  19},     0,{    0,    0},{   9,-116,  48,   0}}},
+    {{{  36, -30,  19},     0,{    0,    0},{  89, -75,  48,   0}}},
+    {{{   4, -51,   0},     0,{    0,    0},{  10,-126,   0,   0}}},
+    {{{  39, -33,   0},     0,{    0,    0},{  96, -82,   0,   0}}},
+    {{{   3, -47, -19},     0,{    0,    0},{   9,-116, -48,   0}}},
+    {{{  36, -30, -19},     0,{    0,    0},{  89, -75, -48,   0}}},
+    {{{   3, -36, -36},     0,{    0,    0},{   7, -89, -90,   0}}},
+    {{{  27, -23, -36},     0,{    0,    0},{  68, -57, -90,   0}}},
+    {{{   1, -19, -47},     0,{    0,    0},{   3, -48,-117,   0}}},
+    {{{  15, -12, -47},     0,{    0,    0},{  36, -31,-117,   0}}},
+    {{{   0,   0, -51},     0,{    0,    0},{   0,   0,-127,   0}}},
+    {{{ -12, -15,  47},     0,{    0,    0},{ -31, -36, 117,   0}}},
+    {{{   1, -19,  47},     0,{    0,    0},{   3, -48, 117,   0}}},
+    {{{   0,   0,  51},     0,{    0,    0},{   0,   0, 127,   0}}},
+    {{{ -23, -27,  36},     0,{    0,    0},{ -57, -68,  90,   0}}},
+    {{{   3, -36,  36},     0,{    0,    0},{   7, -89,  90,   0}}},
+    {{{ -30, -36,  19},     0,{    0,    0},{ -75, -89,  48,   0}}},
+    {{{   3, -47,  19},     0,{    0,    0},{   9,-116,  48,   0}}},
+    {{{ -33, -39,   0},     0,{    0,    0},{ -82, -96,   0,   0}}},
+    {{{   4, -51,   0},     0,{    0,    0},{  10,-126,   0,   0}}},
+    {{{ -30, -36, -19},     0,{    0,    0},{ -75, -89, -48,   0}}},
+    {{{   3, -47, -19},     0,{    0,    0},{   9,-116, -48,   0}}},
+    {{{ -23, -27, -36},     0,{    0,    0},{ -57, -68, -90,   0}}},
+    {{{   3, -36, -36},     0,{    0,    0},{   7, -89, -90,   0}}},
+    {{{ -12, -15, -47},     0,{    0,    0},{ -31, -36,-117,   0}}},
+    {{{   1, -19, -47},     0,{    0,    0},{   3, -48,-117,   0}}},
+    {{{   0,   0, -51},     0,{    0,    0},{   0,   0,-127,   0}}},
+};
+static Vtx vtx_motos_RhandA_0[] = {
+    {{{  -3,   1,  25},     0,{  800,  -12},{ 160, 233,  78, 255}}},
+    {{{  42, -40,  25},     0,{  170,  290},{ 249, 151,  69, 255}}},
+    {{{ 139,   2,   0},     0,{  646,  986},{ 108,  66,   0, 255}}},
+    {{{  42, -40, -24},     0,{  116,  962},{ 217, 146, 208, 255}}},
+    {{{ 139,   2,   0},     0,{  554,  -34},{ 108,  66,   0, 255}}},
+    {{{  42, -40,  25},     0,{  864,  958},{ 249, 151,  69, 255}}},
+    {{{  -3,   1, -24},     0,{   -6,    8},{ 201,  47, 152, 255}}},
+    {{{ 139,   2,   0},     0,{  728,  974},{ 108,  66,   0, 255}}},
+    {{{  42, -40, -24},     0,{  722,  156},{ 217, 146, 208, 255}}},
+    {{{  -3,   1,  25},     0,{  990,  990},{ 160, 233,  78, 255}}},
+    {{{  42, -40, -24},     0,{    0,    0},{ 217, 146, 208, 255}}},
+    {{{  42, -40,  25},     0,{    0,  990},{ 249, 151,  69, 255}}},
+    {{{  -3,   1, -24},     0,{  990,    0},{ 201,  47, 152, 255}}},
+};
+
+static Vtx vtx_motos_RhandA_1[] = {
+    {{{  -3,   1,  25},     0,{  950,-3084},{ 160, 233,  78, 255}}},
+    {{{ 139,   2,   0},     0,{  508, 1048},{ 108,  66,   0, 255}}},
+    {{{  -3,   1, -24},     0,{  -12,-3084},{ 201,  47, 152, 255}}},
+};
+static Vtx vtx_motos_RhandB_0[] = {
+    {{{  -3,   0, -24},     0,{   44,-3090},{ 160,  24, 178, 255}}},
+    {{{ 139,  -1,   0},     0,{  442,  984},{ 108, 190,   0, 255}}},
+    {{{  -3,   0,  25},     0,{  876,-3076},{ 202, 209, 103, 255}}},
+};
+
+static Vtx vtx_motos_RhandB_1[] = {
+    {{{  42,  41, -24},     0,{  390,  -62},{ 248, 105, 187, 255}}},
+    {{{ 139,  -1,   0},     0,{  988,  988},{ 108, 190,   0, 255}}},
+    {{{  -3,   0, -24},     0,{   64,  988},{ 160,  24, 178, 255}}},
+    {{{  42,  41,  25},     0,{  -22,  -50},{ 217, 110,  48, 255}}},
+    {{{  -3,   0, -24},     0,{  990,  990},{ 160,  24, 178, 255}}},
+    {{{  -3,   0,  25},     0,{  990,    0},{ 202, 209, 103, 255}}},
+    {{{  42,  41, -24},     0,{  -22,  972},{ 248, 105, 187, 255}}},
+    {{{  42,  41,  25},     0,{  136,  178},{ 217, 110,  48, 255}}},
+    {{{  -3,   0,  25},     0,{  898,  -20},{ 202, 209, 103, 255}}},
+    {{{ 139,  -1,   0},     0,{  478,  928},{ 108, 190,   0, 255}}},
+    {{{  42,  41,  25},     0,{   10,  986},{ 217, 110,  48, 255}}},
+    {{{ 139,  -1,   0},     0,{  510,  -34},{ 108, 190,   0, 255}}},
+    {{{  42,  41, -24},     0,{  934,  986},{ 248, 105, 187, 255}}},
+};
+static Vtx vtx_motos_Lfoot[] = {
+    {{{ -29,  35,  53},     0,{  886,  430},{   0, 118,  46, 255}}},
+    {{{  72,   9, -48},     0,{   62,  530},{  63,  58, 163, 255}}},
+    {{{ -29,  35, -48},     0,{  462,  986},{ 223,  53, 146, 255}}},
+    {{{ 100,   2,   2},     0,{  168,  130},{ 121, 221,   0, 255}}},
+    {{{  72,   9,  53},     0,{  486,  -26},{  27, 232, 121, 255}}},
+    {{{ -53,  41,   2},     0,{  768,  814},{ 131,  22,   0, 255}}},
+    {{{  24, -30, -30},     0,{  616,  138},{   9, 151, 187, 255}}},
+    {{{ -29,  35, -48},     0,{  244,  886},{ 223,  53, 146, 255}}},
+    {{{  72,   9, -48},     0,{  850,  904},{  63,  58, 163, 255}}},
+    {{{ -34, -12,  32},     0,{   18,   36},{ 178, 190,  74, 255}}},
+    {{{ -53,  41,   2},     0,{  512,  816},{ 131,  22,   0, 255}}},
+    {{{ -34, -12, -26},     0,{  868,   26},{ 174, 170, 215, 255}}},
+    {{{  24, -30, -30},     0,{   52,  -10},{   9, 151, 187, 255}}},
+    {{{ 100,   2,   2},     0,{  440,  990},{ 121, 221,   0, 255}}},
+    {{{  24, -30,  36},     0,{  958,  -18},{   4, 137,  41, 255}}},
+    {{{ -34, -12,  32},     0,{  392,  262},{ 178, 190,  74, 255}}},
+    {{{ -29,  35,  53},     0,{   30,  964},{   0, 118,  46, 255}}},
+    {{{ -53,  41,   2},     0,{  872,  852},{ 131,  22,   0, 255}}},
+    {{{ -29,  35, -48},     0,{  100,  142},{ 223,  53, 146, 255}}},
+    {{{ -34, -12, -26},     0,{  958,  -28},{ 174, 170, 215, 255}}},
+    {{{ -53,  41,   2},     0,{  502,  930},{ 131,  22,   0, 255}}},
+    {{{ -34, -12,  32},     0,{  706,  148},{ 178, 190,  74, 255}}},
+    {{{  72,   9,  53},     0,{  218,  892},{  27, 232, 121, 255}}},
+    {{{ -29,  35,  53},     0,{  222,  112},{   0, 118,  46, 255}}},
+    {{{  24, -30, -30},     0,{  616,  138},{   9, 151, 187, 255}}},
+    {{{ -34, -12, -26},     0,{  262,  150},{ 174, 170, 215, 255}}},
+    {{{ -29,  35, -48},     0,{  244,  886},{ 223,  53, 146, 255}}},
+    {{{  24, -30,  36},     0,{  716,  602},{   4, 137,  41, 255}}},
+    {{{  24, -30,  36},     0,{  990,  990},{   4, 137,  41, 255}}},
+    {{{ -34, -12,  32},     0,{  922,  -22},{ 178, 190,  74, 255}}},
+    {{{ -34, -12, -26},     0,{   22,  -22},{ 174, 170, 215, 255}}},
+    {{{  24, -30, -30},     0,{    0,  990},{   9, 151, 187, 255}}},
+    {{{ 100,   2,   2},     0,{  208,  814},{ 121, 221,   0, 255}}},
+    {{{  72,   9,  53},     0,{  940,  702},{  27, 232, 121, 255}}},
+    {{{  24, -30,  36},     0,{  746,  228},{   4, 137,  41, 255}}},
+    {{{  24, -30, -30},     0,{  394,  -20},{   9, 151, 187, 255}}},
+    {{{  72,   9, -48},     0,{  220,  592},{  63,  58, 163, 255}}},
+    {{{ 100,   2,   2},     0,{  946,  672},{ 121, 221,   0, 255}}},
+};
+static Vtx vtx_motos_basedata_A7[]={
+    {{{  55,   0,   0},     0,{    0,    0},{ 127,   0,   0,   0}}},
+    {{{  50,   0, -21},     0,{    0,    0},{ 117,   0, -48,   0}}},
+    {{{  50,  14, -14},     0,{    0,    0},{ 117,  34, -34,   0}}},
+    {{{  38,   0, -38},     0,{    0,    0},{  90,   0, -89,   0}}},
+    {{{  38,  27, -27},     0,{    0,    0},{  90,  63, -63,   0}}},
+    {{{  21,   0, -50},     0,{    0,    0},{  48,   0,-117,   0}}},
+    {{{  21,  35, -36},     0,{    0,    0},{  48,  82, -82,   0}}},
+    {{{   0,   0, -55},     0,{    0,    0},{   0,   0,-127,   0}}},
+    {{{   0,  38, -38},     0,{    0,    0},{   0,  89, -89,   0}}},
+    {{{ -21,   0, -50},     0,{    0,    0},{ -48,   0,-117,   0}}},
+    {{{ -21,  35, -36},     0,{    0,    0},{ -48,  82, -82,   0}}},
+    {{{ -38,   0, -38},     0,{    0,    0},{ -90,   0, -89,   0}}},
+    {{{ -38,  27, -27},     0,{    0,    0},{ -90,  63, -63,   0}}},
+    {{{ -50,   0, -21},     0,{    0,    0},{-117,   0, -48,   0}}},
+    {{{ -50,  14, -14},     0,{    0,    0},{-117,  34, -34,   0}}},
+    {{{ -55,   0,   0},     0,{    0,    0},{-127,   0,   0,   0}}},
+    {{{  55,   0,   0},     0,{    0,    0},{ 127,   0,   0,   0}}},
+    {{{  50,  14, -14},     0,{    0,    0},{ 117,  34, -34,   0}}},
+    {{{  50,  21,   0},     0,{    0,    0},{ 117,  48,   0,   0}}},
+    {{{  38,  27, -27},     0,{    0,    0},{  90,  63, -63,   0}}},
+    {{{  38,  38,   0},     0,{    0,    0},{  90,  89,   0,   0}}},
+    {{{  21,  35, -36},     0,{    0,    0},{  48,  82, -82,   0}}},
+    {{{  21,  50,   0},     0,{    0,    0},{  48, 117,   0,   0}}},
+    {{{   0,  38, -38},     0,{    0,    0},{   0,  89, -89,   0}}},
+    {{{   0,  55,   0},     0,{    0,    0},{   0, 127,   0,   0}}},
+    {{{ -21,  35, -36},     0,{    0,    0},{ -48,  82, -82,   0}}},
+    {{{ -21,  50,   0},     0,{    0,    0},{ -48, 117,   0,   0}}},
+    {{{ -38,  27, -27},     0,{    0,    0},{ -90,  63, -63,   0}}},
+    {{{ -38,  38,   0},     0,{    0,    0},{ -90,  89,   0,   0}}},
+    {{{ -50,  14, -14},     0,{    0,    0},{-117,  34, -34,   0}}},
+    {{{ -50,  21,   0},     0,{    0,    0},{-117,  48,   0,   0}}},
+    {{{ -55,   0,   0},     0,{    0,    0},{-127,   0,   0,   0}}},
+    {{{  55,   0,   0},     0,{    0,    0},{ 127,   0,   0,   0}}},
+    {{{  50,  21,   0},     0,{    0,    0},{ 117,  48,   0,   0}}},
+    {{{  50,  14,  14},     0,{    0,    0},{ 117,  34,  34,   0}}},
+    {{{  38,  38,   0},     0,{    0,    0},{  90,  89,   0,   0}}},
+    {{{  38,  27,  27},     0,{    0,    0},{  90,  63,  63,   0}}},
+    {{{  21,  50,   0},     0,{    0,    0},{  48, 117,   0,   0}}},
+    {{{  21,  35,  36},     0,{    0,    0},{  48,  82,  82,   0}}},
+    {{{   0,  55,   0},     0,{    0,    0},{   0, 127,   0,   0}}},
+    {{{   0,  38,  38},     0,{    0,    0},{   0,  89,  89,   0}}},
+    {{{ -21,  50,   0},     0,{    0,    0},{ -48, 117,   0,   0}}},
+    {{{ -21,  35,  36},     0,{    0,    0},{ -48,  82,  82,   0}}},
+    {{{ -38,  38,   0},     0,{    0,    0},{ -90,  89,   0,   0}}},
+    {{{ -38,  27,  27},     0,{    0,    0},{ -90,  63,  63,   0}}},
+    {{{ -50,  21,   0},     0,{    0,    0},{-117,  48,   0,   0}}},
+    {{{ -50,  14,  14},     0,{    0,    0},{-117,  34,  34,   0}}},
+    {{{ -55,   0,   0},     0,{    0,    0},{-127,   0,   0,   0}}},
+    {{{  55,   0,   0},     0,{    0,    0},{ 127,   0,   0,   0}}},
+    {{{  50,  14,  14},     0,{    0,    0},{ 117,  34,  34,   0}}},
+    {{{  50,   0,  21},     0,{    0,    0},{ 117,   0,  48,   0}}},
+    {{{  38,  27,  27},     0,{    0,    0},{  90,  63,  63,   0}}},
+    {{{  38,   0,  38},     0,{    0,    0},{  90,   0,  89,   0}}},
+    {{{  21,  35,  36},     0,{    0,    0},{  48,  82,  82,   0}}},
+    {{{  21,   0,  50},     0,{    0,    0},{  48,   0, 117,   0}}},
+    {{{   0,  38,  38},     0,{    0,    0},{   0,  89,  89,   0}}},
+    {{{   0,   0,  55},     0,{    0,    0},{   0,   0, 127,   0}}},
+    {{{ -21,  35,  36},     0,{    0,    0},{ -48,  82,  82,   0}}},
+    {{{ -21,   0,  50},     0,{    0,    0},{ -48,   0, 117,   0}}},
+    {{{ -38,  27,  27},     0,{    0,    0},{ -90,  63,  63,   0}}},
+    {{{ -38,   0,  38},     0,{    0,    0},{ -90,   0,  89,   0}}},
+    {{{ -50,  14,  14},     0,{    0,    0},{-117,  34,  34,   0}}},
+    {{{ -50,   0,  21},     0,{    0,    0},{-117,   0,  48,   0}}},
+    {{{ -55,   0,   0},     0,{    0,    0},{-127,   0,   0,   0}}},
+    {{{  55,   0,   0},     0,{    0,    0},{ 127,   0,   0,   0}}},
+    {{{  50,   0,  21},     0,{    0,    0},{ 117,   0,  48,   0}}},
+    {{{  50, -14,  14},     0,{    0,    0},{ 117, -34,  34,   0}}},
+    {{{  38,   0,  38},     0,{    0,    0},{  90,   0,  89,   0}}},
+    {{{  38, -27,  27},     0,{    0,    0},{  90, -63,  63,   0}}},
+    {{{  21,   0,  50},     0,{    0,    0},{  48,   0, 117,   0}}},
+    {{{  21, -36,  36},     0,{    0,    0},{  48, -82,  82,   0}}},
+    {{{   0,   0,  55},     0,{    0,    0},{   0,   0, 127,   0}}},
+    {{{   0, -38,  38},     0,{    0,    0},{   0, -89,  89,   0}}},
+    {{{ -21,   0,  50},     0,{    0,    0},{ -48,   0, 117,   0}}},
+    {{{ -21, -36,  36},     0,{    0,    0},{ -48, -82,  82,   0}}},
+    {{{ -38,   0,  38},     0,{    0,    0},{ -90,   0,  89,   0}}},
+    {{{ -38, -27,  27},     0,{    0,    0},{ -90, -63,  63,   0}}},
+    {{{ -50,   0,  21},     0,{    0,    0},{-117,   0,  48,   0}}},
+    {{{ -50, -14,  14},     0,{    0,    0},{-117, -34,  34,   0}}},
+    {{{ -55,   0,   0},     0,{    0,    0},{-127,   0,   0,   0}}},
+    {{{  55,   0,   0},     0,{    0,    0},{ 127,   0,   0,   0}}},
+    {{{  50, -14,  14},     0,{    0,    0},{ 117, -34,  34,   0}}},
+    {{{  50, -21,   0},     0,{    0,    0},{ 117, -48,   0,   0}}},
+    {{{  38, -27,  27},     0,{    0,    0},{  90, -63,  63,   0}}},
+    {{{  38, -38,   0},     0,{    0,    0},{  90, -89,   0,   0}}},
+    {{{  21, -36,  36},     0,{    0,    0},{  48, -82,  82,   0}}},
+    {{{  21, -50,   0},     0,{    0,    0},{  48,-117,   0,   0}}},
+    {{{   0, -38,  38},     0,{    0,    0},{   0, -89,  89,   0}}},
+    {{{   0, -55,   0},     0,{    0,    0},{   0,-127,   0,   0}}},
+    {{{ -21, -36,  36},     0,{    0,    0},{ -48, -82,  82,   0}}},
+    {{{ -21, -50,   0},     0,{    0,    0},{ -48,-117,   0,   0}}},
+    {{{ -38, -27,  27},     0,{    0,    0},{ -90, -63,  63,   0}}},
+    {{{ -38, -38,   0},     0,{    0,    0},{ -90, -89,   0,   0}}},
+    {{{ -50, -14,  14},     0,{    0,    0},{-117, -34,  34,   0}}},
+    {{{ -50, -21,   0},     0,{    0,    0},{-117, -48,   0,   0}}},
+    {{{ -55,   0,   0},     0,{    0,    0},{-127,   0,   0,   0}}},
+    {{{  55,   0,   0},     0,{    0,    0},{ 127,   0,   0,   0}}},
+    {{{  50, -21,   0},     0,{    0,    0},{ 117, -48,   0,   0}}},
+    {{{  50, -14, -14},     0,{    0,    0},{ 117, -34, -34,   0}}},
+    {{{  38, -38,   0},     0,{    0,    0},{  90, -89,   0,   0}}},
+    {{{  38, -27, -27},     0,{    0,    0},{  90, -63, -63,   0}}},
+    {{{  21, -50,   0},     0,{    0,    0},{  48,-117,   0,   0}}},
+    {{{  21, -36, -36},     0,{    0,    0},{  48, -82, -82,   0}}},
+    {{{   0, -55,   0},     0,{    0,    0},{   0,-127,   0,   0}}},
+    {{{   0, -38, -38},     0,{    0,    0},{   0, -89, -89,   0}}},
+    {{{ -21, -50,   0},     0,{    0,    0},{ -48,-117,   0,   0}}},
+    {{{ -21, -36, -36},     0,{    0,    0},{ -48, -82, -82,   0}}},
+    {{{ -38, -38,   0},     0,{    0,    0},{ -90, -89,   0,   0}}},
+    {{{ -38, -27, -27},     0,{    0,    0},{ -90, -63, -63,   0}}},
+    {{{ -50, -21,   0},     0,{    0,    0},{-117, -48,   0,   0}}},
+    {{{ -50, -14, -14},     0,{    0,    0},{-117, -34, -34,   0}}},
+    {{{ -55,   0,   0},     0,{    0,    0},{-127,   0,   0,   0}}},
+    {{{  55,   0,   0},     0,{    0,    0},{ 127,   0,   0,   0}}},
+    {{{  50, -14, -14},     0,{    0,    0},{ 117, -34, -34,   0}}},
+    {{{  50,   0, -21},     0,{    0,    0},{ 117,   0, -48,   0}}},
+    {{{  38, -27, -27},     0,{    0,    0},{  90, -63, -63,   0}}},
+    {{{  38,   0, -38},     0,{    0,    0},{  90,   0, -89,   0}}},
+    {{{  21, -36, -36},     0,{    0,    0},{  48, -82, -82,   0}}},
+    {{{  21,   0, -50},     0,{    0,    0},{  48,   0,-117,   0}}},
+    {{{   0, -38, -38},     0,{    0,    0},{   0, -89, -89,   0}}},
+    {{{   0,   0, -55},     0,{    0,    0},{   0,   0,-127,   0}}},
+    {{{ -21, -36, -36},     0,{    0,    0},{ -48, -82, -82,   0}}},
+    {{{ -21,   0, -50},     0,{    0,    0},{ -48,   0,-117,   0}}},
+    {{{ -38, -27, -27},     0,{    0,    0},{ -90, -63, -63,   0}}},
+    {{{ -38,   0, -38},     0,{    0,    0},{ -90,   0, -89,   0}}},
+    {{{ -50, -14, -14},     0,{    0,    0},{-117, -34, -34,   0}}},
+    {{{ -50,   0, -21},     0,{    0,    0},{-117,   0, -48,   0}}},
+    {{{ -55,   0,   0},     0,{    0,    0},{-127,   0,   0,   0}}},
+};
+static Vtx vtx_motos_Rfoot[] = {
+    {{{  72,   9,  49},     0,{   76,  964},{  38,  25, 118, 255}}},
+    {{{ -34, -12,  27},     0,{  694,  226},{ 179, 189,  74, 255}}},
+    {{{  24, -30,  31},     0,{  300,  252},{   4, 137,  41, 255}}},
+    {{{ -34, -12,  27},     0,{   18,   28},{ 179, 189,  74, 255}}},
+    {{{ -53,  41,  -1},     0,{  468,  892},{ 198, 112,   0, 255}}},
+    {{{ -34, -12, -31},     0,{  940,   68},{ 173, 170, 215, 255}}},
+    {{{  24, -30, -35},     0,{  242,  272},{  10, 151, 186, 255}}},
+    {{{ 100,   2,  -1},     0,{  524,  750},{ 121, 221,   0, 255}}},
+    {{{  24, -30,  31},     0,{  806,  220},{   4, 137,  41, 255}}},
+    {{{ -53,  41,  -1},     0,{   22,  780},{ 198, 112,   0, 255}}},
+    {{{ -29,  35, -52},     0,{  804,  742},{ 209,   9, 139, 255}}},
+    {{{ -34, -12, -31},     0,{  540,   62},{ 173, 170, 215, 255}}},
+    {{{ -53,  41,  -1},     0,{  964,  902},{ 198, 112,   0, 255}}},
+    {{{ -34, -12,  27},     0,{  406,  136},{ 179, 189,  74, 255}}},
+    {{{ -29,  35,  49},     0,{  128,  866},{ 196,  36, 105, 255}}},
+    {{{ -29,  35, -52},     0,{  224,  740},{ 209,   9, 139, 255}}},
+    {{{  72,   9, -52},     0,{  892,  934},{  63,  59, 164, 255}}},
+    {{{  24, -30, -35},     0,{  606,  182},{  10, 151, 186, 255}}},
+    {{{  72,   9,  49},     0,{   76,  964},{  38,  25, 118, 255}}},
+    {{{ -29,  35,  49},     0,{  750,  894},{ 196,  36, 105, 255}}},
+    {{{ -34, -12,  27},     0,{  694,  226},{ 179, 189,  74, 255}}},
+    {{{  24, -30, -35},     0,{  700,  170},{  10, 151, 186, 255}}},
+    {{{  72,   9, -52},     0,{  224,  692},{  63,  59, 164, 255}}},
+    {{{ 100,   2,  -1},     0,{  716,  916},{ 121, 221,   0, 255}}},
+    {{{ 100,   2,  -1},     0,{   80,  846},{ 121, 221,   0, 255}}},
+    {{{  72,   9,  49},     0,{  856,  740},{  38,  25, 118, 255}}},
+    {{{  24, -30,  31},     0,{  538,  162},{   4, 137,  41, 255}}},
+    {{{ -34, -12, -31},     0,{  218,   90},{ 173, 170, 215, 255}}},
+    {{{ -53,  41,  -1},     0,{  876,  762},{ 198, 112,   0, 255}}},
+    {{{  72,   9, -52},     0,{  -14,  596},{  63,  59, 164, 255}}},
+    {{{ -29,  35, -52},     0,{  520,  978},{ 209,   9, 139, 255}}},
+    {{{ -29,  35,  49},     0,{  984,  366},{ 196,  36, 105, 255}}},
+    {{{  72,   9,  49},     0,{  448,  -14},{  38,  25, 118, 255}}},
+    {{{ 100,   2,  -1},     0,{   74,  188},{ 121, 221,   0, 255}}},
+    {{{  24, -30,  31},     0,{  994,  990},{   4, 137,  41, 255}}},
+    {{{ -34, -12, -31},     0,{   22,  -26},{ 173, 170, 215, 255}}},
+    {{{  24, -30, -35},     0,{  -42,  986},{  10, 151, 186, 255}}},
+    {{{ -34, -12,  27},     0,{  936,  -24},{ 179, 189,  74, 255}}},
+};
+static Vtx vtx_motos_basedata_A9[]={
+    {{{  50,  14,  14},     0,{    0,    0},{ 117,  34,  34,   0}}},
+    {{{  50,   0,  21},     0,{    0,    0},{ 117,   0,  48,   0}}},
+    {{{  55,   0,   0},     0,{    0,    0},{ 127,   0,   0,   0}}},
+    {{{  38,  27,  27},     0,{    0,    0},{  90,  63,  63,   0}}},
+    {{{  38,   0,  38},     0,{    0,    0},{  90,   0,  89,   0}}},
+    {{{  21,  35,  36},     0,{    0,    0},{  48,  82,  82,   0}}},
+    {{{  21,   0,  50},     0,{    0,    0},{  48,   0, 117,   0}}},
+    {{{   0,  38,  38},     0,{    0,    0},{   0,  89,  89,   0}}},
+    {{{   0,   0,  55},     0,{    0,    0},{   0,   0, 127,   0}}},
+    {{{ -21,  35,  36},     0,{    0,    0},{ -48,  82,  82,   0}}},
+    {{{ -21,   0,  50},     0,{    0,    0},{ -48,   0, 117,   0}}},
+    {{{ -38,  27,  27},     0,{    0,    0},{ -90,  63,  63,   0}}},
+    {{{ -38,   0,  38},     0,{    0,    0},{ -90,   0,  89,   0}}},
+    {{{ -50,  14,  14},     0,{    0,    0},{-117,  34,  34,   0}}},
+    {{{ -50,   0,  21},     0,{    0,    0},{-117,   0,  48,   0}}},
+    {{{ -55,   0,   0},     0,{    0,    0},{-127,   0,   0,   0}}},
+    {{{  50,  21,   0},     0,{    0,    0},{ 117,  48,   0,   0}}},
+    {{{  50,  14,  14},     0,{    0,    0},{ 117,  34,  34,   0}}},
+    {{{  55,   0,   0},     0,{    0,    0},{ 127,   0,   0,   0}}},
+    {{{  38,  38,   0},     0,{    0,    0},{  90,  89,   0,   0}}},
+    {{{  38,  27,  27},     0,{    0,    0},{  90,  63,  63,   0}}},
+    {{{  21,  50,   0},     0,{    0,    0},{  48, 117,   0,   0}}},
+    {{{  21,  35,  36},     0,{    0,    0},{  48,  82,  82,   0}}},
+    {{{   0,  55,   0},     0,{    0,    0},{   0, 127,   0,   0}}},
+    {{{   0,  38,  38},     0,{    0,    0},{   0,  89,  89,   0}}},
+    {{{ -21,  50,   0},     0,{    0,    0},{ -48, 117,   0,   0}}},
+    {{{ -21,  35,  36},     0,{    0,    0},{ -48,  82,  82,   0}}},
+    {{{ -38,  38,   0},     0,{    0,    0},{ -90,  89,   0,   0}}},
+    {{{ -38,  27,  27},     0,{    0,    0},{ -90,  63,  63,   0}}},
+    {{{ -50,  21,   0},     0,{    0,    0},{-117,  48,   0,   0}}},
+    {{{ -50,  14,  14},     0,{    0,    0},{-117,  34,  34,   0}}},
+    {{{ -55,   0,   0},     0,{    0,    0},{-127,   0,   0,   0}}},
+    {{{  50,  14, -14},     0,{    0,    0},{ 117,  34, -34,   0}}},
+    {{{  50,  21,   0},     0,{    0,    0},{ 117,  48,   0,   0}}},
+    {{{  55,   0,   0},     0,{    0,    0},{ 127,   0,   0,   0}}},
+    {{{  38,  27, -27},     0,{    0,    0},{  90,  63, -63,   0}}},
+    {{{  38,  38,   0},     0,{    0,    0},{  90,  89,   0,   0}}},
+    {{{  21,  35, -36},     0,{    0,    0},{  48,  82, -82,   0}}},
+    {{{  21,  50,   0},     0,{    0,    0},{  48, 117,   0,   0}}},
+    {{{   0,  38, -38},     0,{    0,    0},{   0,  89, -89,   0}}},
+    {{{   0,  55,   0},     0,{    0,    0},{   0, 127,   0,   0}}},
+    {{{ -21,  35, -36},     0,{    0,    0},{ -48,  82, -82,   0}}},
+    {{{ -21,  50,   0},     0,{    0,    0},{ -48, 117,   0,   0}}},
+    {{{ -38,  27, -27},     0,{    0,    0},{ -90,  63, -63,   0}}},
+    {{{ -38,  38,   0},     0,{    0,    0},{ -90,  89,   0,   0}}},
+    {{{ -50,  14, -14},     0,{    0,    0},{-117,  34, -34,   0}}},
+    {{{ -50,  21,   0},     0,{    0,    0},{-117,  48,   0,   0}}},
+    {{{ -55,   0,   0},     0,{    0,    0},{-127,   0,   0,   0}}},
+    {{{  50,   0, -21},     0,{    0,    0},{ 117,   0, -48,   0}}},
+    {{{  50,  14, -14},     0,{    0,    0},{ 117,  34, -34,   0}}},
+    {{{  55,   0,   0},     0,{    0,    0},{ 127,   0,   0,   0}}},
+    {{{  38,   0, -38},     0,{    0,    0},{  90,   0, -89,   0}}},
+    {{{  38,  27, -27},     0,{    0,    0},{  90,  63, -63,   0}}},
+    {{{  21,   0, -50},     0,{    0,    0},{  48,   0,-117,   0}}},
+    {{{  21,  35, -36},     0,{    0,    0},{  48,  82, -82,   0}}},
+    {{{   0,   0, -55},     0,{    0,    0},{   0,   0,-127,   0}}},
+    {{{   0,  38, -38},     0,{    0,    0},{   0,  89, -89,   0}}},
+    {{{ -21,   0, -50},     0,{    0,    0},{ -48,   0,-117,   0}}},
+    {{{ -21,  35, -36},     0,{    0,    0},{ -48,  82, -82,   0}}},
+    {{{ -38,   0, -38},     0,{    0,    0},{ -90,   0, -89,   0}}},
+    {{{ -38,  27, -27},     0,{    0,    0},{ -90,  63, -63,   0}}},
+    {{{ -50,   0, -21},     0,{    0,    0},{-117,   0, -48,   0}}},
+    {{{ -50,  14, -14},     0,{    0,    0},{-117,  34, -34,   0}}},
+    {{{ -55,   0,   0},     0,{    0,    0},{-127,   0,   0,   0}}},
+    {{{  50, -14, -14},     0,{    0,    0},{ 117, -34, -34,   0}}},
+    {{{  50,   0, -21},     0,{    0,    0},{ 117,   0, -48,   0}}},
+    {{{  55,   0,   0},     0,{    0,    0},{ 127,   0,   0,   0}}},
+    {{{  38, -27, -27},     0,{    0,    0},{  90, -63, -63,   0}}},
+    {{{  38,   0, -38},     0,{    0,    0},{  90,   0, -89,   0}}},
+    {{{  21, -36, -36},     0,{    0,    0},{  48, -82, -82,   0}}},
+    {{{  21,   0, -50},     0,{    0,    0},{  48,   0,-117,   0}}},
+    {{{   0, -38, -38},     0,{    0,    0},{   0, -89, -89,   0}}},
+    {{{   0,   0, -55},     0,{    0,    0},{   0,   0,-127,   0}}},
+    {{{ -21, -36, -36},     0,{    0,    0},{ -48, -82, -82,   0}}},
+    {{{ -21,   0, -50},     0,{    0,    0},{ -48,   0,-117,   0}}},
+    {{{ -38, -27, -27},     0,{    0,    0},{ -90, -63, -63,   0}}},
+    {{{ -38,   0, -38},     0,{    0,    0},{ -90,   0, -89,   0}}},
+    {{{ -50, -14, -14},     0,{    0,    0},{-117, -34, -34,   0}}},
+    {{{ -50,   0, -21},     0,{    0,    0},{-117,   0, -48,   0}}},
+    {{{ -55,   0,   0},     0,{    0,    0},{-127,   0,   0,   0}}},
+    {{{  50, -21,   0},     0,{    0,    0},{ 117, -48,   0,   0}}},
+    {{{  50, -14, -14},     0,{    0,    0},{ 117, -34, -34,   0}}},
+    {{{  55,   0,   0},     0,{    0,    0},{ 127,   0,   0,   0}}},
+    {{{  38, -38,   0},     0,{    0,    0},{  90, -89,   0,   0}}},
+    {{{  38, -27, -27},     0,{    0,    0},{  90, -63, -63,   0}}},
+    {{{  21, -50,   0},     0,{    0,    0},{  48,-117,   0,   0}}},
+    {{{  21, -36, -36},     0,{    0,    0},{  48, -82, -82,   0}}},
+    {{{   0, -55,   0},     0,{    0,    0},{   0,-127,   0,   0}}},
+    {{{   0, -38, -38},     0,{    0,    0},{   0, -89, -89,   0}}},
+    {{{ -21, -50,   0},     0,{    0,    0},{ -48,-117,   0,   0}}},
+    {{{ -21, -36, -36},     0,{    0,    0},{ -48, -82, -82,   0}}},
+    {{{ -38, -38,   0},     0,{    0,    0},{ -90, -89,   0,   0}}},
+    {{{ -38, -27, -27},     0,{    0,    0},{ -90, -63, -63,   0}}},
+    {{{ -50, -21,   0},     0,{    0,    0},{-117, -48,   0,   0}}},
+    {{{ -50, -14, -14},     0,{    0,    0},{-117, -34, -34,   0}}},
+    {{{ -55,   0,   0},     0,{    0,    0},{-127,   0,   0,   0}}},
+    {{{  50, -14,  14},     0,{    0,    0},{ 117, -34,  34,   0}}},
+    {{{  50, -21,   0},     0,{    0,    0},{ 117, -48,   0,   0}}},
+    {{{  55,   0,   0},     0,{    0,    0},{ 127,   0,   0,   0}}},
+    {{{  38, -27,  27},     0,{    0,    0},{  90, -63,  63,   0}}},
+    {{{  38, -38,   0},     0,{    0,    0},{  90, -89,   0,   0}}},
+    {{{  21, -36,  36},     0,{    0,    0},{  48, -82,  82,   0}}},
+    {{{  21, -50,   0},     0,{    0,    0},{  48,-117,   0,   0}}},
+    {{{   0, -38,  38},     0,{    0,    0},{   0, -89,  89,   0}}},
+    {{{   0, -55,   0},     0,{    0,    0},{   0,-127,   0,   0}}},
+    {{{ -21, -36,  36},     0,{    0,    0},{ -48, -82,  82,   0}}},
+    {{{ -21, -50,   0},     0,{    0,    0},{ -48,-117,   0,   0}}},
+    {{{ -38, -27,  27},     0,{    0,    0},{ -90, -63,  63,   0}}},
+    {{{ -38, -38,   0},     0,{    0,    0},{ -90, -89,   0,   0}}},
+    {{{ -50, -14,  14},     0,{    0,    0},{-117, -34,  34,   0}}},
+    {{{ -50, -21,   0},     0,{    0,    0},{-117, -48,   0,   0}}},
+    {{{ -55,   0,   0},     0,{    0,    0},{-127,   0,   0,   0}}},
+    {{{  50,   0,  21},     0,{    0,    0},{ 117,   0,  48,   0}}},
+    {{{  50, -14,  14},     0,{    0,    0},{ 117, -34,  34,   0}}},
+    {{{  55,   0,   0},     0,{    0,    0},{ 127,   0,   0,   0}}},
+    {{{  38,   0,  38},     0,{    0,    0},{  90,   0,  89,   0}}},
+    {{{  38, -27,  27},     0,{    0,    0},{  90, -63,  63,   0}}},
+    {{{  21,   0,  50},     0,{    0,    0},{  48,   0, 117,   0}}},
+    {{{  21, -36,  36},     0,{    0,    0},{  48, -82,  82,   0}}},
+    {{{   0,   0,  55},     0,{    0,    0},{   0,   0, 127,   0}}},
+    {{{   0, -38,  38},     0,{    0,    0},{   0, -89,  89,   0}}},
+    {{{ -21,   0,  50},     0,{    0,    0},{ -48,   0, 117,   0}}},
+    {{{ -21, -36,  36},     0,{    0,    0},{ -48, -82,  82,   0}}},
+    {{{ -38,   0,  38},     0,{    0,    0},{ -90,   0,  89,   0}}},
+    {{{ -38, -27,  27},     0,{    0,    0},{ -90, -63,  63,   0}}},
+    {{{ -50,   0,  21},     0,{    0,    0},{-117,   0,  48,   0}}},
+    {{{ -50, -14,  14},     0,{    0,    0},{-117, -34,  34,   0}}},
+    {{{ -55,   0,   0},     0,{    0,    0},{-127,   0,   0,   0}}},
+};
+static Vtx vtx_motos_head_0[] = {
+    {{{  51, -53, -30},     0,{   -8,  990},{  92, 175, 225, 255}}},
+    {{{  51,   0, -62},     0,{  964,  990},{  93, 243, 171, 255}}},
+    {{{  73,   0,   0},     0,{  478, 1932},{ 126,   0,   0, 255}}},
+    {{{  51, -53,  31},     0,{    0,  990},{  92, 188,  53, 255}}},
+    {{{  51, -53, -30},     0,{  970,  990},{  92, 175, 225, 255}}},
+    {{{  73,   0,   0},     0,{  468,   18},{ 126,   0,   0, 255}}},
+    {{{  51,   0, -62},     0,{    0,  990},{  93, 243, 171, 255}}},
+    {{{  51,  55, -30},     0,{  956,  990},{  93,  67, 203, 255}}},
+    {{{  73,   0,   0},     0,{  462,   30},{ 126,   0,   0, 255}}},
+    {{{  51,  55, -30},     0,{    0,  990},{  93,  67, 203, 255}}},
+    {{{  51,  55,  31},     0,{  964,  990},{  93,  80,  31, 255}}},
+    {{{  73,   0,   0},     0,{  466,   22},{ 126,   0,   0, 255}}},
+    {{{  51,   0,  63},     0,{    0,  990},{  93,  12,  85, 255}}},
+    {{{  51, -53,  31},     0,{  968,  990},{  92, 188,  53, 255}}},
+    {{{  73,   0,   0},     0,{  468,   20},{ 126,   0,   0, 255}}},
+    {{{  51,  55,  31},     0,{    0,  990},{  93,  80,  31, 255}}},
+    {{{  51,   0,  63},     0,{  968,  990},{  93,  12,  85, 255}}},
+    {{{  73,   0,   0},     0,{  468,   18},{ 126,   0,   0, 255}}},
+};
+
+static Vtx vtx_motos_head_1[] = {
+    {{{   0,  81, -46},     0,{    0,  990},{  64, 103, 221, 255}}},
+    {{{  51,  55,  31},     0,{ 1660,  -10},{  93,  80,  31, 255}}},
+    {{{  51,  55, -30},     0,{  280,  -10},{  93,  67, 203, 255}}},
+    {{{   0,  81,  47},     0,{ 2012,  990},{  64,  82,  71, 255}}},
+};
+
+static Vtx vtx_motos_head_2[] = {
+    {{{   0, -79, -46},     0,{    0,  990},{  64, 173, 185, 255}}},
+    {{{  51,   0, -62},     0,{ 1668,  -34},{  93, 243, 171, 255}}},
+    {{{  51, -53, -30},     0,{  288,  -34},{  92, 175, 225, 255}}},
+    {{{   0, -79,  47},     0,{    0,  990},{  64, 153,  35, 255}}},
+    {{{  51, -53, -30},     0,{ 1680,  -26},{  92, 175, 225, 255}}},
+    {{{  51, -53,  31},     0,{  296,  -26},{  92, 188,  53, 255}}},
+    {{{   0, -79, -46},     0,{ 2012,  990},{  64, 173, 185, 255}}},
+    {{{   0,   0, -92},     0,{    0,  990},{  63,  20, 149, 255}}},
+    {{{  51,  55, -30},     0,{ 1636,  -30},{  93,  67, 203, 255}}},
+    {{{  51,   0, -62},     0,{  256,  -30},{  93, 243, 171, 255}}},
+    {{{   0,  81, -46},     0,{ 2012,  990},{  64, 103, 221, 255}}},
+    {{{   0,   0,  93},     0,{    0,  990},{  64, 235, 107, 255}}},
+    {{{  51, -53,  31},     0,{ 1668,  -22},{  92, 188,  53, 255}}},
+    {{{  51,   0,  63},     0,{  288,  -24},{  93,  12,  85, 255}}},
+    {{{   0, -79,  47},     0,{ 2008,  990},{  64, 153,  35, 255}}},
+    {{{   0,  81,  47},     0,{    0,  990},{  64,  82,  71, 255}}},
+    {{{   0,   0,  93},     0,{ 2012,  990},{  64, 235, 107, 255}}},
+    {{{  51,   0,  63},     0,{ 1700,  -28},{  93,  12,  85, 255}}},
+    {{{   0, -79, -46},     0,{    0,  990},{  64, 173, 185, 255}}},
+    {{{   0,   0, -92},     0,{ 2012,  990},{  63,  20, 149, 255}}},
+    {{{  51,   0, -62},     0,{ 1668,  -34},{  93, 243, 171, 255}}},
+    {{{  51,  55,  31},     0,{  320,  -28},{  93,  80,  31, 255}}},
+};
+static Vtx vtx_motos_basedata_A11[]={
+    {{{  54,-184, -54},     0,{    0,    0},{  34,-117, -34,   0}}},
+    {{{  76,-184,   0},     0,{    0,    0},{  48,-117,   0,   0}}},
+    {{{   0,-200,   0},     0,{    0,    0},{   0,-127,   0,   0}}},
+    {{{ 100,-141,-100},     0,{    0,    0},{  63, -90, -63,   0}}},
+    {{{ 141,-141,   0},     0,{    0,    0},{  89, -90,   0,   0}}},
+    {{{ 130, -76,-130},     0,{    0,    0},{  82, -48, -82,   0}}},
+    {{{ 184, -76,   0},     0,{    0,    0},{ 117, -48,   0,   0}}},
+    {{{ 141,   0,-141},     0,{    0,    0},{  89,   0, -89,   0}}},
+    {{{ 200,   0,   0},     0,{    0,    0},{ 127,   0,   0,   0}}},
+    {{{ 130,  76,-130},     0,{    0,    0},{  82,  48, -82,   0}}},
+    {{{ 184,  76,   0},     0,{    0,    0},{ 117,  48,   0,   0}}},
+    {{{ 100, 141,-100},     0,{    0,    0},{  63,  90, -63,   0}}},
+    {{{ 141, 141,   0},     0,{    0,    0},{  89,  90,   0,   0}}},
+    {{{  54, 184, -54},     0,{    0,    0},{  34, 117, -34,   0}}},
+    {{{  76, 184,   0},     0,{    0,    0},{  48, 117,   0,   0}}},
+    {{{   0, 200,   0},     0,{    0,    0},{   0, 127,   0,   0}}},
+    {{{   0,-184, -76},     0,{    0,    0},{   0,-117, -48,   0}}},
+    {{{  54,-184, -54},     0,{    0,    0},{  34,-117, -34,   0}}},
+    {{{   0,-200,   0},     0,{    0,    0},{   0,-127,   0,   0}}},
+    {{{   0,-141,-141},     0,{    0,    0},{   0, -90, -89,   0}}},
+    {{{ 100,-141,-100},     0,{    0,    0},{  63, -90, -63,   0}}},
+    {{{   0, -76,-184},     0,{    0,    0},{   0, -48,-117,   0}}},
+    {{{ 130, -76,-130},     0,{    0,    0},{  82, -48, -82,   0}}},
+    {{{   0,   0,-200},     0,{    0,    0},{   0,   0,-127,   0}}},
+    {{{ 141,   0,-141},     0,{    0,    0},{  89,   0, -89,   0}}},
+    {{{   0,  76,-184},     0,{    0,    0},{   0,  48,-117,   0}}},
+    {{{ 130,  76,-130},     0,{    0,    0},{  82,  48, -82,   0}}},
+    {{{   0, 141,-141},     0,{    0,    0},{   0,  90, -89,   0}}},
+    {{{ 100, 141,-100},     0,{    0,    0},{  63,  90, -63,   0}}},
+    {{{   0, 184, -76},     0,{    0,    0},{   0, 117, -48,   0}}},
+    {{{  54, 184, -54},     0,{    0,    0},{  34, 117, -34,   0}}},
+    {{{   0, 200,   0},     0,{    0,    0},{   0, 127,   0,   0}}},
+    {{{ -54,-184, -54},     0,{    0,    0},{ -34,-117, -34,   0}}},
+    {{{   0,-184, -76},     0,{    0,    0},{   0,-117, -48,   0}}},
+    {{{   0,-200,   0},     0,{    0,    0},{   0,-127,   0,   0}}},
+    {{{-100,-141,-100},     0,{    0,    0},{ -63, -90, -63,   0}}},
+    {{{   0,-141,-141},     0,{    0,    0},{   0, -90, -89,   0}}},
+    {{{-130, -76,-130},     0,{    0,    0},{ -82, -48, -82,   0}}},
+    {{{   0, -76,-184},     0,{    0,    0},{   0, -48,-117,   0}}},
+    {{{-141,   0,-141},     0,{    0,    0},{ -89,   0, -89,   0}}},
+    {{{   0,   0,-200},     0,{    0,    0},{   0,   0,-127,   0}}},
+    {{{-130,  76,-130},     0,{    0,    0},{ -82,  48, -82,   0}}},
+    {{{   0,  76,-184},     0,{    0,    0},{   0,  48,-117,   0}}},
+    {{{-100, 141,-100},     0,{    0,    0},{ -63,  90, -63,   0}}},
+    {{{   0, 141,-141},     0,{    0,    0},{   0,  90, -89,   0}}},
+    {{{ -54, 184, -54},     0,{    0,    0},{ -34, 117, -34,   0}}},
+    {{{   0, 184, -76},     0,{    0,    0},{   0, 117, -48,   0}}},
+    {{{   0, 200,   0},     0,{    0,    0},{   0, 127,   0,   0}}},
+    {{{ -76,-184,   0},     0,{    0,    0},{ -48,-117,   0,   0}}},
+    {{{ -54,-184, -54},     0,{    0,    0},{ -34,-117, -34,   0}}},
+    {{{   0,-200,   0},     0,{    0,    0},{   0,-127,   0,   0}}},
+    {{{-141,-141,   0},     0,{    0,    0},{ -89, -90,   0,   0}}},
+    {{{-100,-141,-100},     0,{    0,    0},{ -63, -90, -63,   0}}},
+    {{{-184, -76,   0},     0,{    0,    0},{-117, -48,   0,   0}}},
+    {{{-130, -76,-130},     0,{    0,    0},{ -82, -48, -82,   0}}},
+    {{{-200,   0,   0},     0,{    0,    0},{-127,   0,   0,   0}}},
+    {{{-141,   0,-141},     0,{    0,    0},{ -89,   0, -89,   0}}},
+    {{{-184,  76,   0},     0,{    0,    0},{-117,  48,   0,   0}}},
+    {{{-130,  76,-130},     0,{    0,    0},{ -82,  48, -82,   0}}},
+    {{{-141, 141,   0},     0,{    0,    0},{ -89,  90,   0,   0}}},
+    {{{-100, 141,-100},     0,{    0,    0},{ -63,  90, -63,   0}}},
+    {{{ -76, 184,   0},     0,{    0,    0},{ -48, 117,   0,   0}}},
+    {{{ -54, 184, -54},     0,{    0,    0},{ -34, 117, -34,   0}}},
+    {{{   0, 200,   0},     0,{    0,    0},{   0, 127,   0,   0}}},
+    {{{ -54,-184,  54},     0,{    0,    0},{ -34,-117,  34,   0}}},
+    {{{ -76,-184,   0},     0,{    0,    0},{ -48,-117,   0,   0}}},
+    {{{   0,-200,   0},     0,{    0,    0},{   0,-127,   0,   0}}},
+    {{{-100,-141, 100},     0,{    0,    0},{ -63, -90,  63,   0}}},
+    {{{-141,-141,   0},     0,{    0,    0},{ -89, -90,   0,   0}}},
+    {{{-130, -76, 130},     0,{    0,    0},{ -82, -48,  82,   0}}},
+    {{{-184, -76,   0},     0,{    0,    0},{-117, -48,   0,   0}}},
+    {{{-141,   0, 141},     0,{    0,    0},{ -89,   0,  89,   0}}},
+    {{{-200,   0,   0},     0,{    0,    0},{-127,   0,   0,   0}}},
+    {{{-130,  76, 130},     0,{    0,    0},{ -82,  48,  82,   0}}},
+    {{{-184,  76,   0},     0,{    0,    0},{-117,  48,   0,   0}}},
+    {{{-100, 141, 100},     0,{    0,    0},{ -63,  90,  63,   0}}},
+    {{{-141, 141,   0},     0,{    0,    0},{ -89,  90,   0,   0}}},
+    {{{ -54, 184,  54},     0,{    0,    0},{ -34, 117,  34,   0}}},
+    {{{ -76, 184,   0},     0,{    0,    0},{ -48, 117,   0,   0}}},
+    {{{   0, 200,   0},     0,{    0,    0},{   0, 127,   0,   0}}},
+    {{{   0,-184,  76},     0,{    0,    0},{   0,-117,  48,   0}}},
+    {{{ -54,-184,  54},     0,{    0,    0},{ -34,-117,  34,   0}}},
+    {{{   0,-200,   0},     0,{    0,    0},{   0,-127,   0,   0}}},
+    {{{   0,-141, 141},     0,{    0,    0},{   0, -90,  89,   0}}},
+    {{{-100,-141, 100},     0,{    0,    0},{ -63, -90,  63,   0}}},
+    {{{   0, -76, 184},     0,{    0,    0},{   0, -48, 117,   0}}},
+    {{{-130, -76, 130},     0,{    0,    0},{ -82, -48,  82,   0}}},
+    {{{   0,   0, 200},     0,{    0,    0},{   0,   0, 127,   0}}},
+    {{{-141,   0, 141},     0,{    0,    0},{ -89,   0,  89,   0}}},
+    {{{   0,  76, 184},     0,{    0,    0},{   0,  48, 117,   0}}},
+    {{{-130,  76, 130},     0,{    0,    0},{ -82,  48,  82,   0}}},
+    {{{   0, 141, 141},     0,{    0,    0},{   0,  90,  89,   0}}},
+    {{{-100, 141, 100},     0,{    0,    0},{ -63,  90,  63,   0}}},
+    {{{   0, 184,  76},     0,{    0,    0},{   0, 117,  48,   0}}},
+    {{{ -54, 184,  54},     0,{    0,    0},{ -34, 117,  34,   0}}},
+    {{{   0, 200,   0},     0,{    0,    0},{   0, 127,   0,   0}}},
+    {{{  54,-184,  54},     0,{    0,    0},{  34,-117,  34,   0}}},
+    {{{   0,-184,  76},     0,{    0,    0},{   0,-117,  48,   0}}},
+    {{{   0,-200,   0},     0,{    0,    0},{   0,-127,   0,   0}}},
+    {{{ 100,-141, 100},     0,{    0,    0},{  63, -90,  63,   0}}},
+    {{{   0,-141, 141},     0,{    0,    0},{   0, -90,  89,   0}}},
+    {{{ 130, -76, 130},     0,{    0,    0},{  82, -48,  82,   0}}},
+    {{{   0, -76, 184},     0,{    0,    0},{   0, -48, 117,   0}}},
+    {{{ 141,   0, 141},     0,{    0,    0},{  89,   0,  89,   0}}},
+    {{{   0,   0, 200},     0,{    0,    0},{   0,   0, 127,   0}}},
+    {{{ 130,  76, 130},     0,{    0,    0},{  82,  48,  82,   0}}},
+    {{{   0,  76, 184},     0,{    0,    0},{   0,  48, 117,   0}}},
+    {{{ 100, 141, 100},     0,{    0,    0},{  63,  90,  63,   0}}},
+    {{{   0, 141, 141},     0,{    0,    0},{   0,  90,  89,   0}}},
+    {{{  54, 184,  54},     0,{    0,    0},{  34, 117,  34,   0}}},
+    {{{   0, 184,  76},     0,{    0,    0},{   0, 117,  48,   0}}},
+    {{{   0, 200,   0},     0,{    0,    0},{   0, 127,   0,   0}}},
+    {{{  76,-184,   0},     0,{    0,    0},{  48,-117,   0,   0}}},
+    {{{  54,-184,  54},     0,{    0,    0},{  34,-117,  34,   0}}},
+    {{{   0,-200,   0},     0,{    0,    0},{   0,-127,   0,   0}}},
+    {{{ 141,-141,   0},     0,{    0,    0},{  89, -90,   0,   0}}},
+    {{{ 100,-141, 100},     0,{    0,    0},{  63, -90,  63,   0}}},
+    {{{ 184, -76,   0},     0,{    0,    0},{ 117, -48,   0,   0}}},
+    {{{ 130, -76, 130},     0,{    0,    0},{  82, -48,  82,   0}}},
+    {{{ 200,   0,   0},     0,{    0,    0},{ 127,   0,   0,   0}}},
+    {{{ 141,   0, 141},     0,{    0,    0},{  89,   0,  89,   0}}},
+    {{{ 184,  76,   0},     0,{    0,    0},{ 117,  48,   0,   0}}},
+    {{{ 130,  76, 130},     0,{    0,    0},{  82,  48,  82,   0}}},
+    {{{ 141, 141,   0},     0,{    0,    0},{  89,  90,   0,   0}}},
+    {{{ 100, 141, 100},     0,{    0,    0},{  63,  90,  63,   0}}},
+    {{{  76, 184,   0},     0,{    0,    0},{  48, 117,   0,   0}}},
+    {{{  54, 184,  54},     0,{    0,    0},{  34, 117,  34,   0}}},
+    {{{   0, 200,   0},     0,{    0,    0},{   0, 127,   0,   0}}},
+};
+const Gfx RCP_motos_basedata_A0[]={
+	gsSPLight((&light_motos_basedata_A[0].l[0]),1),
+	gsSPLight((&light_motos_basedata_A[0].a),2),
+	gsSPVertex(&vtx_motos_basedata_A0[0],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(3,4,2,0),
+	gsSP1Triangle(3,2,1,0),
+	gsSP1Triangle(5,6,4,0),
+	gsSP1Triangle(5,4,3,0),
+	gsSP1Triangle(7,8,6,0),
+	gsSP1Triangle(7,6,5,0),
+	gsSP1Triangle(9,10,8,0),
+	gsSP1Triangle(9,8,7,0),
+	gsSP1Triangle(11,12,10,0),
+	gsSP1Triangle(11,10,9,0),
+	gsSP1Triangle(13,14,12,0),
+	gsSP1Triangle(13,12,11,0),
+	gsSP1Triangle(15,14,13,0),
+	gsSPVertex(&vtx_motos_basedata_A0[16],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(3,4,2,0),
+	gsSP1Triangle(3,2,1,0),
+	gsSP1Triangle(5,6,4,0),
+	gsSP1Triangle(5,4,3,0),
+	gsSP1Triangle(7,8,6,0),
+	gsSP1Triangle(7,6,5,0),
+	gsSP1Triangle(9,10,8,0),
+	gsSP1Triangle(9,8,7,0),
+	gsSP1Triangle(11,12,10,0),
+	gsSP1Triangle(11,10,9,0),
+	gsSP1Triangle(13,14,12,0),
+	gsSP1Triangle(13,12,11,0),
+	gsSP1Triangle(15,14,13,0),
+	gsSPVertex(&vtx_motos_basedata_A0[32],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(3,4,2,0),
+	gsSP1Triangle(3,2,1,0),
+	gsSP1Triangle(5,6,4,0),
+	gsSP1Triangle(5,4,3,0),
+	gsSP1Triangle(7,8,6,0),
+	gsSP1Triangle(7,6,5,0),
+	gsSP1Triangle(9,10,8,0),
+	gsSP1Triangle(9,8,7,0),
+	gsSP1Triangle(11,12,10,0),
+	gsSP1Triangle(11,10,9,0),
+	gsSP1Triangle(13,14,12,0),
+	gsSP1Triangle(13,12,11,0),
+	gsSP1Triangle(15,14,13,0),
+	gsSPVertex(&vtx_motos_basedata_A0[48],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(3,4,2,0),
+	gsSP1Triangle(3,2,1,0),
+	gsSP1Triangle(5,6,4,0),
+	gsSP1Triangle(5,4,3,0),
+	gsSP1Triangle(7,8,6,0),
+	gsSP1Triangle(7,6,5,0),
+	gsSP1Triangle(9,10,8,0),
+	gsSP1Triangle(9,8,7,0),
+	gsSP1Triangle(11,12,10,0),
+	gsSP1Triangle(11,10,9,0),
+	gsSP1Triangle(13,14,12,0),
+	gsSP1Triangle(13,12,11,0),
+	gsSP1Triangle(15,14,13,0),
+	gsSPVertex(&vtx_motos_basedata_A0[64],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(3,4,2,0),
+	gsSP1Triangle(3,2,1,0),
+	gsSP1Triangle(5,6,4,0),
+	gsSP1Triangle(5,4,3,0),
+	gsSP1Triangle(7,8,6,0),
+	gsSP1Triangle(7,6,5,0),
+	gsSP1Triangle(9,10,8,0),
+	gsSP1Triangle(9,8,7,0),
+	gsSP1Triangle(11,12,10,0),
+	gsSP1Triangle(11,10,9,0),
+	gsSP1Triangle(13,14,12,0),
+	gsSP1Triangle(13,12,11,0),
+	gsSP1Triangle(15,14,13,0),
+	gsSPVertex(&vtx_motos_basedata_A0[80],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(3,4,2,0),
+	gsSP1Triangle(3,2,1,0),
+	gsSP1Triangle(5,6,4,0),
+	gsSP1Triangle(5,4,3,0),
+	gsSP1Triangle(7,8,6,0),
+	gsSP1Triangle(7,6,5,0),
+	gsSP1Triangle(9,10,8,0),
+	gsSP1Triangle(9,8,7,0),
+	gsSP1Triangle(11,12,10,0),
+	gsSP1Triangle(11,10,9,0),
+	gsSP1Triangle(13,14,12,0),
+	gsSP1Triangle(13,12,11,0),
+	gsSP1Triangle(15,14,13,0),
+	gsSPVertex(&vtx_motos_basedata_A0[96],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(3,4,2,0),
+	gsSP1Triangle(3,2,1,0),
+	gsSP1Triangle(5,6,4,0),
+	gsSP1Triangle(5,4,3,0),
+	gsSP1Triangle(7,8,6,0),
+	gsSP1Triangle(7,6,5,0),
+	gsSP1Triangle(9,10,8,0),
+	gsSP1Triangle(9,8,7,0),
+	gsSP1Triangle(11,12,10,0),
+	gsSP1Triangle(11,10,9,0),
+	gsSP1Triangle(13,14,12,0),
+	gsSP1Triangle(13,12,11,0),
+	gsSP1Triangle(15,14,13,0),
+	gsSPVertex(&vtx_motos_basedata_A0[112],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(3,4,2,0),
+	gsSP1Triangle(3,2,1,0),
+	gsSP1Triangle(5,6,4,0),
+	gsSP1Triangle(5,4,3,0),
+	gsSP1Triangle(7,8,6,0),
+	gsSP1Triangle(7,6,5,0),
+	gsSP1Triangle(9,10,8,0),
+	gsSP1Triangle(9,8,7,0),
+	gsSP1Triangle(11,12,10,0),
+	gsSP1Triangle(11,10,9,0),
+	gsSP1Triangle(13,14,12,0),
+	gsSP1Triangle(13,12,11,0),
+	gsSP1Triangle(15,14,13,0),
+	gsSPEndDisplayList()
+};
+const Gfx gfx_motos_LhandB_0[] = {
+	gs_Tani_LoadTextureImage2(motos_skinC_txt, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0, 7),
+	gsSPLight((&light_motos_basedata_A[5].l[0]),1 ),
+	gsSPLight((&light_motos_basedata_A[5].a   ),2 ),
+	gsSPVertex(&vtx_motos_LhandB_0[0], 13, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSP1Triangle( 3, 4, 5, 0),
+	gsSP1Triangle( 6, 7, 8, 0),
+	gsSP1Triangle( 6, 9, 7, 0),
+	gsSP1Triangle(10,11,12, 0),
+	gsSPEndDisplayList() 
+};
+
+const Gfx gfx_motos_LhandB_1[] = {
+	gs_Tani_LoadTextureImage2(motos_skinD_txt, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0, 7),
+	gsSPVertex(&vtx_motos_LhandB_1[0],  3, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSPEndDisplayList() 
+};
+
+const Gfx RCP_motos_LhandB[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineMode(G_CC_MODULATERGB, G_CC_MODULATERGB),
+	gsDPSetTile(G_IM_FMT_RGBA,G_IM_SIZ_16b, 0, 0, 7, 0,  0,0,0, 0,0,0),
+
+	gsSPTexture(0xffff,0xffff, 0, 0, G_ON),
+
+	gs_Tani_SetUpTileDescrip(G_IM_FMT_RGBA,G_IM_SIZ_16b, 32, 32,  0, 0, G_TX_WRAP|G_TX_NOMIRROR, 5, G_TX_NOLOD, G_TX_WRAP|G_TX_NOMIRROR, 5, G_TX_NOLOD),
+
+		gsSPDisplayList(gfx_motos_LhandB_0),
+		gsSPDisplayList(gfx_motos_LhandB_1),
+
+	gsSPTexture(0xffff, 0xffff, 0, 0, G_OFF),
+
+	gsDPPipeSync(),
+	gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+	gsSPEndDisplayList() 
+};
+
+const Gfx gfx_motos_LhandA_0[] = {
+	gs_Tani_LoadTextureImage2(motos_skinD_txt, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0, 7),
+	gsSPLight((&light_motos_basedata_A[5].l[0]),1 ),
+	gsSPLight((&light_motos_basedata_A[5].a   ),2 ),
+	gsSPVertex(&vtx_motos_LhandA_0[0],  3, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSPEndDisplayList() 
+};
+
+const Gfx gfx_motos_LhandA_1[] = {
+	gs_Tani_LoadTextureImage2(motos_skinC_txt, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0, 7),
+	gsSPVertex(&vtx_motos_LhandA_1[0], 13, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSP1Triangle( 3, 4, 5, 0),
+	gsSP1Triangle( 4, 6, 5, 0),
+	gsSP1Triangle( 7, 8, 9, 0),
+	gsSP1Triangle(10,11,12, 0),
+	gsSPEndDisplayList() 
+};
+
+const Gfx RCP_motos_LhandA[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineMode(G_CC_MODULATERGB, G_CC_MODULATERGB),
+	gsDPSetTile(G_IM_FMT_RGBA,G_IM_SIZ_16b, 0, 0, 7, 0,  0,0,0, 0,0,0),
+
+	gsSPTexture(0xffff,0xffff, 0, 0, G_ON),
+
+	gs_Tani_SetUpTileDescrip(G_IM_FMT_RGBA,G_IM_SIZ_16b, 32, 32,  0, 0, G_TX_WRAP|G_TX_NOMIRROR, 5, G_TX_NOLOD, G_TX_WRAP|G_TX_NOMIRROR, 5, G_TX_NOLOD),
+
+		gsSPDisplayList(gfx_motos_LhandA_0),
+		gsSPDisplayList(gfx_motos_LhandA_1),
+
+	gsSPTexture(0xffff, 0xffff, 0, 0, G_OFF),
+
+	gsDPPipeSync(),
+	gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+	gsSPEndDisplayList() 
+};
+
+const Gfx RCP_motos_basedata_A3[]={
+	gsSPLight((&light_motos_basedata_A[0].l[0]),1),
+	gsSPLight((&light_motos_basedata_A[0].a),2),
+	gsSPVertex(&vtx_motos_basedata_A3[0],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPVertex(&vtx_motos_basedata_A3[16],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPVertex(&vtx_motos_basedata_A3[32],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPVertex(&vtx_motos_basedata_A3[48],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPVertex(&vtx_motos_basedata_A3[64],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPVertex(&vtx_motos_basedata_A3[80],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPVertex(&vtx_motos_basedata_A3[96],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPVertex(&vtx_motos_basedata_A3[112],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPEndDisplayList()
+};
+const Gfx gfx_motos_RhandA_0[] = {
+	gs_Tani_LoadTextureImage2(motos_skinC_txt, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0, 7),
+	gsSPLight((&light_motos_basedata_A[5].l[0]),1 ),
+	gsSPLight((&light_motos_basedata_A[5].a   ),2 ),
+	gsSPVertex(&vtx_motos_RhandA_0[0], 13, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSP1Triangle( 3, 4, 5, 0),
+	gsSP1Triangle( 6, 7, 8, 0),
+	gsSP1Triangle( 9,10,11, 0),
+	gsSP1Triangle( 9,12,10, 0),
+	gsSPEndDisplayList() 
+};
+
+const Gfx gfx_motos_RhandA_1[] = {
+	gs_Tani_LoadTextureImage2(motos_skinD_txt, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0, 7),
+	gsSPVertex(&vtx_motos_RhandA_1[0],  3, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSPEndDisplayList() 
+};
+
+const Gfx RCP_motos_RhandA[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineMode(G_CC_MODULATERGB, G_CC_MODULATERGB),
+	gsDPSetTile(G_IM_FMT_RGBA,G_IM_SIZ_16b, 0, 0, 7, 0,  0,0,0, 0,0,0),
+
+	gsSPTexture(0xffff,0xffff, 0, 0, G_ON),
+
+	gs_Tani_SetUpTileDescrip(G_IM_FMT_RGBA,G_IM_SIZ_16b, 32, 32,  0, 0, G_TX_WRAP|G_TX_NOMIRROR, 5, G_TX_NOLOD, G_TX_WRAP|G_TX_NOMIRROR, 5, G_TX_NOLOD),
+
+		gsSPDisplayList(gfx_motos_RhandA_0),
+		gsSPDisplayList(gfx_motos_RhandA_1),
+
+	gsSPTexture(0xffff, 0xffff, 0, 0, G_OFF),
+
+	gsDPPipeSync(),
+	gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+	gsSPEndDisplayList() 
+};
+
+const Gfx gfx_motos_RhandB_0[] = {
+	gs_Tani_LoadTextureImage2(motos_skinD_txt, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0, 7),
+
+	gsSPLight((&light_motos_basedata_A[5].l[0]),1 ),
+	gsSPLight((&light_motos_basedata_A[5].a   ),2 ),
+
+	gsSPVertex(&vtx_motos_RhandB_0[0],  3, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSPEndDisplayList() 
+};
+
+const Gfx gfx_motos_RhandB_1[] = {
+	gs_Tani_LoadTextureImage2(motos_skinC_txt, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0, 7),
+	gsSPVertex(&vtx_motos_RhandB_1[0], 13, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSP1Triangle( 3, 4, 5, 0),
+	gsSP1Triangle( 3, 6, 4, 0),
+	gsSP1Triangle( 7, 8, 9, 0),
+	gsSP1Triangle(10,11,12, 0),
+	gsSPEndDisplayList() 
+};
+
+const Gfx RCP_motos_RhandB[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineMode(G_CC_MODULATERGB, G_CC_MODULATERGB),
+	gsDPSetTile(G_IM_FMT_RGBA,G_IM_SIZ_16b, 0, 0, 7, 0,  0,0,0, 0,0,0),
+
+	gsSPTexture(0xffff,0xffff, 0, 0, G_ON),
+
+
+	gs_Tani_SetUpTileDescrip(G_IM_FMT_RGBA,G_IM_SIZ_16b, 32, 32,  0, 0, G_TX_WRAP|G_TX_NOMIRROR, 5, G_TX_NOLOD, G_TX_WRAP|G_TX_NOMIRROR, 5, G_TX_NOLOD),
+
+		gsSPDisplayList(gfx_motos_RhandB_0),
+		gsSPDisplayList(gfx_motos_RhandB_1),
+
+	gsSPTexture(0xffff, 0xffff, 0, 0, G_OFF),
+
+	gsDPPipeSync(),
+	gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+	gsSPEndDisplayList() 
+};
+
+const Gfx gfx_motos_Lfoot_0[] = {
+	gs_Tani_LoadTextureImage2(motos_skinD_txt, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0, 7),
+	gsSPLight((&light_motos_basedata_A[5].l[0]),1 ),
+	gsSPLight((&light_motos_basedata_A[5].a   ),2 ),
+	gsSPVertex(&vtx_motos_Lfoot[0],  6, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSP1Triangle( 0, 3, 1, 0),
+	gsSP1Triangle( 0, 4, 3, 0),
+	gsSP1Triangle( 0, 2, 5, 0),
+	gsSPEndDisplayList() 
+};
+
+const Gfx gfx_motos_Lfoot_1[] = {
+	gs_Tani_LoadTextureImage2(motos_skinC_txt, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0, 7),
+	gsSPVertex(&vtx_motos_Lfoot[6], 15, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSP1Triangle( 3, 4, 5, 0),
+	gsSP1Triangle( 6, 7, 8, 0),
+	gsSP1Triangle( 9,10,11, 0),
+	gsSP1Triangle(12,13,14, 0),
+	gsSPVertex(&vtx_motos_Lfoot[21],  7, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSP1Triangle( 3, 4, 5, 0),
+	gsSP1Triangle( 0, 6, 1, 0),
+	gsSPEndDisplayList() 
+};
+
+const Gfx gfx_motos_Lfoot_2[] = {
+	gs_Tani_LoadTextureImage2(motos_skinA_txt, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0, 7),
+	gsSPVertex(&vtx_motos_Lfoot[28], 10, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSP1Triangle( 0, 2, 3, 0),
+	gsSP1Triangle( 4, 5, 6, 0),
+	gsSP1Triangle( 7, 8, 9, 0),
+	gsSPEndDisplayList() 
+};
+
+const Gfx RCP_motos_Lfoot[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineMode(G_CC_MODULATERGB, G_CC_MODULATERGB),
+	gsDPSetTile(G_IM_FMT_RGBA,G_IM_SIZ_16b, 0, 0, 7, 0,  0,0,0, 0,0,0),
+
+	gsSPTexture(0xffff,0xffff, 0, 0, G_ON),
+
+	gs_Tani_SetUpTileDescrip(G_IM_FMT_RGBA,G_IM_SIZ_16b, 32, 32,  0, 0, G_TX_WRAP|G_TX_NOMIRROR, 5, G_TX_NOLOD, G_TX_WRAP|G_TX_NOMIRROR, 5, G_TX_NOLOD),
+
+		gsSPDisplayList(gfx_motos_Lfoot_0),
+		gsSPDisplayList(gfx_motos_Lfoot_1),
+		gsSPDisplayList(gfx_motos_Lfoot_2),
+
+	gsSPTexture(0xffff, 0xffff, 0, 0, G_OFF),
+
+	gsDPPipeSync(),
+	gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+	gsSPEndDisplayList() 
+};
+const Gfx RCP_motos_basedata_A7[]={
+	gsSPLight((&light_motos_basedata_A[0].l[0]),1),
+	gsSPLight((&light_motos_basedata_A[0].a),2),
+	gsSPVertex(&vtx_motos_basedata_A7[0],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(3,4,2,0),
+	gsSP1Triangle(3,2,1,0),
+	gsSP1Triangle(5,6,4,0),
+	gsSP1Triangle(5,4,3,0),
+	gsSP1Triangle(7,8,6,0),
+	gsSP1Triangle(7,6,5,0),
+	gsSP1Triangle(9,10,8,0),
+	gsSP1Triangle(9,8,7,0),
+	gsSP1Triangle(11,12,10,0),
+	gsSP1Triangle(11,10,9,0),
+	gsSP1Triangle(13,14,12,0),
+	gsSP1Triangle(13,12,11,0),
+	gsSP1Triangle(15,14,13,0),
+	gsSPVertex(&vtx_motos_basedata_A7[16],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(3,4,2,0),
+	gsSP1Triangle(3,2,1,0),
+	gsSP1Triangle(5,6,4,0),
+	gsSP1Triangle(5,4,3,0),
+	gsSP1Triangle(7,8,6,0),
+	gsSP1Triangle(7,6,5,0),
+	gsSP1Triangle(9,10,8,0),
+	gsSP1Triangle(9,8,7,0),
+	gsSP1Triangle(11,12,10,0),
+	gsSP1Triangle(11,10,9,0),
+	gsSP1Triangle(13,14,12,0),
+	gsSP1Triangle(13,12,11,0),
+	gsSP1Triangle(15,14,13,0),
+	gsSPVertex(&vtx_motos_basedata_A7[32],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(3,4,2,0),
+	gsSP1Triangle(3,2,1,0),
+	gsSP1Triangle(5,6,4,0),
+	gsSP1Triangle(5,4,3,0),
+	gsSP1Triangle(7,8,6,0),
+	gsSP1Triangle(7,6,5,0),
+	gsSP1Triangle(9,10,8,0),
+	gsSP1Triangle(9,8,7,0),
+	gsSP1Triangle(11,12,10,0),
+	gsSP1Triangle(11,10,9,0),
+	gsSP1Triangle(13,14,12,0),
+	gsSP1Triangle(13,12,11,0),
+	gsSP1Triangle(15,14,13,0),
+	gsSPVertex(&vtx_motos_basedata_A7[48],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(3,4,2,0),
+	gsSP1Triangle(3,2,1,0),
+	gsSP1Triangle(5,6,4,0),
+	gsSP1Triangle(5,4,3,0),
+	gsSP1Triangle(7,8,6,0),
+	gsSP1Triangle(7,6,5,0),
+	gsSP1Triangle(9,10,8,0),
+	gsSP1Triangle(9,8,7,0),
+	gsSP1Triangle(11,12,10,0),
+	gsSP1Triangle(11,10,9,0),
+	gsSP1Triangle(13,14,12,0),
+	gsSP1Triangle(13,12,11,0),
+	gsSP1Triangle(15,14,13,0),
+	gsSPVertex(&vtx_motos_basedata_A7[64],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(3,4,2,0),
+	gsSP1Triangle(3,2,1,0),
+	gsSP1Triangle(5,6,4,0),
+	gsSP1Triangle(5,4,3,0),
+	gsSP1Triangle(7,8,6,0),
+	gsSP1Triangle(7,6,5,0),
+	gsSP1Triangle(9,10,8,0),
+	gsSP1Triangle(9,8,7,0),
+	gsSP1Triangle(11,12,10,0),
+	gsSP1Triangle(11,10,9,0),
+	gsSP1Triangle(13,14,12,0),
+	gsSP1Triangle(13,12,11,0),
+	gsSP1Triangle(15,14,13,0),
+	gsSPVertex(&vtx_motos_basedata_A7[80],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(3,4,2,0),
+	gsSP1Triangle(3,2,1,0),
+	gsSP1Triangle(5,6,4,0),
+	gsSP1Triangle(5,4,3,0),
+	gsSP1Triangle(7,8,6,0),
+	gsSP1Triangle(7,6,5,0),
+	gsSP1Triangle(9,10,8,0),
+	gsSP1Triangle(9,8,7,0),
+	gsSP1Triangle(11,12,10,0),
+	gsSP1Triangle(11,10,9,0),
+	gsSP1Triangle(13,14,12,0),
+	gsSP1Triangle(13,12,11,0),
+	gsSP1Triangle(15,14,13,0),
+	gsSPVertex(&vtx_motos_basedata_A7[96],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(3,4,2,0),
+	gsSP1Triangle(3,2,1,0),
+	gsSP1Triangle(5,6,4,0),
+	gsSP1Triangle(5,4,3,0),
+	gsSP1Triangle(7,8,6,0),
+	gsSP1Triangle(7,6,5,0),
+	gsSP1Triangle(9,10,8,0),
+	gsSP1Triangle(9,8,7,0),
+	gsSP1Triangle(11,12,10,0),
+	gsSP1Triangle(11,10,9,0),
+	gsSP1Triangle(13,14,12,0),
+	gsSP1Triangle(13,12,11,0),
+	gsSP1Triangle(15,14,13,0),
+	gsSPVertex(&vtx_motos_basedata_A7[112],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(3,4,2,0),
+	gsSP1Triangle(3,2,1,0),
+	gsSP1Triangle(5,6,4,0),
+	gsSP1Triangle(5,4,3,0),
+	gsSP1Triangle(7,8,6,0),
+	gsSP1Triangle(7,6,5,0),
+	gsSP1Triangle(9,10,8,0),
+	gsSP1Triangle(9,8,7,0),
+	gsSP1Triangle(11,12,10,0),
+	gsSP1Triangle(11,10,9,0),
+	gsSP1Triangle(13,14,12,0),
+	gsSP1Triangle(13,12,11,0),
+	gsSP1Triangle(15,14,13,0),
+	gsSPEndDisplayList()
+};
+const Gfx gfx_motos_Rfoot_0[] = {
+	gs_Tani_LoadTextureImage2(motos_skinC_txt, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0, 7),
+	gsSPLight((&light_motos_basedata_A[5].l[0]),1 ),
+	gsSPLight((&light_motos_basedata_A[5].a   ),2 ),
+	gsSPVertex(&vtx_motos_Rfoot[0], 15, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSP1Triangle( 3, 4, 5, 0),
+	gsSP1Triangle( 6, 7, 8, 0),
+	gsSP1Triangle( 9,10,11, 0),
+	gsSP1Triangle(12,13,14, 0),
+	gsSPVertex(&vtx_motos_Rfoot[15], 13, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSP1Triangle( 3, 4, 5, 0),
+	gsSP1Triangle( 6, 7, 8, 0),
+	gsSP1Triangle( 9,10,11, 0),
+	gsSP1Triangle( 0, 2,12, 0),
+	gsSPEndDisplayList() 
+};
+
+const Gfx gfx_motos_Rfoot_1[] = {
+	gs_Tani_LoadTextureImage2(motos_skinD_txt, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0, 7),
+	gsSPVertex(&vtx_motos_Rfoot[28],  6, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSP1Triangle( 0, 3, 4, 0),
+	gsSP1Triangle( 0, 5, 1, 0),
+	gsSP1Triangle( 0, 4, 5, 0),
+	gsSPEndDisplayList() 
+};
+
+const Gfx gfx_motos_Rfoot_2[] = {
+	gs_Tani_LoadTextureImage2(motos_skinA_txt, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0, 7),
+	gsSPVertex(&vtx_motos_Rfoot[34],  4, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSP1Triangle( 0, 3, 1, 0),
+	gsSPEndDisplayList() 
+};
+
+const Gfx RCP_motos_Rfoot[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineMode(G_CC_MODULATERGB, G_CC_MODULATERGB),
+	gsDPSetTile(G_IM_FMT_RGBA,G_IM_SIZ_16b, 0, 0, 7, 0,  0,0,0, 0,0,0),
+
+	gsSPTexture(0xffff,0xffff, 0, 0, G_ON),
+
+	gs_Tani_SetUpTileDescrip(G_IM_FMT_RGBA,G_IM_SIZ_16b, 32, 32,  0, 0, G_TX_WRAP|G_TX_NOMIRROR, 5, G_TX_NOLOD, G_TX_WRAP|G_TX_NOMIRROR, 5, G_TX_NOLOD),
+
+		gsSPDisplayList(gfx_motos_Rfoot_0),
+		gsSPDisplayList(gfx_motos_Rfoot_1),
+		gsSPDisplayList(gfx_motos_Rfoot_2),
+
+	gsSPTexture(0xffff, 0xffff, 0, 0, G_OFF),
+
+	gsDPPipeSync(),
+	gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+	gsSPEndDisplayList() 
+};
+const Gfx RCP_motos_basedata_A9[]={
+	gsSPLight((&light_motos_basedata_A[0].l[0]),1),
+	gsSPLight((&light_motos_basedata_A[0].a),2),
+	gsSPVertex(&vtx_motos_basedata_A9[0],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPVertex(&vtx_motos_basedata_A9[16],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPVertex(&vtx_motos_basedata_A9[32],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPVertex(&vtx_motos_basedata_A9[48],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPVertex(&vtx_motos_basedata_A9[64],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPVertex(&vtx_motos_basedata_A9[80],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPVertex(&vtx_motos_basedata_A9[96],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPVertex(&vtx_motos_basedata_A9[112],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPEndDisplayList()
+};
+const Gfx gfx_motos_head_0[] = {
+	gs_Tani_LoadTextureImage2(motos_skinC_txt, G_IM_FMT_RGBA, G_IM_SIZ_16b, 32, 32, 0, 7),
+	gsSPLight((&light_motos_basedata_A[5].l[0]),1 ),
+	gsSPLight((&light_motos_basedata_A[5].a   ),2 ),
+	gsSPVertex(&vtx_motos_head_0[0], 15, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSP1Triangle( 3, 4, 5, 0),
+	gsSP1Triangle( 6, 7, 8, 0),
+	gsSP1Triangle( 9,10,11, 0),
+	gsSP1Triangle(12,13,14, 0),
+	gsSPVertex(&vtx_motos_head_0[15],  3, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSPEndDisplayList() 
+};
+
+const Gfx gfx_motos_head_1[] = {
+	gs_Tani_LoadTextureImage2(motos_eye_txt, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, 7),
+	gsSPVertex(&vtx_motos_head_1[0],  4, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSP1Triangle( 0, 3, 1, 0),
+	gsSPEndDisplayList() 
+};
+
+const Gfx gfx_motos_head_2[] = {
+	gs_Tani_LoadTextureImage2(motos_skinB_txt, G_IM_FMT_RGBA, G_IM_SIZ_16b, 64, 32, 0, 7),
+	gsSPVertex(&vtx_motos_head_2[0], 15, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSP1Triangle( 3, 4, 5, 0),
+	gsSP1Triangle( 3, 6, 4, 0),
+	gsSP1Triangle( 7, 8, 9, 0),
+	gsSP1Triangle( 7,10, 8, 0),
+	gsSP1Triangle(11,12,13, 0),
+	gsSP1Triangle(11,14,12, 0),
+	gsSPVertex(&vtx_motos_head_2[15],  7, 0), 
+	gsSP1Triangle( 0, 1, 2, 0),
+	gsSP1Triangle( 3, 4, 5, 0),
+	gsSP1Triangle( 0, 2, 6, 0),
+	gsSPEndDisplayList() 
+};
+
+const Gfx RCP_motos_head[] = {
+	gsDPPipeSync(),
+	gsDPSetCombineMode(G_CC_MODULATERGB, G_CC_MODULATERGB),
+	gsDPSetTile(G_IM_FMT_RGBA,G_IM_SIZ_16b, 0, 0, 7, 0,  0,0,0, 0,0,0),
+
+	gsSPTexture(0xffff,0xffff, 0, 0, G_ON),
+
+	gs_Tani_SetUpTileDescrip(G_IM_FMT_RGBA,G_IM_SIZ_16b, 32, 32,  0, 0, G_TX_WRAP|G_TX_NOMIRROR, 5, G_TX_NOLOD, G_TX_WRAP|G_TX_NOMIRROR, 5, G_TX_NOLOD),
+
+		gsSPDisplayList(gfx_motos_head_0),
+
+	gs_Tani_SetUpTileDescrip(G_IM_FMT_RGBA,G_IM_SIZ_16b, 64, 32,  0, 0, G_TX_WRAP|G_TX_NOMIRROR, 6, G_TX_NOLOD, G_TX_WRAP|G_TX_NOMIRROR, 5, G_TX_NOLOD),
+
+		gsSPDisplayList(gfx_motos_head_1),
+		gsSPDisplayList(gfx_motos_head_2),
+
+	gsSPTexture(0xffff, 0xffff, 0, 0, G_OFF),
+
+	gsDPPipeSync(),
+	gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),
+	gsSPEndDisplayList() 
+};
+
+const Gfx RCP_motos_basedata_A11[]={
+	gsSPLight((&light_motos_basedata_A[2].l[0]),1),
+	gsSPLight((&light_motos_basedata_A[2].a),2),
+	gsSPVertex(&vtx_motos_basedata_A11[0],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPVertex(&vtx_motos_basedata_A11[16],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPVertex(&vtx_motos_basedata_A11[32],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPVertex(&vtx_motos_basedata_A11[48],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPVertex(&vtx_motos_basedata_A11[64],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPVertex(&vtx_motos_basedata_A11[80],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPVertex(&vtx_motos_basedata_A11[96],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPVertex(&vtx_motos_basedata_A11[112],16,0),
+	gsSP1Triangle(0,1,2,0),
+	gsSP1Triangle(1,0,3,0),
+	gsSP1Triangle(1,3,4,0),
+	gsSP1Triangle(4,3,5,0),
+	gsSP1Triangle(4,5,6,0),
+	gsSP1Triangle(6,5,7,0),
+	gsSP1Triangle(6,7,8,0),
+	gsSP1Triangle(8,7,9,0),
+	gsSP1Triangle(8,9,10,0),
+	gsSP1Triangle(10,9,11,0),
+	gsSP1Triangle(10,11,12,0),
+	gsSP1Triangle(12,11,13,0),
+	gsSP1Triangle(12,13,14,0),
+	gsSP1Triangle(14,13,15,0),
+	gsSPEndDisplayList()
+};
diff --git a/data/behavior_data.c b/data/behavior_data.c
index 31f7db5..21fda5a 100644
--- a/data/behavior_data.c
+++ b/data/behavior_data.c
@@ -3657,19 +3657,27 @@ const BehaviorScript bhvActSelector[] = {
 
 const BehaviorScript bhvMovingYellowCoin[] = {
     BEGIN(OBJ_LIST_LEVEL),
+    CALL_NATIVE(bhv_moving_yellow_coin_init),
+    // Moving coin general
     OR_INT(oFlags, OBJ_FLAG_UPDATE_GFX_POS_AND_ANGLE),
     BILLBOARD(),
     SET_HITBOX(/*Radius*/ 100, /*Height*/ 64),
     SET_INT(oInteractType, INTERACT_COIN),
     SET_INT(oIntangibleTimer, 0),
     SET_INT(oAnimState, -1),
-    CALL_NATIVE(bhv_moving_yellow_coin_init),
     BEGIN_LOOP(),
         CALL_NATIVE(bhv_moving_yellow_coin_loop),
         ADD_INT(oAnimState, 1),
     END_LOOP(),
 };
 
+// Uses a combination of behaviors in order to have correct movement
+const BehaviorScript bhvBlueCoinMotos[] = {
+    BEGIN(OBJ_LIST_LEVEL),
+    CALL_NATIVE(bhv_moving_blue_coin_init),
+    GOTO(bhvMovingYellowCoin + 1 + 2),
+};
+
 const BehaviorScript bhvMovingBlueCoin[] = {
     BEGIN(OBJ_LIST_LEVEL),
     OR_INT(oFlags, OBJ_FLAG_UPDATE_GFX_POS_AND_ANGLE),
@@ -4112,6 +4120,29 @@ const BehaviorScript bhvBigChillBully[] = {
     END_LOOP(),
 };
 
+const BehaviorScript bhvMotosHand[] = {
+    BEGIN(OBJ_LIST_GENACTOR),
+    OR_INT(oFlags, (OBJ_FLAG_UPDATE_GFX_POS_AND_ANGLE | OBJ_FLAG_SET_FACE_YAW_TO_MOVE_YAW)),
+    BILLBOARD(),
+    BEGIN_LOOP(),
+        CALL_NATIVE(bhv_motos_hand_loop),
+    END_LOOP(),
+};
+
+const BehaviorScript bhvMotos[] = {
+    BEGIN(OBJ_LIST_GENACTOR),
+    OR_INT(oFlags, (OBJ_FLAG_UPDATE_GFX_POS_AND_ANGLE | OBJ_FLAG_SET_FACE_YAW_TO_MOVE_YAW | OBJ_FLAG_HOLDABLE | OBJ_FLAG_COMPUTE_DIST_TO_MARIO | OBJ_FLAG_COMPUTE_ANGLE_TO_MARIO)),
+    LOAD_ANIMATIONS(oAnimations, motos_anime),
+    SET_INT(oInteractType, INTERACT_GRABBABLE),
+    SET_HITBOX(/*Radius*/ 100, /*Height*/ 100),
+    SET_OBJ_PHYSICS(/*Wall hitbox radius*/ 30, /*Gravity*/ -400, /*Bounciness*/ -50, /*Drag strength*/ 1000, /*Friction*/ 1000, /*Buoyancy*/ 200, /*Unused*/ 0, 0),
+    SPAWN_OBJ(/*Model*/ MODEL_NONE, /*Behavior*/ bhvMotosHand),
+    SET_INT(oIntangibleTimer, 0),
+    BEGIN_LOOP(),
+        CALL_NATIVE(bhv_motos_loop),
+    END_LOOP(),
+};
+
 const BehaviorScript bhvJetStreamRingSpawner[] = {
     BEGIN(OBJ_LIST_DEFAULT),
     HIDE(),
@@ -6105,5 +6136,3 @@ const BehaviorScript bhvIntroScene[] = {
         CALL_NATIVE(bhv_intro_scene_loop),
     END_LOOP(),
 };
-
-
diff --git a/include/behavior_data.h b/include/behavior_data.h
index 6a92882..5a38714 100644
--- a/include/behavior_data.h
+++ b/include/behavior_data.h
@@ -323,6 +323,7 @@ extern const BehaviorScript bhvMenuButtonManager[];
 extern const BehaviorScript bhvActSelectorStarType[];
 extern const BehaviorScript bhvActSelector[];
 extern const BehaviorScript bhvMovingYellowCoin[];
+extern const BehaviorScript bhvBlueCoinMotos[];
 extern const BehaviorScript bhvMovingBlueCoin[];
 extern const BehaviorScript bhvBlueCoinSliding[];
 extern const BehaviorScript bhvBlueCoinJumping[];
@@ -361,6 +362,8 @@ extern const BehaviorScript bhvBigBully[];
 extern const BehaviorScript bhvBigBullyWithMinions[];
 extern const BehaviorScript bhvSmallChillBully[];
 extern const BehaviorScript bhvBigChillBully[];
+extern const BehaviorScript bhvMotosHand[];
+extern const BehaviorScript bhvMotos[];
 extern const BehaviorScript bhvJetStreamRingSpawner[];
 extern const BehaviorScript bhvJetStreamWaterRing[];
 extern const BehaviorScript bhvMantaRayWaterRing[];
diff --git a/include/model_ids.h b/include/model_ids.h
index 1cd0a25..9aa6639 100644
--- a/include/model_ids.h
+++ b/include/model_ids.h
@@ -345,6 +345,7 @@
 #define MODEL_BLARGG                      0x54        // blargg_geo
 #define MODEL_BULLY                       0x56        // bully_geo
 #define MODEL_BULLY_BOSS                  0x57        // bully_boss_geo
+#define MODEL_MOTOS                       0x58        // betah motos
 
 // group 3
 #define MODEL_WATER_BOMB                  0x54        // water_bomb_geo
diff --git a/include/segments.h b/include/segments.h
index 8963446..47f8203 100644
--- a/include/segments.h
+++ b/include/segments.h
@@ -11,6 +11,8 @@
  * linker script syntax.
 */
 
+#define USE_EXT_RAM
+
 #ifndef USE_EXT_RAM /* Default: Runs out of memory quickly when importing custom assets. */
 
 #define SEG_POOL_START   0x8005C000
diff --git a/levels/lll/script.c b/levels/lll/script.c
index 1322d6c..4762afa 100644
--- a/levels/lll/script.c
+++ b/levels/lll/script.c
@@ -69,10 +69,10 @@ static const LevelScript script_func_local_4[] = {
     OBJECT(/*model*/ MODEL_NONE,            /*pos*/ -3199,  307,  3456, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvMrI),
     OBJECT(/*model*/ MODEL_BULLY_BOSS,      /*pos*/     0,  307, -4385, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvBigBully),
     OBJECT(/*model*/ MODEL_BULLY_BOSS,      /*pos*/  4046, 2234, -5521, /*angle*/ 0,   0, 0, /*behParam*/ 0x01000000, /*beh*/ bhvBigBullyWithMinions),
-    OBJECT(/*model*/ MODEL_BULLY,           /*pos*/ -5119,  307, -2482, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvSmallBully),
-    OBJECT(/*model*/ MODEL_BULLY,           /*pos*/     0,  307,  3712, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvSmallBully),
+    OBJECT(/*model*/ MODEL_MOTOS,           /*pos*/ -5119,  307, -2482, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvMotos),
+    OBJECT(/*model*/ MODEL_MOTOS,           /*pos*/     0,  307,  3712, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvMotos),
     OBJECT(/*model*/ MODEL_BULLY,           /*pos*/  6813,  307,  1613, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvSmallBully),
-    OBJECT(/*model*/ MODEL_BULLY,           /*pos*/  7168,  307,   998, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvSmallBully),
+    OBJECT(/*model*/ MODEL_MOTOS,           /*pos*/  7168,  307,   998, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvMotos),
     OBJECT(/*model*/ MODEL_BULLY,           /*pos*/ -5130,  285, -1663, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvSmallBully),
     OBJECT(/*model*/ MODEL_NONE,            /*pos*/     0,  200, -2048, /*angle*/ 0,   0, 0, /*behParam*/ 0x00000000, /*beh*/ bhvFlamethrower),
     OBJECT(/*model*/ MODEL_NONE,            /*pos*/   500,    2,  5000, /*angle*/ 0, 270, 0, /*behParam*/ 0x00000000, /*beh*/ bhvBouncingFireball),
diff --git a/levels/scripts.c b/levels/scripts.c
index 972c9ad..a5ce496 100644
--- a/levels/scripts.c
+++ b/levels/scripts.c
@@ -210,6 +210,7 @@ const LevelScript script_func_global_3[] = {
     LOAD_MODEL_FROM_GEO(MODEL_BLARGG,                  blargg_geo),
     LOAD_MODEL_FROM_GEO(MODEL_BULLY,                   bully_geo),
     LOAD_MODEL_FROM_GEO(MODEL_BULLY_BOSS,              bully_boss_geo),
+    LOAD_MODEL_FROM_GEO(MODEL_MOTOS, RCP_HmsEnemymotos_basedata_A),
     RETURN(),
 };
 
diff --git a/src/game/behavior_actions.h b/src/game/behavior_actions.h
index ba6e99b..161a253 100644
--- a/src/game/behavior_actions.h
+++ b/src/game/behavior_actions.h
@@ -551,6 +551,8 @@ void bhv_intro_scene_loop(void);
 void bhv_dust_smoke_loop(void);
 void bhv_yoshi_loop(void);
 void bhv_volcano_trap_loop(void);
+void bhv_motos_loop(void);
+void bhv_motos_hand_loop(void);
 
 Gfx *geo_move_mario_part_from_parent(s32 run, UNUSED struct GraphNode *node, Mat4 mtx);
 
diff --git a/src/game/behaviors/motos.inc.c b/src/game/behaviors/motos.inc.c
new file mode 100644
index 0000000..c96c8c8
--- /dev/null
+++ b/src/game/behaviors/motos.inc.c
@@ -0,0 +1,204 @@
+enum sMotosActions {
+    MOTOS_ACT_WAIT,
+    MOTOS_ACT_PLAYER_SEARCH,
+    MOTOS_ACT_PLAYER_CARRY,
+    MOTOS_ACT_PLAYER_PITCH,
+    MOTOS_ACT_CARRY_RUN,
+    MOTOS_ACT_THROWN,
+    MOTOS_ACT_RECOVER,
+    MOTOS_ACT_DEATH
+};
+
+enum sMotosAnimations {
+    MOTOS_ANIM_BASE,
+    MOTOS_ANIM_CARRY,
+    MOTOS_ANIM_CARRY_RUN,
+    MOTOS_ANIM_CARRY_START,
+    MOTOS_ANIM_DOWN_RECOVER,
+    MOTOS_ANIM_DOWN_STOP,
+    MOTOS_ANIM_PITCH,
+    MOTOS_ANIM_SAFE_DOWN,
+    MOTOS_ANIM_WAIT,
+    MOTOS_ANIM_WALK,
+    MOTOS_ANIM_END
+};
+
+// All changes made to the original code have been commented.
+
+// Modified, original did not make sense, it checked if Mario was close and in front, but he is always close and in front when being held
+// Now it goes off either a timer or when reached an edge
+s32 bhv_motos_do_throw_mario() {
+    return (o->oTimer > 45) || (o->oMoveFlags & OBJ_MOVE_HIT_EDGE);
+    // Original:
+    // return (cur_obj_rotate_yaw_toward(o->oAngleToMario, 0x200)) || (o->oDistanceToMario < 500.f)
+}
+
+void bhv_motos_hand_loop(void) {
+    o->oParentRelativePosY = -30.f;
+    o->oParentRelativePosX = -70.f; // Changed relative pos to make Mario fit in the hand better
+
+    common_anchor_mario_behavior(50.0f, 30.0f, 64); // Used common func instead of repeating code
+    // Also vert speed increased from 0 to 50
+    if (o->oChuckyaUnk88 == 1)
+        vec3f_copy(gMarioState->pos, gMarioObject->header.gfx.pos); // Added to fix camera
+}
+
+void bhv_motos_wait(void) {
+    o->oForwardVel = 0.f;
+    o->oVelY = 0.f;
+    
+    cur_obj_init_animation_with_sound(MOTOS_ANIM_WAIT);
+    
+    if (o->oDistanceToMario < 500.f) {
+        o->oAction = MOTOS_ACT_PLAYER_SEARCH;
+    }
+}
+
+void bhv_motos_player_search(void) {
+    cur_obj_init_animation_with_sound(MOTOS_ANIM_WALK);
+    o->oForwardVel = 5.f; // Sped up (was 2.f)
+    cur_obj_rotate_yaw_toward(o->oAngleToMario, 800); // Sped up (was 300)
+    
+    if (o->oInteractStatus & INT_STATUS_GRABBED_MARIO) {
+        o->oAction = MOTOS_ACT_PLAYER_CARRY;
+        o->oChuckyaUnk88 = 1;
+    }
+}
+
+void bhv_motos_player_carry(void) {
+    // Replaced with the similar MOTOS_ACT_CARRY_START, which allows for running
+    cur_obj_init_animation_with_sound(MOTOS_ANIM_CARRY_START);
+    
+    if (cur_obj_check_if_near_animation_end()) {
+        if (bhv_motos_do_throw_mario())
+            o->oAction = MOTOS_ACT_PLAYER_PITCH;
+        else
+            o->oAction = MOTOS_ACT_CARRY_RUN;
+    }
+}
+
+void bhv_motos_player_pitch(void) {
+    o->oForwardVel = 0.f;
+    cur_obj_init_animation_with_sound(MOTOS_ANIM_PITCH);
+    
+    if (cur_obj_check_anim_frame(14)) {
+        o->oChuckyaUnk88 = 2;
+        o->numCollidedObjs = 10;
+    }
+    
+    if (cur_obj_check_if_near_animation_end()) {
+        o->oAction = MOTOS_ACT_WAIT;
+        o->oInteractStatus &= (~INT_STATUS_GRABBED_MARIO);
+    }
+}
+
+void bhv_motos_carry_run(void) {
+    o->oForwardVel = 15.f; // Sped up (was 5.f)
+    cur_obj_init_animation_with_sound(MOTOS_ANIM_CARRY_RUN);
+    
+    if (bhv_motos_do_throw_mario())
+        o->oAction = MOTOS_ACT_PLAYER_PITCH;
+    // Useless else clause removed
+}
+
+void bhv_motos_thrown(void) {
+    cur_obj_init_animation_with_sound(MOTOS_ANIM_WALK);
+    
+    if (o->oMoveFlags & OBJ_MOVE_LANDED) {
+        o->oAction = MOTOS_ACT_RECOVER; // New action: recover (used to go straight back into wait)
+        cur_obj_play_sound_2(SOUND_OBJ2_LARGE_BULLY_ATTACKED);
+    }
+}
+
+void bhv_motos_recover(void) {
+    // These animations were originally unused. This plays the falling over animation and then he gets up.
+    o->oForwardVel = 0.f;
+    if (o->oSubAction == 0) {
+        cur_obj_init_animation_with_sound(MOTOS_ANIM_DOWN_STOP);
+        cur_obj_extend_animation_if_at_end();
+        if (o->oTimer > 35)
+            o->oSubAction++;
+        
+    } else if (o->oSubAction == 1) {
+        cur_obj_init_animation_with_sound(MOTOS_ANIM_DOWN_RECOVER);
+        if (cur_obj_check_if_near_animation_end())
+            o->oAction = MOTOS_ACT_WAIT;
+    }
+}
+
+void bhv_motos_death(void) {
+    // Taken from bully code to handle death
+    if (obj_lava_death()) {
+        struct Object *coin = spawn_object(o, MODEL_BLUE_COIN, bhvBlueCoinMotos);
+        cur_obj_play_sound_2(SOUND_GENERAL_COIN_SPURT_2);
+        coin->oForwardVel = 10.0f;
+        coin->oVelY = 100.0f;
+        coin->oPosY = o->oPosY + 310.0f;
+        coin->oMoveAngleYaw = (f32)(o->oFaceAngleYaw + 0x8000) + random_float() * 1024.0f;
+    }
+}
+
+void bhv_motos_main() {
+    f32 floorY;
+
+    cur_obj_update_floor_and_walls();
+
+    switch (o->oAction) {
+        case MOTOS_ACT_WAIT:
+            bhv_motos_wait();
+            break;
+        case MOTOS_ACT_PLAYER_SEARCH:
+            bhv_motos_player_search();
+            break;
+        case MOTOS_ACT_PLAYER_CARRY:
+            bhv_motos_player_carry();
+            break;
+        case MOTOS_ACT_PLAYER_PITCH:
+            bhv_motos_player_pitch();
+            break;
+        case MOTOS_ACT_CARRY_RUN:
+            bhv_motos_carry_run();
+            break;
+        case MOTOS_ACT_THROWN:
+            bhv_motos_thrown();
+            break;
+        case MOTOS_ACT_RECOVER:
+            bhv_motos_recover();
+            break;
+    }
+    
+    cur_obj_move_standard(-78);
+    
+    // Added to detect lava death
+    floorY = find_floor(o->oPosX, o->oPosY, o->oPosZ, &sObjFloor);
+    if (sObjFloor != NULL) {
+        if ((floorY + 1.f > o->oPosY) && (sObjFloor->type == SURFACE_BURNING)) {
+            o->oAction = MOTOS_ACT_DEATH;
+        }
+    }
+}
+
+void bhv_motos_loop(void) {
+    cur_obj_scale(2.0f);
+    o->oInteractionSubtype |= INT_SUBTYPE_GRABS_MARIO;
+    
+    switch (o->oHeldState) {
+        case HELD_FREE:
+            // If clause to prevent Motos from updating physics while dying from lava
+            if (o->oAction == MOTOS_ACT_DEATH)
+                bhv_motos_death();
+            else
+                bhv_motos_main();
+            break;
+        case HELD_HELD:
+            cur_obj_unrender_and_reset_state(MOTOS_ANIM_WALK, MOTOS_ACT_WAIT);
+            break;
+        case HELD_THROWN:
+        case HELD_DROPPED:
+            cur_obj_get_thrown_or_placed(15.f, 35.f, MOTOS_ACT_THROWN);
+            break;
+    }
+    
+    o->oInteractStatus = 0; // Added because it doesnt work without this, cmon Nintendo
+    set_object_visibility(o, 8000); // Increased from 2000
+}
diff --git a/src/game/behaviors/moving_coin.inc.c b/src/game/behaviors/moving_coin.inc.c
index 5073ea4..1261db1 100644
--- a/src/game/behaviors/moving_coin.inc.c
+++ b/src/game/behaviors/moving_coin.inc.c
@@ -96,7 +96,7 @@ void bhv_moving_yellow_coin_loop(void) {
 }
 
 void bhv_moving_blue_coin_init(void) {
-    o->oGravity = 5.0f;
+    o->oGravity = 3.0f;
     o->oFriction = 1.0f;
     o->oBuoyancy = 1.5f;
 
diff --git a/src/game/obj_behaviors.c b/src/game/obj_behaviors.c
index 2c48174..11ff20c 100644
--- a/src/game/obj_behaviors.c
+++ b/src/game/obj_behaviors.c
@@ -852,3 +852,4 @@ s32 UNUSED debug_sequence_tracker(s16 debugInputSequence[]) {
 #include "behaviors/treasure_chest.inc.c"
 #include "behaviors/mips.inc.c"
 #include "behaviors/yoshi.inc.c"
+#include "behaviors/motos.inc.c"
